{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testFalloutHack",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260008054757109709ecfa91a80626ff3989d68f67f5b1dd12d000161ff01600160b01b0319909116179055600280546001600160a01b031916606417905534801561004e57600080fd5b506113ff8061005e6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630a9254e414610051578063ba414fa61461005b578063cd31e39e14610081578063fa7626d414610089575b600080fd5b610059610096565b005b60005461006d90610100900460ff1681565b604051901515815260200160405180910390f35b61005961014c565b60005461006d9060ff1681565b6040516100a290610598565b604051809103906000f0801580156100be573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b0392831617905560005460025460405163c88a5e6d60e01b81529083166004820152674563918244f400006024820152620100009091049091169063c88a5e6d90604401600060405180830381600087803b15801561013257600080fd5b505af1158015610146573d6000803e3d6000fd5b50505050565b600060405161015a906105a5565b604051809103906000f080158015610176573d6000803e3d6000fd5b5060015460405163080808f560e21b81526001600160a01b03808416600483015292935091169063202023d490602401600060405180830381600087803b1580156101c057600080fd5b505af11580156101d4573d6000803e3d6000fd5b50506000546002546040516303223eab60e11b81526001600160a01b039182166004820152620100009092041692506306447d569150602401600060405180830381600087803b15801561022757600080fd5b505af115801561023b573d6000803e3d6000fd5b505060015460405163dfc86b1760e01b81526001600160a01b03858116600483015260009450909116915063dfc86b17906024016020604051808303816000875af115801561028e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b291906105ca565b905060008190507f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f816001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610318573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033c91906105ca565b60408051818152601b818301527f46616c6c6f7574204f776e6572204265666f72652041747461636b000000000060608201526001600160a01b03929092166020830152519081900360800190a1806001600160a01b0316636fab5ddf60016040518263ffffffff1660e01b81526004016000604051808303818588803b1580156103c657600080fd5b505af11580156103da573d6000803e3d6000fd5b50505050507f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f816001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561043e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046291906105ca565b60408051818152601a818301527f46616c6c6f7574204f776e65722041667465722041747461636b00000000000060608201526001600160a01b03929092166020830152519081900360800190a16001546040516364416be160e11b81526001600160a01b038481166004830152600092169063c882d7c2906024016020604051808303816000875af11580156104fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052191906105ee565b9050600060029054906101000a90046001600160a01b03166001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561057357600080fd5b505af1158015610587573d6000803e3d6000fd5b505050508061014657610146610610565b6106338061062783390190565b61077080610c5a83390190565b6001600160a01b03811681146105c757600080fd5b50565b6000602082840312156105dc57600080fd5b81516105e7816105b2565b9392505050565b60006020828403121561060057600080fd5b815180151581146105e757600080fd5b634e487b7160e01b600052600160045260246000fdfe608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105b58061007e6000396000f3fe6080604052600436106100555760003560e01c8063202023d41461005a578063715018a61461007c5780638da5cb5b14610091578063c882d7c2146100c8578063dfc86b17146100f8578063f2fde38b1461010b575b600080fd5b34801561006657600080fd5b5061007a61007536600461051c565b61012b565b005b34801561008857600080fd5b5061007a61015a565b34801561009d57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100d457600080fd5b506100e86100e336600461051c565b61016e565b60405190151581526020016100bf565b6100ab61010636600461051c565b610297565b34801561011757600080fd5b5061007a61012636600461051c565b6103df565b61013361045d565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b61016261045d565b61016c60006104b7565b565b6001600160a01b03808216600090815260026020526040812080549192909116331461019957600080fd5b6001810154600160a01b900460ff16156101b257600080fd5b600181015460405163d38def5b60e01b81526001600160a01b0385811660048301523360248301529091169063d38def5b906044016020604051808303816000875af1158015610206573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022a9190610540565b1561028e57600181018054600160a01b60ff60a01b198216179091556040516001600160a01b03909116815233907f9dfdf7e3e630f506a3dfe38cdbe34e196353364235df33e5a3b588488d9a1e789060200160405180910390a250600192915050565b50600092915050565b6001600160a01b03811660009081526001602052604081205460ff166102bc57600080fd5b604051633b937bbb60e11b81523360048201526000906001600160a01b03841690637726f77690349060240160206040518083038185885af1158015610306573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061032b9190610562565b60408051606081018252338082526001600160a01b03878116602080850191825260008587018181528885168083526002845291889020965187549086166001600160a01b031990911617875592516001909601805493511515600160a01b026001600160a81b031990941696909416959095179190911790915592519182529293507f7bf7f1ed7f75e83b76de0ff139966989aff81cb85aac26469c18978d86aac1c2910160405180910390a292915050565b6103e761045d565b6001600160a01b0381166104515760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61045a816104b7565b50565b6000546001600160a01b0316331461016c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610448565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461045a57600080fd5b60006020828403121561052e57600080fd5b813561053981610507565b9392505050565b60006020828403121561055257600080fd5b8151801515811461053957600080fd5b60006020828403121561057457600080fd5b81516105398161050756fea26469706673582212200a6985217144b514a794ae8ed1f3c70df9de73effaa640beeadf7107e0d7778564736f6c63430008110033608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6106f28061007e6000396000f3fe60806040526004361061004a5760003560e01c8063715018a61461004f5780637726f776146100665780638da5cb5b14610096578063d38def5b146100b4578063f2fde38b146100e4575b600080fd5b34801561005b57600080fd5b50610064610104565b005b610079610074366004610319565b610118565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100a257600080fd5b506000546001600160a01b0316610079565b3480156100c057600080fd5b506100d46100cf36600461033d565b61014b565b604051901515815260200161008d565b3480156100f057600080fd5b506100646100ff366004610319565b6101cf565b61010c61024d565b61011660006102a7565b565b600080604051610127906102f7565b604051809103906000f080158015610143573d6000803e3d6000fd5b509392505050565b600080839050826001600160a01b0316816001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610199573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101bd9190610376565b6001600160a01b031614949350505050565b6101d761024d565b6001600160a01b0381166102415760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61024a816102a7565b50565b6000546001600160a01b031633146101165760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610238565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6103298061039483390190565b6001600160a01b038116811461024a57600080fd5b60006020828403121561032b57600080fd5b813561033681610304565b9392505050565b6000806040838503121561035057600080fd5b823561035b81610304565b9150602083013561036b81610304565b809150509250929050565b60006020828403121561038857600080fd5b81516103368161030456fe608060405234801561001057600080fd5b50610309806100206000396000f3fe6080604052600436106100555760003560e01c80636fab5ddf1461005a5780638aa96f38146100875780638da5cb5b1461009c578063a2dea26f146100d9578063abaa9916146100f9578063ffd40b5614610101575b600080fd5b610085600180546001600160a01b031916339081179091556000908152602081905260409020349055565b005b34801561009357600080fd5b50610085610145565b3480156100a857600080fd5b506001546100bc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100e557600080fd5b506100856100f436600461028e565b6101d2565b610085610238565b34801561010d57600080fd5b5061013761011c36600461028e565b6001600160a01b031660009081526020819052604090205490565b6040519081526020016100d0565b6001546001600160a01b031633146101a35760405162461bcd60e51b815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000604482015260640160405180910390fd5b60405133904780156108fc02916000818181858888f193505050501580156101cf573d6000803e3d6000fd5b50565b6001600160a01b0381166000908152602081905260409020546101f457600080fd5b6001600160a01b03811660008181526020819052604080822054905181156108fc0292818181858888f19350505050158015610234573d6000803e3d6000fd5b5050565b336000908152602081905260409020546102529034610264565b33600090815260208190526040902055565b600061027082846102b2565b90505b92915050565b6001600160a01b03811681146101cf57600080fd5b6000602082840312156102a057600080fd5b81356102ab81610279565b9392505050565b8082018082111561027357634e487b7160e01b600052601160045260246000fdfea2646970667358221220089d73c0385b0e7a17927e48a75327fd9b5baa6fe5713976bf1400307c8c3f0c64736f6c63430008110033a264697066735822122020f89a39249b6ab54a2c5eccc198714fd6dd8af3784ca295e18ce31bf2d2e35064736f6c63430008110033a26469706673582212200e908a39e67209612e810ab1c7e742306bfacdcc2450718aa0305011791e4d8164736f6c63430008110033",
    "sourceMap": "154:1565:82:-:0;;;1573:26:0;;;191:63:82;-1:-1:-1;;;;;;191:63:82;;;;;;;285:33;;-1:-1:-1;;;;;;285:33:82;314:3;285:33;;;154:1565;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "154:1565:82:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;325:198;;;:::i;:::-;;1605:18:0;;;;;;;;;;;;;;;179:14:100;;172:22;154:41;;142:2;127:18;1605::0;;;;;;;529:1188:82;;;:::i;1573:26:0:-;;;;;;;;;325:198:82;424:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;412:9:82;:27;;-1:-1:-1;;;;;;412:27:82;-1:-1:-1;;;;;412:27:82;;;;;;-1:-1:-1;488:2:82;;496:10;488:28;;-1:-1:-1;;;488:28:82;;496:10;;;488:28;;;406:51:100;508:7:82;473:18:100;;;466:34;488:2:82;;;;;;;;:7;;379:18:100;;488:28:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;325:198::o;529:1188::-;652:29;684:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;714:9:82;;:39;;-1:-1:-1;;;714:39:82;;-1:-1:-1;;;;;698:32:100;;;714:39:82;;;680:51:100;652:52:82;;-1:-1:-1;714:9:82;;;:23;;653:18:100;;714:39:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;763:2:82;;;777:10;763:25;;-1:-1:-1;;;763:25:82;;-1:-1:-1;;;;;777:10:82;;;763:25;;;680:51:100;763:2:82;;;;;;-1:-1:-1;763:13:82;;-1:-1:-1;653:18:100;;763:25:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;821:9:82;;:45;;-1:-1:-1;;;821:45:82;;-1:-1:-1;;;;;698:32:100;;;821:45:82;;;680:51:100;798:20:82;;-1:-1:-1;821:9:82;;;;-1:-1:-1;821:29:82;;653:18:100;;821:45:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;798:68;;876:24;919:12;876:57;;1155:108;1229:16;-1:-1:-1;;;;;1229:22:82;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1155:108;;;1826:21:100;;;1883:2;1863:18;;;1856:30;1922:29;1917:2;1902:18;;1895:57;-1:-1:-1;;;;;2026:32:100;;;;2019:4;2004:20;;1997:62;1155:108:82;;;;;1984:3:100;1155:108:82;;;1273:16;-1:-1:-1;;;;;1273:24:82;;1305:5;1273:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1328:107;1401:16;-1:-1:-1;;;;;1401:22:82;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1328:107;;;2290:21:100;;;2347:2;2327:18;;;2320:30;2386:28;2381:2;2366:18;;2359:56;-1:-1:-1;;;;;2489:32:100;;;;2482:4;2467:20;;2460:62;1328:107:82;;;;;2447:3:100;1328:107:82;;;1571:9;;:74;;-1:-1:-1;;;1571:74:82;;-1:-1:-1;;;;;698:32:100;;;1571:74:82;;;680:51:100;1540:28:82;;1571:9;;:29;;653:18:100;;1571:74:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1540:105;;1655:2;;;;;;;;;-1:-1:-1;;;;;1655:2:82;-1:-1:-1;;;;;1655:12:82;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1686:23;1679:31;;;;:::i;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;950:131:100:-;-1:-1:-1;;;;;1025:31:100;;1015:42;;1005:70;;1071:1;1068;1061:12;1005:70;950:131;:::o;1086:251::-;1156:6;1209:2;1197:9;1188:7;1184:23;1180:32;1177:52;;;1225:1;1222;1215:12;1177:52;1257:9;1251:16;1276:31;1301:5;1276:31;:::i;:::-;1326:5;1086:251;-1:-1:-1;;;1086:251:100:o;2757:277::-;2824:6;2877:2;2865:9;2856:7;2852:23;2848:32;2845:52;;;2893:1;2890;2883:12;2845:52;2925:9;2919:16;2978:5;2971:13;2964:21;2957:5;2954:32;2944:60;;3000:1;2997;2990:12;3039:127;3100:10;3095:3;3091:20;3088:1;3081:31;3131:4;3128:1;3121:15;3155:4;3152:1;3145:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testFalloutHack()": "cd31e39e"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testFalloutHack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Fallout.t.sol\":\"FalloutTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/ds-test/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/ds-test/src/test.sol\":{\"keccak256\":\"0x529f30c5939d75689f6a982f7f96b8898bed30bd90ec5b385b57cab681e12b00\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://89075d5a96e87acef1d00cf556b409d1836728ec2e92f5629ceb5cae3d1e4354\",\"dweb:/ipfs/QmPAViJrxffEDns9GEMVSAzmr3soAzfrEg1CVuovwmNfnt\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"src/BaseLevel.sol\":{\"keccak256\":\"0x96532046614f14ded4ed0582d37d1bfb6d8ce0423403094476ae9533323a5af8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b9e8bbc7f3c8d982885e58c27a2d063008abef55e70db5eae1358e3d5f7f5b0\",\"dweb:/ipfs/QmNpDPfDEeYYAdYM14p3ef3wgcgjNYjCqwXqKT6mVv8MK8\"]},\"src/Ethernaut.sol\":{\"keccak256\":\"0xdfd342f8053ad866770cc1a48c60e938dfa4a305c3b3fcdde1f60fd4fa7ad655\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28eabd1b8915a2615d24b7ed674f4a924f59ad7305ff481862d00382df3d0348\",\"dweb:/ipfs/QmPpaCPEZnCadgkzptPrD4hkaz6JuL5k5pS2TjaUCYAPZ6\"]},\"src/Fallout/Fallout.sol\":{\"keccak256\":\"0x893dafc752fac4795ba8a963110b8ddb5c0bdbb1554094f0953b3d50ed1a8c9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c511c3818190ee09a0d560a5f88478948b0fc933eadbe59ffdf8f07aa4bbdf48\",\"dweb:/ipfs/QmSRbr9q8peY5Arm49FjRiBJ2TRGWvSFNNuACoqpzuebfz\"]},\"src/Fallout/FalloutFactory.sol\":{\"keccak256\":\"0x2d265ae05c3410112470bb3f5d0df76aa27f5383160896bc0486828c3528725e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59521aa2821cea0c6f06e552f4f1b4db93fe630657a21fc825075b521a7040a9\",\"dweb:/ipfs/QmXD796wDCdcpQfw8ZqddbJpatcZ813d4AVv73tgRRhxCt\"]},\"test/Fallout.t.sol\":{\"keccak256\":\"0x3e7edc83c25283623cce2a763e090de60028b896e40e2d37ae7ee3537c91299d\",\"urls\":[\"bzz-raw://0abdbba37ddfb4ed5a41f6cfd75c26caeded4e289b21c8f4374ff755439f78e5\",\"dweb:/ipfs/QmfMsGpgvBXFVeWBXZT1aEz459REVDUm6K1xaN8fiWD7aa\"]},\"test/utils/vm.sol\":{\"keccak256\":\"0xc34f4b14c4d624ca1d6dbe5434a8328de77817a089067d661ba1a657f46289cc\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://a1dad3c6483f228f98c9e3c492a70277d9e9ef2f65f4153d6082f9b3acee4a7e\",\"dweb:/ipfs/QmXUrWED9yhK4C5LvWbYLEBexwqYgrxRzcefgdYYVB51xt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFalloutHack"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/ds-test/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Fallout.t.sol": "FalloutTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/ds-test/src/test.sol": {
        "keccak256": "0x529f30c5939d75689f6a982f7f96b8898bed30bd90ec5b385b57cab681e12b00",
        "urls": [
          "bzz-raw://89075d5a96e87acef1d00cf556b409d1836728ec2e92f5629ceb5cae3d1e4354",
          "dweb:/ipfs/QmPAViJrxffEDns9GEMVSAzmr3soAzfrEg1CVuovwmNfnt"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e",
        "urls": [
          "bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65",
          "dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN"
        ],
        "license": "MIT"
      },
      "src/BaseLevel.sol": {
        "keccak256": "0x96532046614f14ded4ed0582d37d1bfb6d8ce0423403094476ae9533323a5af8",
        "urls": [
          "bzz-raw://9b9e8bbc7f3c8d982885e58c27a2d063008abef55e70db5eae1358e3d5f7f5b0",
          "dweb:/ipfs/QmNpDPfDEeYYAdYM14p3ef3wgcgjNYjCqwXqKT6mVv8MK8"
        ],
        "license": "MIT"
      },
      "src/Ethernaut.sol": {
        "keccak256": "0xdfd342f8053ad866770cc1a48c60e938dfa4a305c3b3fcdde1f60fd4fa7ad655",
        "urls": [
          "bzz-raw://28eabd1b8915a2615d24b7ed674f4a924f59ad7305ff481862d00382df3d0348",
          "dweb:/ipfs/QmPpaCPEZnCadgkzptPrD4hkaz6JuL5k5pS2TjaUCYAPZ6"
        ],
        "license": "MIT"
      },
      "src/Fallout/Fallout.sol": {
        "keccak256": "0x893dafc752fac4795ba8a963110b8ddb5c0bdbb1554094f0953b3d50ed1a8c9e",
        "urls": [
          "bzz-raw://c511c3818190ee09a0d560a5f88478948b0fc933eadbe59ffdf8f07aa4bbdf48",
          "dweb:/ipfs/QmSRbr9q8peY5Arm49FjRiBJ2TRGWvSFNNuACoqpzuebfz"
        ],
        "license": "MIT"
      },
      "src/Fallout/FalloutFactory.sol": {
        "keccak256": "0x2d265ae05c3410112470bb3f5d0df76aa27f5383160896bc0486828c3528725e",
        "urls": [
          "bzz-raw://59521aa2821cea0c6f06e552f4f1b4db93fe630657a21fc825075b521a7040a9",
          "dweb:/ipfs/QmXD796wDCdcpQfw8ZqddbJpatcZ813d4AVv73tgRRhxCt"
        ],
        "license": "MIT"
      },
      "test/Fallout.t.sol": {
        "keccak256": "0x3e7edc83c25283623cce2a763e090de60028b896e40e2d37ae7ee3537c91299d",
        "urls": [
          "bzz-raw://0abdbba37ddfb4ed5a41f6cfd75c26caeded4e289b21c8f4374ff755439f78e5",
          "dweb:/ipfs/QmfMsGpgvBXFVeWBXZT1aEz459REVDUm6K1xaN8fiWD7aa"
        ],
        "license": null
      },
      "test/utils/vm.sol": {
        "keccak256": "0xc34f4b14c4d624ca1d6dbe5434a8328de77817a089067d661ba1a657f46289cc",
        "urls": [
          "bzz-raw://a1dad3c6483f228f98c9e3c492a70277d9e9ef2f65f4153d6082f9b3acee4a7e",
          "dweb:/ipfs/QmXUrWED9yhK4C5LvWbYLEBexwqYgrxRzcefgdYYVB51xt"
        ],
        "license": "Unlicense"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Fallout.t.sol",
    "id": 10359,
    "exportedSymbols": {
      "Context": [
        3004
      ],
      "DSTest": [
        1680
      ],
      "Ethernaut": [
        5303
      ],
      "Fallout": [
        5620
      ],
      "FalloutFactory": [
        5675
      ],
      "FalloutTest": [
        10358
      ],
      "Level": [
        3338
      ],
      "Ownable": [
        1793
      ],
      "SafeMath": [
        3316
      ],
      "Vm": [
        12761
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:1720:82",
    "nodes": [
      {
        "id": 10234,
        "nodeType": "PragmaDirective",
        "src": "0:24:82",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 10235,
        "nodeType": "ImportDirective",
        "src": "26:26:82",
        "nodes": [],
        "absolutePath": "lib/ds-test/src/test.sol",
        "file": "ds-test/test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10359,
        "sourceUnit": 1681,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10236,
        "nodeType": "ImportDirective",
        "src": "53:43:82",
        "nodes": [],
        "absolutePath": "src/Fallout/FalloutFactory.sol",
        "file": "../src/Fallout/FalloutFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10359,
        "sourceUnit": 5676,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10237,
        "nodeType": "ImportDirective",
        "src": "97:30:82",
        "nodes": [],
        "absolutePath": "src/Ethernaut.sol",
        "file": "../src/Ethernaut.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10359,
        "sourceUnit": 5304,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10238,
        "nodeType": "ImportDirective",
        "src": "128:24:82",
        "nodes": [],
        "absolutePath": "test/utils/vm.sol",
        "file": "./utils/vm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10359,
        "sourceUnit": 12762,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10358,
        "nodeType": "ContractDefinition",
        "src": "154:1565:82",
        "nodes": [
          {
            "id": 10249,
            "nodeType": "VariableDeclaration",
            "src": "191:63:82",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "vm",
            "nameLocation": "194:2:82",
            "scope": 10358,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Vm_$12761",
              "typeString": "contract Vm"
            },
            "typeName": {
              "id": 10242,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10241,
                "name": "Vm",
                "nameLocations": [
                  "191:2:82"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 12761,
                "src": "191:2:82"
              },
              "referencedDeclaration": 12761,
              "src": "191:2:82",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$12761",
                "typeString": "contract Vm"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "307837313039373039454366613931613830363236664633393839443638663637463562314444313244",
                      "id": 10246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "210:42:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0x7109709ECfa91a80626fF3989D68f67F5b1DD12D"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    ],
                    "id": 10245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "202:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 10244,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "202:7:82",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 10247,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "202:51:82",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 10243,
                "name": "Vm",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 12761,
                "src": "199:2:82",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_Vm_$12761_$",
                  "typeString": "type(contract Vm)"
                }
              },
              "id": 10248,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "199:55:82",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$12761",
                "typeString": "contract Vm"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 10252,
            "nodeType": "VariableDeclaration",
            "src": "260:19:82",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "ethernaut",
            "nameLocation": "270:9:82",
            "scope": 10358,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Ethernaut_$5303",
              "typeString": "contract Ethernaut"
            },
            "typeName": {
              "id": 10251,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10250,
                "name": "Ethernaut",
                "nameLocations": [
                  "260:9:82"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5303,
                "src": "260:9:82"
              },
              "referencedDeclaration": 5303,
              "src": "260:9:82",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ethernaut_$5303",
                "typeString": "contract Ethernaut"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 10258,
            "nodeType": "VariableDeclaration",
            "src": "285:33:82",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "eoaAddress",
            "nameLocation": "293:10:82",
            "scope": 10358,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 10253,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "285:7:82",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "313030",
                  "id": 10256,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "314:3:82",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_100_by_1",
                    "typeString": "int_const 100"
                  },
                  "value": "100"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_100_by_1",
                    "typeString": "int_const 100"
                  }
                ],
                "id": 10255,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "306:7:82",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 10254,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "306:7:82",
                  "typeDescriptions": {}
                }
              },
              "id": 10257,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "306:12:82",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 10276,
            "nodeType": "FunctionDefinition",
            "src": "325:198:82",
            "nodes": [],
            "body": {
              "id": 10275,
              "nodeType": "Block",
              "src": "349:174:82",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 10266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10261,
                      "name": "ethernaut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10252,
                      "src": "412:9:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Ethernaut_$5303",
                        "typeString": "contract Ethernaut"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 10264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "424:13:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Ethernaut_$5303_$",
                          "typeString": "function () returns (contract Ethernaut)"
                        },
                        "typeName": {
                          "id": 10263,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 10262,
                            "name": "Ethernaut",
                            "nameLocations": [
                              "428:9:82"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 5303,
                            "src": "428:9:82"
                          },
                          "referencedDeclaration": 5303,
                          "src": "428:9:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Ethernaut_$5303",
                            "typeString": "contract Ethernaut"
                          }
                        }
                      },
                      "id": 10265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "424:15:82",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Ethernaut_$5303",
                        "typeString": "contract Ethernaut"
                      }
                    },
                    "src": "412:27:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Ethernaut_$5303",
                      "typeString": "contract Ethernaut"
                    }
                  },
                  "id": 10267,
                  "nodeType": "ExpressionStatement",
                  "src": "412:27:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10271,
                        "name": "eoaAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10258,
                        "src": "496:10:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 10272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "508:7:82",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 10268,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10249,
                        "src": "488:2:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12761",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 10270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "491:4:82",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12680,
                      "src": "488:7:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 10273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "488:28:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10274,
                  "nodeType": "ExpressionStatement",
                  "src": "488:28:82"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "334:5:82",
            "parameters": {
              "id": 10259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "339:2:82"
            },
            "returnParameters": {
              "id": 10260,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "349:0:82"
            },
            "scope": 10358,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 10357,
            "nodeType": "FunctionDefinition",
            "src": "529:1188:82",
            "nodes": [],
            "body": {
              "id": 10356,
              "nodeType": "Block",
              "src": "563:1154:82",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    10281
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10281,
                      "mutability": "mutable",
                      "name": "falloutFactory",
                      "nameLocation": "667:14:82",
                      "nodeType": "VariableDeclaration",
                      "scope": 10356,
                      "src": "652:29:82",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FalloutFactory_$5675",
                        "typeString": "contract FalloutFactory"
                      },
                      "typeName": {
                        "id": 10280,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10279,
                          "name": "FalloutFactory",
                          "nameLocations": [
                            "652:14:82"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5675,
                          "src": "652:14:82"
                        },
                        "referencedDeclaration": 5675,
                        "src": "652:14:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FalloutFactory_$5675",
                          "typeString": "contract FalloutFactory"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10286,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 10284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "684:18:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_FalloutFactory_$5675_$",
                        "typeString": "function () returns (contract FalloutFactory)"
                      },
                      "typeName": {
                        "id": 10283,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10282,
                          "name": "FalloutFactory",
                          "nameLocations": [
                            "688:14:82"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5675,
                          "src": "688:14:82"
                        },
                        "referencedDeclaration": 5675,
                        "src": "688:14:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FalloutFactory_$5675",
                          "typeString": "contract FalloutFactory"
                        }
                      }
                    },
                    "id": 10285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "684:20:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FalloutFactory_$5675",
                      "typeString": "contract FalloutFactory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "652:52:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10290,
                        "name": "falloutFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10281,
                        "src": "738:14:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FalloutFactory_$5675",
                          "typeString": "contract FalloutFactory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_FalloutFactory_$5675",
                          "typeString": "contract FalloutFactory"
                        }
                      ],
                      "expression": {
                        "id": 10287,
                        "name": "ethernaut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10252,
                        "src": "714:9:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ethernaut_$5303",
                          "typeString": "contract Ethernaut"
                        }
                      },
                      "id": 10289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "724:13:82",
                      "memberName": "registerLevel",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5172,
                      "src": "714:23:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Level_$3338_$returns$__$",
                        "typeString": "function (contract Level) external"
                      }
                    },
                    "id": 10291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "714:39:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10292,
                  "nodeType": "ExpressionStatement",
                  "src": "714:39:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10296,
                        "name": "eoaAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10258,
                        "src": "777:10:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 10293,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10249,
                        "src": "763:2:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12761",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 10295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "766:10:82",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12656,
                      "src": "763:13:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 10297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "763:25:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10298,
                  "nodeType": "ExpressionStatement",
                  "src": "763:25:82"
                },
                {
                  "assignments": [
                    10300
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10300,
                      "mutability": "mutable",
                      "name": "levelAddress",
                      "nameLocation": "806:12:82",
                      "nodeType": "VariableDeclaration",
                      "scope": 10356,
                      "src": "798:20:82",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10299,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "798:7:82",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10305,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10303,
                        "name": "falloutFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10281,
                        "src": "851:14:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FalloutFactory_$5675",
                          "typeString": "contract FalloutFactory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_FalloutFactory_$5675",
                          "typeString": "contract FalloutFactory"
                        }
                      ],
                      "expression": {
                        "id": 10301,
                        "name": "ethernaut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10252,
                        "src": "821:9:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ethernaut_$5303",
                          "typeString": "contract Ethernaut"
                        }
                      },
                      "id": 10302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "831:19:82",
                      "memberName": "createLevelInstance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5246,
                      "src": "821:29:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_contract$_Level_$3338_$returns$_t_address_$",
                        "typeString": "function (contract Level) payable external returns (address)"
                      }
                    },
                    "id": 10304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "821:45:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "798:68:82"
                },
                {
                  "assignments": [
                    10308
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10308,
                      "mutability": "mutable",
                      "name": "ethernautFallout",
                      "nameLocation": "884:16:82",
                      "nodeType": "VariableDeclaration",
                      "scope": 10356,
                      "src": "876:24:82",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Fallout_$5620",
                        "typeString": "contract Fallout"
                      },
                      "typeName": {
                        "id": 10307,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10306,
                          "name": "Fallout",
                          "nameLocations": [
                            "876:7:82"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5620,
                          "src": "876:7:82"
                        },
                        "referencedDeclaration": 5620,
                        "src": "876:7:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fallout_$5620",
                          "typeString": "contract Fallout"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10315,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10312,
                            "name": "levelAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10300,
                            "src": "919:12:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "911:8:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 10310,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "911:8:82",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "911:21:82",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 10309,
                      "name": "Fallout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5620,
                      "src": "903:7:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Fallout_$5620_$",
                        "typeString": "type(contract Fallout)"
                      }
                    },
                    "id": 10314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "903:30:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Fallout_$5620",
                      "typeString": "contract Fallout"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "876:57:82"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "46616c6c6f7574204f776e6572204265666f72652041747461636b",
                        "id": 10317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1186:29:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3767abd75dee3e5846c105f071e4a1511ab6bdb0732ce376e9c2cc136d0d9aed",
                          "typeString": "literal_string \"Fallout Owner Before Attack\""
                        },
                        "value": "Fallout Owner Before Attack"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 10318,
                            "name": "ethernautFallout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10308,
                            "src": "1229:16:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Fallout_$5620",
                              "typeString": "contract Fallout"
                            }
                          },
                          "id": 10319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1246:5:82",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5517,
                          "src": "1229:22:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view external returns (address payable)"
                          }
                        },
                        "id": 10320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1229:24:82",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_3767abd75dee3e5846c105f071e4a1511ab6bdb0732ce376e9c2cc136d0d9aed",
                          "typeString": "literal_string \"Fallout Owner Before Attack\""
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 10316,
                      "name": "log_named_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "1155:17:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 10321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1155:108:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10322,
                  "nodeType": "EmitStatement",
                  "src": "1150:113:82"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 10323,
                          "name": "ethernautFallout",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10308,
                          "src": "1273:16:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Fallout_$5620",
                            "typeString": "contract Fallout"
                          }
                        },
                        "id": 10325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1290:7:82",
                        "memberName": "Fal1out",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5536,
                        "src": "1273:24:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 10327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 10326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1305:5:82",
                          "subdenomination": "wei",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "1273:38:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 10328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1273:40:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10329,
                  "nodeType": "ExpressionStatement",
                  "src": "1273:40:82"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "46616c6c6f7574204f776e65722041667465722041747461636b",
                        "id": 10331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1359:28:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9db046393acdd8117e673348eab45ef399b9c961a7f6affb6c8cbedd9c848be7",
                          "typeString": "literal_string \"Fallout Owner After Attack\""
                        },
                        "value": "Fallout Owner After Attack"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 10332,
                            "name": "ethernautFallout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10308,
                            "src": "1401:16:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Fallout_$5620",
                              "typeString": "contract Fallout"
                            }
                          },
                          "id": 10333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1418:5:82",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5517,
                          "src": "1401:22:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view external returns (address payable)"
                          }
                        },
                        "id": 10334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1401:24:82",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9db046393acdd8117e673348eab45ef399b9c961a7f6affb6c8cbedd9c848be7",
                          "typeString": "literal_string \"Fallout Owner After Attack\""
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 10330,
                      "name": "log_named_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "1328:17:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 10335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1328:107:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10336,
                  "nodeType": "EmitStatement",
                  "src": "1323:112:82"
                },
                {
                  "assignments": [
                    10338
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10338,
                      "mutability": "mutable",
                      "name": "levelSuccessfullyPassed",
                      "nameLocation": "1545:23:82",
                      "nodeType": "VariableDeclaration",
                      "scope": 10356,
                      "src": "1540:28:82",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 10337,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1540:4:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10346,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10343,
                            "name": "levelAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10300,
                            "src": "1622:12:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1614:8:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 10341,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1614:8:82",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1614:21:82",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 10339,
                        "name": "ethernaut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10252,
                        "src": "1571:9:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ethernaut_$5303",
                          "typeString": "contract Ethernaut"
                        }
                      },
                      "id": 10340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1581:19:82",
                      "memberName": "submitLevelInstance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5302,
                      "src": "1571:29:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$_t_bool_$",
                        "typeString": "function (address payable) external returns (bool)"
                      }
                    },
                    "id": 10345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1571:74:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1540:105:82"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 10347,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10249,
                        "src": "1655:2:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12761",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 10349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1658:9:82",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12673,
                      "src": "1655:12:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 10350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1655:14:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10351,
                  "nodeType": "ExpressionStatement",
                  "src": "1655:14:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10353,
                        "name": "levelSuccessfullyPassed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10338,
                        "src": "1686:23:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10352,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1679:6:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1679:31:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10355,
                  "nodeType": "ExpressionStatement",
                  "src": "1679:31:82"
                }
              ]
            },
            "functionSelector": "cd31e39e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFalloutHack",
            "nameLocation": "538:15:82",
            "parameters": {
              "id": 10277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "553:2:82"
            },
            "returnParameters": {
              "id": 10278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "563:0:82"
            },
            "scope": 10358,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10239,
              "name": "DSTest",
              "nameLocations": [
                "178:6:82"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1680,
              "src": "178:6:82"
            },
            "id": 10240,
            "nodeType": "InheritanceSpecifier",
            "src": "178:6:82"
          }
        ],
        "canonicalName": "FalloutTest",
        "contractDependencies": [
          5303,
          5675
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          10358,
          1680
        ],
        "name": "FalloutTest",
        "nameLocation": "163:11:82",
        "scope": 10359,
        "usedErrors": []
      }
    ]
  },
  "id": 82
}