{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testDenialHack",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805461ff01600160b01b031916757109709ecfa91a80626ff3989d68f67f5b1dd12d0001179055600280546001600160a01b031916905534801561004957600080fd5b5061143e806100596000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063065a6c95146100515780630a9254e41461005b578063ba414fa614610063578063fa7626d414610089575b600080fd5b610059610096565b005b610059610388565b60005461007590610100900460ff1681565b604051901515815260200160405180910390f35b6000546100759060ff1681565b60006040516100a49061043e565b604051809103906000f0801580156100c0573d6000803e3d6000fd5b5060015460405163080808f560e21b81526001600160a01b03808416600483015292935091169063202023d490602401600060405180830381600087803b15801561010a57600080fd5b505af115801561011e573d6000803e3d6000fd5b50506000546002546040516303223eab60e11b81526001600160a01b039182166004820152620100009092041692506306447d569150602401600060405180830381600087803b15801561017157600080fd5b505af1158015610185573d6000803e3d6000fd5b505060015460405163dfc86b1760e01b81526001600160a01b03858116600483015260009450909116915063dfc86b1790670de0b6b3a76400009060240160206040518083038185885af11580156101e1573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906102069190610464565b90506000819050600060405161021b9061044b565b604051809103906000f080158015610237573d6000803e3d6000fd5b50604051631387164560e21b81526001600160a01b03808316600483015291925090831690634e1c591490602401600060405180830381600087803b15801561027f57600080fd5b505af1158015610293573d6000803e3d6000fd5b50506001546040516364416be160e11b81526001600160a01b03878116600483015260009450909116915063c882d7c2906024016020604051808303816000875af11580156102e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030a9190610494565b9050600060029054906101000a90046001600160a01b03166001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561035c57600080fd5b505af1158015610370573d6000803e3d6000fd5b5050505080610381576103816104b6565b5050505050565b60405161039490610457565b604051809103906000f0801580156103b0573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b0392831617905560005460025460405163c88a5e6d60e01b81529083166004820152674563918244f400006024820152620100009091049091169063c88a5e6d90604401600060405180830381600087803b15801561042457600080fd5b505af1158015610438573d6000803e3d6000fd5b50505050565b61081d806104cd83390190565b60ec80610cea83390190565b61063380610dd683390190565b60006020828403121561047657600080fd5b81516001600160a01b038116811461048d57600080fd5b9392505050565b6000602082840312156104a657600080fd5b8151801515811461048d57600080fd5b634e487b7160e01b600052600160045260246000fdfe608060405266038d7ea4c6800060015534801561001b57600080fd5b506100253361002a565b61007a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610794806100896000396000f3fe6080604052600436106100595760003560e01c8063715018a6146100655780637726f7761461007c5780638da5cb5b146100ac578063d38def5b146100ca578063e037f889146100fa578063f2fde38b1461011e57600080fd5b3661006057005b600080fd5b34801561007157600080fd5b5061007a61013e565b005b61008f61008a3660046103f7565b610152565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100b857600080fd5b506000546001600160a01b031661008f565b3480156100d657600080fd5b506100ea6100e536600461041b565b6101f7565b60405190151581526020016100a3565b34801561010657600080fd5b5061011060015481565b6040519081526020016100a3565b34801561012a57600080fd5b5061007a6101393660046103f7565b6102ad565b61014661032b565b6101506000610385565b565b600060015434101561016357600080fd5b6000604051610171906103d5565b604051809103906000f08015801561018d573d6000803e3d6000fd5b5090506000816001600160a01b03163460405160006040518083038185875af1925050503d80600081146101dd576040519150601f19603f3d011682016040523d82523d6000602084013e6101e2565b606091505b50509050806101f057600080fd5b5092915050565b60008260646001600160a01b03821631116102165760009150506102a7565b60408051600481526024810182526020810180516001600160e01b0316633ccfd60b60e01b17905290516000916001600160a01b03841691620f42409161025c91610454565b60006040518083038160008787f1925050503d806000811461029a576040519150601f19603f3d011682016040523d82523d6000602084013e61029f565b606091505b505015925050505b92915050565b6102b561032b565b6001600160a01b03811661031f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61032881610385565b50565b6000546001600160a01b031633146101505760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610316565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6102db8061048483390190565b6001600160a01b038116811461032857600080fd5b60006020828403121561040957600080fd5b8135610414816103e2565b9392505050565b6000806040838503121561042e57600080fd5b8235610439816103e2565b91506020830135610449816103e2565b809150509250929050565b6000825160005b81811015610475576020818601810151858301520161045b565b50600092019182525091905056fe608060405234801561001057600080fd5b506102bb806100206000396000f3fe60806040526004361061004e5760003560e01c80633ccfd60b1461005a5780634e1c5914146100715780638b7afe2e146100ae5780638da5cb5b146100ce578063be10862b146100fc57600080fd5b3661005557005b600080fd5b34801561006657600080fd5b5061006f61011c565b005b34801561007d57600080fd5b5061006f61008c366004610212565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b3480156100ba57600080fd5b506040514781526020015b60405180910390f35b3480156100da57600080fd5b506100e4610a9e81565b6040516001600160a01b0390911681526020016100c5565b34801561010857600080fd5b506000546100e4906001600160a01b031681565b60006101294760646101f1565b600080546040519293506001600160a01b031691839181818185875af1925050503d8060008114610176576040519150601f19603f3d011682016040523d82523d6000602084013e61017b565b606091505b5050604051610a9e915082156108fc029083906000818181858888f193505050501580156101ad573d6000803e3d6000fd5b5042600155600080546001600160a01b03168152600260205260409020546101d59082610206565b600080546001600160a01b031681526002602052604090205550565b60006101fd8284610242565b90505b92915050565b60006101fd8284610264565b60006020828403121561022457600080fd5b81356001600160a01b038116811461023b57600080fd5b9392505050565b60008261025f57634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561020057634e487b7160e01b600052601160045260246000fdfea2646970667358221220e172c2d07058ba58e5a62e1d07734792056ccfe121d67cff68e8aa1ce72ecf8564736f6c63430008110033a26469706673582212206b6bcead608656f7d10610bfbd5c27e5d62f49e9e06f66e0a9fd7bf651f90e2f64736f6c634300081100336080604052348015600f57600080fd5b5060ce8061001e6000396000f3fe60806040525b604051600f906030565b604051809103906000f080158015602a573d6000803e3d6000fd5b50506005565b605c8061003d8339019056fe6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220917d254dcd4217f1fc61476853c3d6b1e4e585c3b664871ba3feae7d937dbe4064736f6c63430008110033a264697066735822122055a8d8ccf92df148bf17fb80894b43366342035aa6193faeae2e9a6c3544f03264736f6c63430008110033608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105b58061007e6000396000f3fe6080604052600436106100555760003560e01c8063202023d41461005a578063715018a61461007c5780638da5cb5b14610091578063c882d7c2146100c8578063dfc86b17146100f8578063f2fde38b1461010b575b600080fd5b34801561006657600080fd5b5061007a61007536600461051c565b61012b565b005b34801561008857600080fd5b5061007a61015a565b34801561009d57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100d457600080fd5b506100e86100e336600461051c565b61016e565b60405190151581526020016100bf565b6100ab61010636600461051c565b610297565b34801561011757600080fd5b5061007a61012636600461051c565b6103df565b61013361045d565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b61016261045d565b61016c60006104b7565b565b6001600160a01b03808216600090815260026020526040812080549192909116331461019957600080fd5b6001810154600160a01b900460ff16156101b257600080fd5b600181015460405163d38def5b60e01b81526001600160a01b0385811660048301523360248301529091169063d38def5b906044016020604051808303816000875af1158015610206573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022a9190610540565b1561028e57600181018054600160a01b60ff60a01b198216179091556040516001600160a01b03909116815233907f9dfdf7e3e630f506a3dfe38cdbe34e196353364235df33e5a3b588488d9a1e789060200160405180910390a250600192915050565b50600092915050565b6001600160a01b03811660009081526001602052604081205460ff166102bc57600080fd5b604051633b937bbb60e11b81523360048201526000906001600160a01b03841690637726f77690349060240160206040518083038185885af1158015610306573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061032b9190610562565b60408051606081018252338082526001600160a01b03878116602080850191825260008587018181528885168083526002845291889020965187549086166001600160a01b031990911617875592516001909601805493511515600160a01b026001600160a81b031990941696909416959095179190911790915592519182529293507f7bf7f1ed7f75e83b76de0ff139966989aff81cb85aac26469c18978d86aac1c2910160405180910390a292915050565b6103e761045d565b6001600160a01b0381166104515760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61045a816104b7565b50565b6000546001600160a01b0316331461016c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610448565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461045a57600080fd5b60006020828403121561052e57600080fd5b813561053981610507565b9392505050565b60006020828403121561055257600080fd5b8151801515811461053957600080fd5b60006020828403121561057457600080fd5b81516105398161050756fea26469706673582212200a6985217144b514a794ae8ed1f3c70df9de73effaa640beeadf7107e0d7778564736f6c63430008110033a2646970667358221220ba98b7a954f5c2aa0d52e4d78a50bbb8c906bab8a8b2dd633fafa496aad6404f64736f6c63430008110033",
    "sourceMap": "191:1429:77:-:0;;;1573:26:0;;;-1:-1:-1;;;;;;227:63:77;;;;;;321:31;;-1:-1:-1;;;;;;321:31:77;;;191:1429;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063065a6c95146100515780630a9254e41461005b578063ba414fa614610063578063fa7626d414610089575b600080fd5b610059610096565b005b610059610388565b60005461007590610100900460ff1681565b604051901515815260200160405180910390f35b6000546100759060ff1681565b60006040516100a49061043e565b604051809103906000f0801580156100c0573d6000803e3d6000fd5b5060015460405163080808f560e21b81526001600160a01b03808416600483015292935091169063202023d490602401600060405180830381600087803b15801561010a57600080fd5b505af115801561011e573d6000803e3d6000fd5b50506000546002546040516303223eab60e11b81526001600160a01b039182166004820152620100009092041692506306447d569150602401600060405180830381600087803b15801561017157600080fd5b505af1158015610185573d6000803e3d6000fd5b505060015460405163dfc86b1760e01b81526001600160a01b03858116600483015260009450909116915063dfc86b1790670de0b6b3a76400009060240160206040518083038185885af11580156101e1573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906102069190610464565b90506000819050600060405161021b9061044b565b604051809103906000f080158015610237573d6000803e3d6000fd5b50604051631387164560e21b81526001600160a01b03808316600483015291925090831690634e1c591490602401600060405180830381600087803b15801561027f57600080fd5b505af1158015610293573d6000803e3d6000fd5b50506001546040516364416be160e11b81526001600160a01b03878116600483015260009450909116915063c882d7c2906024016020604051808303816000875af11580156102e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030a9190610494565b9050600060029054906101000a90046001600160a01b03166001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561035c57600080fd5b505af1158015610370573d6000803e3d6000fd5b5050505080610381576103816104b6565b5050505050565b60405161039490610457565b604051809103906000f0801580156103b0573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b0392831617905560005460025460405163c88a5e6d60e01b81529083166004820152674563918244f400006024820152620100009091049091169063c88a5e6d90604401600060405180830381600087803b15801561042457600080fd5b505af1158015610438573d6000803e3d6000fd5b50505050565b61081d806104cd83390190565b60ec80610cea83390190565b61063380610dd683390190565b60006020828403121561047657600080fd5b81516001600160a01b038116811461048d57600080fd5b9392505050565b6000602082840312156104a657600080fd5b8151801515811461048d57600080fd5b634e487b7160e01b600052600160045260246000fdfe608060405266038d7ea4c6800060015534801561001b57600080fd5b506100253361002a565b61007a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610794806100896000396000f3fe6080604052600436106100595760003560e01c8063715018a6146100655780637726f7761461007c5780638da5cb5b146100ac578063d38def5b146100ca578063e037f889146100fa578063f2fde38b1461011e57600080fd5b3661006057005b600080fd5b34801561007157600080fd5b5061007a61013e565b005b61008f61008a3660046103f7565b610152565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100b857600080fd5b506000546001600160a01b031661008f565b3480156100d657600080fd5b506100ea6100e536600461041b565b6101f7565b60405190151581526020016100a3565b34801561010657600080fd5b5061011060015481565b6040519081526020016100a3565b34801561012a57600080fd5b5061007a6101393660046103f7565b6102ad565b61014661032b565b6101506000610385565b565b600060015434101561016357600080fd5b6000604051610171906103d5565b604051809103906000f08015801561018d573d6000803e3d6000fd5b5090506000816001600160a01b03163460405160006040518083038185875af1925050503d80600081146101dd576040519150601f19603f3d011682016040523d82523d6000602084013e6101e2565b606091505b50509050806101f057600080fd5b5092915050565b60008260646001600160a01b03821631116102165760009150506102a7565b60408051600481526024810182526020810180516001600160e01b0316633ccfd60b60e01b17905290516000916001600160a01b03841691620f42409161025c91610454565b60006040518083038160008787f1925050503d806000811461029a576040519150601f19603f3d011682016040523d82523d6000602084013e61029f565b606091505b505015925050505b92915050565b6102b561032b565b6001600160a01b03811661031f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61032881610385565b50565b6000546001600160a01b031633146101505760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610316565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6102db8061048483390190565b6001600160a01b038116811461032857600080fd5b60006020828403121561040957600080fd5b8135610414816103e2565b9392505050565b6000806040838503121561042e57600080fd5b8235610439816103e2565b91506020830135610449816103e2565b809150509250929050565b6000825160005b81811015610475576020818601810151858301520161045b565b50600092019182525091905056fe608060405234801561001057600080fd5b506102bb806100206000396000f3fe60806040526004361061004e5760003560e01c80633ccfd60b1461005a5780634e1c5914146100715780638b7afe2e146100ae5780638da5cb5b146100ce578063be10862b146100fc57600080fd5b3661005557005b600080fd5b34801561006657600080fd5b5061006f61011c565b005b34801561007d57600080fd5b5061006f61008c366004610212565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b3480156100ba57600080fd5b506040514781526020015b60405180910390f35b3480156100da57600080fd5b506100e4610a9e81565b6040516001600160a01b0390911681526020016100c5565b34801561010857600080fd5b506000546100e4906001600160a01b031681565b60006101294760646101f1565b600080546040519293506001600160a01b031691839181818185875af1925050503d8060008114610176576040519150601f19603f3d011682016040523d82523d6000602084013e61017b565b606091505b5050604051610a9e915082156108fc029083906000818181858888f193505050501580156101ad573d6000803e3d6000fd5b5042600155600080546001600160a01b03168152600260205260409020546101d59082610206565b600080546001600160a01b031681526002602052604090205550565b60006101fd8284610242565b90505b92915050565b60006101fd8284610264565b60006020828403121561022457600080fd5b81356001600160a01b038116811461023b57600080fd5b9392505050565b60008261025f57634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561020057634e487b7160e01b600052601160045260246000fdfea2646970667358221220e172c2d07058ba58e5a62e1d07734792056ccfe121d67cff68e8aa1ce72ecf8564736f6c63430008110033a26469706673582212206b6bcead608656f7d10610bfbd5c27e5d62f49e9e06f66e0a9fd7bf651f90e2f64736f6c634300081100336080604052348015600f57600080fd5b5060ce8061001e6000396000f3fe60806040525b604051600f906030565b604051809103906000f080158015602a573d6000803e3d6000fd5b50506005565b605c8061003d8339019056fe6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220917d254dcd4217f1fc61476853c3d6b1e4e585c3b664871ba3feae7d937dbe4064736f6c63430008110033a264697066735822122055a8d8ccf92df148bf17fb80894b43366342035aa6193faeae2e9a6c3544f03264736f6c63430008110033608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105b58061007e6000396000f3fe6080604052600436106100555760003560e01c8063202023d41461005a578063715018a61461007c5780638da5cb5b14610091578063c882d7c2146100c8578063dfc86b17146100f8578063f2fde38b1461010b575b600080fd5b34801561006657600080fd5b5061007a61007536600461051c565b61012b565b005b34801561008857600080fd5b5061007a61015a565b34801561009d57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100d457600080fd5b506100e86100e336600461051c565b61016e565b60405190151581526020016100bf565b6100ab61010636600461051c565b610297565b34801561011757600080fd5b5061007a61012636600461051c565b6103df565b61013361045d565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b61016261045d565b61016c60006104b7565b565b6001600160a01b03808216600090815260026020526040812080549192909116331461019957600080fd5b6001810154600160a01b900460ff16156101b257600080fd5b600181015460405163d38def5b60e01b81526001600160a01b0385811660048301523360248301529091169063d38def5b906044016020604051808303816000875af1158015610206573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022a9190610540565b1561028e57600181018054600160a01b60ff60a01b198216179091556040516001600160a01b03909116815233907f9dfdf7e3e630f506a3dfe38cdbe34e196353364235df33e5a3b588488d9a1e789060200160405180910390a250600192915050565b50600092915050565b6001600160a01b03811660009081526001602052604081205460ff166102bc57600080fd5b604051633b937bbb60e11b81523360048201526000906001600160a01b03841690637726f77690349060240160206040518083038185885af1158015610306573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061032b9190610562565b60408051606081018252338082526001600160a01b03878116602080850191825260008587018181528885168083526002845291889020965187549086166001600160a01b031990911617875592516001909601805493511515600160a01b026001600160a81b031990941696909416959095179190911790915592519182529293507f7bf7f1ed7f75e83b76de0ff139966989aff81cb85aac26469c18978d86aac1c2910160405180910390a292915050565b6103e761045d565b6001600160a01b0381166104515760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61045a816104b7565b50565b6000546001600160a01b0316331461016c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610448565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461045a57600080fd5b60006020828403121561052e57600080fd5b813561053981610507565b9392505050565b60006020828403121561055257600080fd5b8151801515811461053957600080fd5b60006020828403121561057457600080fd5b81516105398161050756fea26469706673582212200a6985217144b514a794ae8ed1f3c70df9de73effaa640beeadf7107e0d7778564736f6c63430008110033a2646970667358221220ba98b7a954f5c2aa0d52e4d78a50bbb8c906bab8a8b2dd633fafa496aad6404f64736f6c63430008110033",
    "sourceMap": "191:1429:77:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;563:1055;;;:::i;:::-;;359:198;;;:::i;1605:18:0:-;;;;;;;;;;;;;;;179:14:100;;172:22;154:41;;142:2;127:18;1605::0;;;;;;;1573:26;;;;;;;;;563:1055:77;685:27;715:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;744:9:77;;:38;;-1:-1:-1;;;744:38:77;;-1:-1:-1;;;;;392:32:100;;;744:38:77;;;374:51:100;685:49:77;;-1:-1:-1;744:9:77;;;:23;;347:18:100;;744:38:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;792:2:77;;;806:10;792:25;;-1:-1:-1;;;792:25:77;;-1:-1:-1;;;;;806:10:77;;;792:25;;;374:51:100;792:2:77;;;;;;-1:-1:-1;792:13:77;;-1:-1:-1;347:18:100;;792:25:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;850:9:77;;:82;;-1:-1:-1;;;850:82:77;;-1:-1:-1;;;;;392:32:100;;;850:82:77;;;374:51:100;827:20:77;;-1:-1:-1;850:9:77;;;;-1:-1:-1;850:29:77;;887:7;;347:18:100;;850:82:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;827:105;;942:22;982:12;942:54;;1127:21;1151:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1281:55:77;;-1:-1:-1;;;1281:55:77;;-1:-1:-1;;;;;392:32:100;;;1281:55:77;;;374:51:100;1127:40:77;;-1:-1:-1;1281:34:77;;;;;;347:18:100;;1281:55:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1472:9:77;;:74;;-1:-1:-1;;;1472:74:77;;-1:-1:-1;;;;;392:32:100;;;1472:74:77;;;374:51:100;1441:28:77;;-1:-1:-1;1472:9:77;;;;-1:-1:-1;1472:29:77;;347:18:100;;1472:74:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1441:105;;1556:2;;;;;;;;;-1:-1:-1;;;;;1556:2:77;-1:-1:-1;;;;;1556:12:77;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1587:23;1580:31;;;;:::i;:::-;596:1022;;;;;563:1055::o;359:198::-;458:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;446:9:77;:27;;-1:-1:-1;;;;;;446:27:77;-1:-1:-1;;;;;446:27:77;;;;;;-1:-1:-1;522:2:77;;530:10;522:28;;-1:-1:-1;;;522:28:77;;530:10;;;522:28;;;1777:51:100;542:7:77;1844:18:100;;;1837:34;522:2:77;;;;;;;;:7;;1750:18:100;;522:28:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;359:198::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;644:290:100:-;714:6;767:2;755:9;746:7;742:23;738:32;735:52;;;783:1;780;773:12;735:52;809:16;;-1:-1:-1;;;;;854:31:100;;844:42;;834:70;;900:1;897;890:12;834:70;923:5;644:290;-1:-1:-1;;;644:290:100:o;1163:277::-;1230:6;1283:2;1271:9;1262:7;1258:23;1254:32;1251:52;;;1299:1;1296;1289:12;1251:52;1331:9;1325:16;1384:5;1377:13;1370:21;1363:5;1360:32;1350:60;;1406:1;1403;1396:12;1445:127;1506:10;1501:3;1497:20;1494:1;1487:31;1537:4;1534:1;1527:15;1561:4;1558:1;1551:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testDenialHack()": "065a6c95"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testDenialHack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Denial.t.sol\":\"DenialTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/ds-test/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/ds-test/src/test.sol\":{\"keccak256\":\"0x529f30c5939d75689f6a982f7f96b8898bed30bd90ec5b385b57cab681e12b00\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://89075d5a96e87acef1d00cf556b409d1836728ec2e92f5629ceb5cae3d1e4354\",\"dweb:/ipfs/QmPAViJrxffEDns9GEMVSAzmr3soAzfrEg1CVuovwmNfnt\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"src/BaseLevel.sol\":{\"keccak256\":\"0x96532046614f14ded4ed0582d37d1bfb6d8ce0423403094476ae9533323a5af8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b9e8bbc7f3c8d982885e58c27a2d063008abef55e70db5eae1358e3d5f7f5b0\",\"dweb:/ipfs/QmNpDPfDEeYYAdYM14p3ef3wgcgjNYjCqwXqKT6mVv8MK8\"]},\"src/Denial/Denial.sol\":{\"keccak256\":\"0xfde45fcd77feb2705c648af843085e97409df34991830a981c49d36930e848f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eedfa2dc968442c36622627172159cc9550f1928060c15744222561de88c91ad\",\"dweb:/ipfs/QmRjH7cugXVrJAFVupTWXXS9MpKcS563FWNHk2cw1mvzJe\"]},\"src/Denial/DenialFactory.sol\":{\"keccak256\":\"0x2f48bc163dce0eb47adebe30357effbb7eddc10ab008b9a2cff329d450a68c0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbe81dbecd9885c57ba0af8532b482f6d680d3409d5977f219106354d96e1df3\",\"dweb:/ipfs/Qme98VcV2fbF7JbDF4MYj4NXqtzmUKZoYKaAbYY8Ukjenr\"]},\"src/Denial/DenialHack.sol\":{\"keccak256\":\"0x296cdb62ae201e93e562e19d59e6285796295daa4c83fc2ded1b953d3f6ae8f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fa2f40d15f58f8bd42673a9bca9fabf0284e3f5ee2e01ddc790fff3ae69d29a\",\"dweb:/ipfs/Qmemwtny5MJ7K7RQHz7geFSryWCARGpfoEZPni1vLjTsQR\"]},\"src/Ethernaut.sol\":{\"keccak256\":\"0xdfd342f8053ad866770cc1a48c60e938dfa4a305c3b3fcdde1f60fd4fa7ad655\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28eabd1b8915a2615d24b7ed674f4a924f59ad7305ff481862d00382df3d0348\",\"dweb:/ipfs/QmPpaCPEZnCadgkzptPrD4hkaz6JuL5k5pS2TjaUCYAPZ6\"]},\"test/Denial.t.sol\":{\"keccak256\":\"0x654f9b9a0dba8dc71191487c30a94b3202310a1f17e053450c9e4ac64ddedfd6\",\"urls\":[\"bzz-raw://9f3f9b0951b0b4ca3007c5aec358040249dcc4f5cc258aed1488f642bf6b6241\",\"dweb:/ipfs/QmQ91jdnFD32uupnA6rox6TVRvBQ6WB1XvYthwNZ6Jd2AH\"]},\"test/utils/vm.sol\":{\"keccak256\":\"0xc34f4b14c4d624ca1d6dbe5434a8328de77817a089067d661ba1a657f46289cc\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://a1dad3c6483f228f98c9e3c492a70277d9e9ef2f65f4153d6082f9b3acee4a7e\",\"dweb:/ipfs/QmXUrWED9yhK4C5LvWbYLEBexwqYgrxRzcefgdYYVB51xt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testDenialHack"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/ds-test/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Denial.t.sol": "DenialTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/ds-test/src/test.sol": {
        "keccak256": "0x529f30c5939d75689f6a982f7f96b8898bed30bd90ec5b385b57cab681e12b00",
        "urls": [
          "bzz-raw://89075d5a96e87acef1d00cf556b409d1836728ec2e92f5629ceb5cae3d1e4354",
          "dweb:/ipfs/QmPAViJrxffEDns9GEMVSAzmr3soAzfrEg1CVuovwmNfnt"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e",
        "urls": [
          "bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65",
          "dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN"
        ],
        "license": "MIT"
      },
      "src/BaseLevel.sol": {
        "keccak256": "0x96532046614f14ded4ed0582d37d1bfb6d8ce0423403094476ae9533323a5af8",
        "urls": [
          "bzz-raw://9b9e8bbc7f3c8d982885e58c27a2d063008abef55e70db5eae1358e3d5f7f5b0",
          "dweb:/ipfs/QmNpDPfDEeYYAdYM14p3ef3wgcgjNYjCqwXqKT6mVv8MK8"
        ],
        "license": "MIT"
      },
      "src/Denial/Denial.sol": {
        "keccak256": "0xfde45fcd77feb2705c648af843085e97409df34991830a981c49d36930e848f3",
        "urls": [
          "bzz-raw://eedfa2dc968442c36622627172159cc9550f1928060c15744222561de88c91ad",
          "dweb:/ipfs/QmRjH7cugXVrJAFVupTWXXS9MpKcS563FWNHk2cw1mvzJe"
        ],
        "license": "MIT"
      },
      "src/Denial/DenialFactory.sol": {
        "keccak256": "0x2f48bc163dce0eb47adebe30357effbb7eddc10ab008b9a2cff329d450a68c0b",
        "urls": [
          "bzz-raw://dbe81dbecd9885c57ba0af8532b482f6d680d3409d5977f219106354d96e1df3",
          "dweb:/ipfs/Qme98VcV2fbF7JbDF4MYj4NXqtzmUKZoYKaAbYY8Ukjenr"
        ],
        "license": "MIT"
      },
      "src/Denial/DenialHack.sol": {
        "keccak256": "0x296cdb62ae201e93e562e19d59e6285796295daa4c83fc2ded1b953d3f6ae8f4",
        "urls": [
          "bzz-raw://4fa2f40d15f58f8bd42673a9bca9fabf0284e3f5ee2e01ddc790fff3ae69d29a",
          "dweb:/ipfs/Qmemwtny5MJ7K7RQHz7geFSryWCARGpfoEZPni1vLjTsQR"
        ],
        "license": "MIT"
      },
      "src/Ethernaut.sol": {
        "keccak256": "0xdfd342f8053ad866770cc1a48c60e938dfa4a305c3b3fcdde1f60fd4fa7ad655",
        "urls": [
          "bzz-raw://28eabd1b8915a2615d24b7ed674f4a924f59ad7305ff481862d00382df3d0348",
          "dweb:/ipfs/QmPpaCPEZnCadgkzptPrD4hkaz6JuL5k5pS2TjaUCYAPZ6"
        ],
        "license": "MIT"
      },
      "test/Denial.t.sol": {
        "keccak256": "0x654f9b9a0dba8dc71191487c30a94b3202310a1f17e053450c9e4ac64ddedfd6",
        "urls": [
          "bzz-raw://9f3f9b0951b0b4ca3007c5aec358040249dcc4f5cc258aed1488f642bf6b6241",
          "dweb:/ipfs/QmQ91jdnFD32uupnA6rox6TVRvBQ6WB1XvYthwNZ6Jd2AH"
        ],
        "license": null
      },
      "test/utils/vm.sol": {
        "keccak256": "0xc34f4b14c4d624ca1d6dbe5434a8328de77817a089067d661ba1a657f46289cc",
        "urls": [
          "bzz-raw://a1dad3c6483f228f98c9e3c492a70277d9e9ef2f65f4153d6082f9b3acee4a7e",
          "dweb:/ipfs/QmXUrWED9yhK4C5LvWbYLEBexwqYgrxRzcefgdYYVB51xt"
        ],
        "license": "Unlicense"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Denial.t.sol",
    "id": 9716,
    "exportedSymbols": {
      "Context": [
        3004
      ],
      "DSTest": [
        1680
      ],
      "Denial": [
        3786
      ],
      "DenialFactory": [
        3897
      ],
      "DenialHack": [
        3913
      ],
      "DenialTest": [
        9715
      ],
      "Ethernaut": [
        5303
      ],
      "Level": [
        3338
      ],
      "Ownable": [
        1793
      ],
      "SafeMath": [
        3316
      ],
      "Vm": [
        12761
      ],
      "waste": [
        3900
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:1621:77",
    "nodes": [
      {
        "id": 9592,
        "nodeType": "PragmaDirective",
        "src": "0:24:77",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 9593,
        "nodeType": "ImportDirective",
        "src": "26:26:77",
        "nodes": [],
        "absolutePath": "lib/ds-test/src/test.sol",
        "file": "ds-test/test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9716,
        "sourceUnit": 1681,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9594,
        "nodeType": "ImportDirective",
        "src": "53:38:77",
        "nodes": [],
        "absolutePath": "src/Denial/DenialHack.sol",
        "file": "../src/Denial/DenialHack.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9716,
        "sourceUnit": 3914,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9595,
        "nodeType": "ImportDirective",
        "src": "92:41:77",
        "nodes": [],
        "absolutePath": "src/Denial/DenialFactory.sol",
        "file": "../src/Denial/DenialFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9716,
        "sourceUnit": 3898,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9596,
        "nodeType": "ImportDirective",
        "src": "134:30:77",
        "nodes": [],
        "absolutePath": "src/Ethernaut.sol",
        "file": "../src/Ethernaut.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9716,
        "sourceUnit": 5304,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9597,
        "nodeType": "ImportDirective",
        "src": "165:24:77",
        "nodes": [],
        "absolutePath": "test/utils/vm.sol",
        "file": "./utils/vm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9716,
        "sourceUnit": 12762,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9715,
        "nodeType": "ContractDefinition",
        "src": "191:1429:77",
        "nodes": [
          {
            "id": 9608,
            "nodeType": "VariableDeclaration",
            "src": "227:63:77",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "vm",
            "nameLocation": "230:2:77",
            "scope": 9715,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Vm_$12761",
              "typeString": "contract Vm"
            },
            "typeName": {
              "id": 9601,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9600,
                "name": "Vm",
                "nameLocations": [
                  "227:2:77"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 12761,
                "src": "227:2:77"
              },
              "referencedDeclaration": 12761,
              "src": "227:2:77",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$12761",
                "typeString": "contract Vm"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "307837313039373039454366613931613830363236664633393839443638663637463562314444313244",
                      "id": 9605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "246:42:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0x7109709ECfa91a80626fF3989D68f67F5b1DD12D"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    ],
                    "id": 9604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "238:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 9603,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "238:7:77",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 9606,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "238:51:77",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 9602,
                "name": "Vm",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 12761,
                "src": "235:2:77",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_Vm_$12761_$",
                  "typeString": "type(contract Vm)"
                }
              },
              "id": 9607,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "235:55:77",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$12761",
                "typeString": "contract Vm"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 9611,
            "nodeType": "VariableDeclaration",
            "src": "296:19:77",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "ethernaut",
            "nameLocation": "306:9:77",
            "scope": 9715,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Ethernaut_$5303",
              "typeString": "contract Ethernaut"
            },
            "typeName": {
              "id": 9610,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9609,
                "name": "Ethernaut",
                "nameLocations": [
                  "296:9:77"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5303,
                "src": "296:9:77"
              },
              "referencedDeclaration": 5303,
              "src": "296:9:77",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ethernaut_$5303",
                "typeString": "contract Ethernaut"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 9617,
            "nodeType": "VariableDeclaration",
            "src": "321:31:77",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "eoaAddress",
            "nameLocation": "329:10:77",
            "scope": 9715,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9612,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "321:7:77",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "30",
                  "id": 9615,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "350:1:77",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  }
                ],
                "id": 9614,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "342:7:77",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 9613,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "342:7:77",
                  "typeDescriptions": {}
                }
              },
              "id": 9616,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "342:10:77",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 9635,
            "nodeType": "FunctionDefinition",
            "src": "359:198:77",
            "nodes": [],
            "body": {
              "id": 9634,
              "nodeType": "Block",
              "src": "383:174:77",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 9625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9620,
                      "name": "ethernaut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9611,
                      "src": "446:9:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Ethernaut_$5303",
                        "typeString": "contract Ethernaut"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 9623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "458:13:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Ethernaut_$5303_$",
                          "typeString": "function () returns (contract Ethernaut)"
                        },
                        "typeName": {
                          "id": 9622,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 9621,
                            "name": "Ethernaut",
                            "nameLocations": [
                              "462:9:77"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 5303,
                            "src": "462:9:77"
                          },
                          "referencedDeclaration": 5303,
                          "src": "462:9:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Ethernaut_$5303",
                            "typeString": "contract Ethernaut"
                          }
                        }
                      },
                      "id": 9624,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "458:15:77",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Ethernaut_$5303",
                        "typeString": "contract Ethernaut"
                      }
                    },
                    "src": "446:27:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Ethernaut_$5303",
                      "typeString": "contract Ethernaut"
                    }
                  },
                  "id": 9626,
                  "nodeType": "ExpressionStatement",
                  "src": "446:27:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9630,
                        "name": "eoaAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9617,
                        "src": "530:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 9631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "542:7:77",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 9627,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9608,
                        "src": "522:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12761",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 9629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "525:4:77",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12680,
                      "src": "522:7:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 9632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "522:28:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9633,
                  "nodeType": "ExpressionStatement",
                  "src": "522:28:77"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "368:5:77",
            "parameters": {
              "id": 9618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "373:2:77"
            },
            "returnParameters": {
              "id": 9619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "383:0:77"
            },
            "scope": 9715,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 9714,
            "nodeType": "FunctionDefinition",
            "src": "563:1055:77",
            "nodes": [],
            "body": {
              "id": 9713,
              "nodeType": "Block",
              "src": "596:1022:77",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    9640
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9640,
                      "mutability": "mutable",
                      "name": "denialFactory",
                      "nameLocation": "699:13:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 9713,
                      "src": "685:27:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DenialFactory_$3897",
                        "typeString": "contract DenialFactory"
                      },
                      "typeName": {
                        "id": 9639,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9638,
                          "name": "DenialFactory",
                          "nameLocations": [
                            "685:13:77"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3897,
                          "src": "685:13:77"
                        },
                        "referencedDeclaration": 3897,
                        "src": "685:13:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DenialFactory_$3897",
                          "typeString": "contract DenialFactory"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9645,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 9643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "715:17:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_DenialFactory_$3897_$",
                        "typeString": "function () returns (contract DenialFactory)"
                      },
                      "typeName": {
                        "id": 9642,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9641,
                          "name": "DenialFactory",
                          "nameLocations": [
                            "719:13:77"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3897,
                          "src": "719:13:77"
                        },
                        "referencedDeclaration": 3897,
                        "src": "719:13:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DenialFactory_$3897",
                          "typeString": "contract DenialFactory"
                        }
                      }
                    },
                    "id": 9644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "715:19:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DenialFactory_$3897",
                      "typeString": "contract DenialFactory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "685:49:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9649,
                        "name": "denialFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9640,
                        "src": "768:13:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DenialFactory_$3897",
                          "typeString": "contract DenialFactory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DenialFactory_$3897",
                          "typeString": "contract DenialFactory"
                        }
                      ],
                      "expression": {
                        "id": 9646,
                        "name": "ethernaut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9611,
                        "src": "744:9:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ethernaut_$5303",
                          "typeString": "contract Ethernaut"
                        }
                      },
                      "id": 9648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "754:13:77",
                      "memberName": "registerLevel",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5172,
                      "src": "744:23:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Level_$3338_$returns$__$",
                        "typeString": "function (contract Level) external"
                      }
                    },
                    "id": 9650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "744:38:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9651,
                  "nodeType": "ExpressionStatement",
                  "src": "744:38:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9655,
                        "name": "eoaAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9617,
                        "src": "806:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9652,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9608,
                        "src": "792:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12761",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 9654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "795:10:77",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12656,
                      "src": "792:13:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 9656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "792:25:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9657,
                  "nodeType": "ExpressionStatement",
                  "src": "792:25:77"
                },
                {
                  "assignments": [
                    9659
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9659,
                      "mutability": "mutable",
                      "name": "levelAddress",
                      "nameLocation": "835:12:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 9713,
                      "src": "827:20:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 9658,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "827:7:77",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9666,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9664,
                        "name": "denialFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9640,
                        "src": "909:13:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DenialFactory_$3897",
                          "typeString": "contract DenialFactory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DenialFactory_$3897",
                          "typeString": "contract DenialFactory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_DenialFactory_$3897",
                            "typeString": "contract DenialFactory"
                          }
                        ],
                        "expression": {
                          "id": 9660,
                          "name": "ethernaut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9611,
                          "src": "850:9:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Ethernaut_$5303",
                            "typeString": "contract Ethernaut"
                          }
                        },
                        "id": 9661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "860:19:77",
                        "memberName": "createLevelInstance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5246,
                        "src": "850:29:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_contract$_Level_$3338_$returns$_t_address_$",
                          "typeString": "function (contract Level) payable external returns (address)"
                        }
                      },
                      "id": 9663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 9662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "887:7:77",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "850:45:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_contract$_Level_$3338_$returns$_t_address_$value",
                        "typeString": "function (contract Level) payable external returns (address)"
                      }
                    },
                    "id": 9665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "850:82:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "827:105:77"
                },
                {
                  "assignments": [
                    9669
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9669,
                      "mutability": "mutable",
                      "name": "ethernautDenial",
                      "nameLocation": "949:15:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 9713,
                      "src": "942:22:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Denial_$3786",
                        "typeString": "contract Denial"
                      },
                      "typeName": {
                        "id": 9668,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9667,
                          "name": "Denial",
                          "nameLocations": [
                            "942:6:77"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3786,
                          "src": "942:6:77"
                        },
                        "referencedDeclaration": 3786,
                        "src": "942:6:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Denial_$3786",
                          "typeString": "contract Denial"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9676,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9673,
                            "name": "levelAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9659,
                            "src": "982:12:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "974:8:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 9671,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "974:8:77",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "974:21:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 9670,
                      "name": "Denial",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3786,
                      "src": "967:6:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Denial_$3786_$",
                        "typeString": "type(contract Denial)"
                      }
                    },
                    "id": 9675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "967:29:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Denial_$3786",
                      "typeString": "contract Denial"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "942:54:77"
                },
                {
                  "assignments": [
                    9679
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9679,
                      "mutability": "mutable",
                      "name": "denialHack",
                      "nameLocation": "1138:10:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 9713,
                      "src": "1127:21:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DenialHack_$3913",
                        "typeString": "contract DenialHack"
                      },
                      "typeName": {
                        "id": 9678,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9677,
                          "name": "DenialHack",
                          "nameLocations": [
                            "1127:10:77"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3913,
                          "src": "1127:10:77"
                        },
                        "referencedDeclaration": 3913,
                        "src": "1127:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DenialHack_$3913",
                          "typeString": "contract DenialHack"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9684,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 9682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1151:14:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_DenialHack_$3913_$",
                        "typeString": "function () returns (contract DenialHack)"
                      },
                      "typeName": {
                        "id": 9681,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9680,
                          "name": "DenialHack",
                          "nameLocations": [
                            "1155:10:77"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3913,
                          "src": "1155:10:77"
                        },
                        "referencedDeclaration": 3913,
                        "src": "1155:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DenialHack_$3913",
                          "typeString": "contract DenialHack"
                        }
                      }
                    },
                    "id": 9683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1151:16:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DenialHack_$3913",
                      "typeString": "contract DenialHack"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1127:40:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9690,
                            "name": "denialHack",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9679,
                            "src": "1324:10:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DenialHack_$3913",
                              "typeString": "contract DenialHack"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DenialHack_$3913",
                              "typeString": "contract DenialHack"
                            }
                          ],
                          "id": 9689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1316:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9688,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1316:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1316:19:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9685,
                        "name": "ethernautDenial",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9669,
                        "src": "1281:15:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Denial_$3786",
                          "typeString": "contract Denial"
                        }
                      },
                      "id": 9687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1297:18:77",
                      "memberName": "setWithdrawPartner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3724,
                      "src": "1281:34:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 9692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1281:55:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9693,
                  "nodeType": "ExpressionStatement",
                  "src": "1281:55:77"
                },
                {
                  "assignments": [
                    9695
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9695,
                      "mutability": "mutable",
                      "name": "levelSuccessfullyPassed",
                      "nameLocation": "1446:23:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 9713,
                      "src": "1441:28:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 9694,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1441:4:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9703,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9700,
                            "name": "levelAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9659,
                            "src": "1523:12:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1515:8:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 9698,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1515:8:77",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1515:21:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 9696,
                        "name": "ethernaut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9611,
                        "src": "1472:9:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ethernaut_$5303",
                          "typeString": "contract Ethernaut"
                        }
                      },
                      "id": 9697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1482:19:77",
                      "memberName": "submitLevelInstance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5302,
                      "src": "1472:29:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$_t_bool_$",
                        "typeString": "function (address payable) external returns (bool)"
                      }
                    },
                    "id": 9702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1472:74:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1441:105:77"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 9704,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9608,
                        "src": "1556:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12761",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 9706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1559:9:77",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12673,
                      "src": "1556:12:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 9707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1556:14:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9708,
                  "nodeType": "ExpressionStatement",
                  "src": "1556:14:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9710,
                        "name": "levelSuccessfullyPassed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9695,
                        "src": "1587:23:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 9709,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1580:6:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 9711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1580:31:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9712,
                  "nodeType": "ExpressionStatement",
                  "src": "1580:31:77"
                }
              ]
            },
            "functionSelector": "065a6c95",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDenialHack",
            "nameLocation": "572:14:77",
            "parameters": {
              "id": 9636,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "586:2:77"
            },
            "returnParameters": {
              "id": 9637,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "596:0:77"
            },
            "scope": 9715,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9598,
              "name": "DSTest",
              "nameLocations": [
                "214:6:77"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1680,
              "src": "214:6:77"
            },
            "id": 9599,
            "nodeType": "InheritanceSpecifier",
            "src": "214:6:77"
          }
        ],
        "canonicalName": "DenialTest",
        "contractDependencies": [
          3897,
          3913,
          5303
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          9715,
          1680
        ],
        "name": "DenialTest",
        "nameLocation": "200:10:77",
        "scope": 9716,
        "usedErrors": []
      }
    ]
  },
  "id": 77
}