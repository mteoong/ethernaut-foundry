{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testNaughtCoinHack",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805461ff01600160b01b031916757109709ecfa91a80626ff3989d68f67f5b1dd12d000117905534801561003957600080fd5b50611f36806100496000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630a9254e41461005157806327b313c41461005b578063ba414fa614610063578063fa7626d414610089575b600080fd5b610059610096565b005b6100596100e1565b60005461007590610100900460ff1681565b604051901515815260200160405180910390f35b6000546100759060ff1681565b6040516100a290610470565b604051809103906000f0801580156100be573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b0392909216919091179055565b60006040516100ef9061047d565b604051809103906000f08015801561010b573d6000803e3d6000fd5b5060015460405163080808f560e21b81526001600160a01b03808416600483015292935091169063202023d490602401600060405180830381600087803b15801561015557600080fd5b505af1158015610169573d6000803e3d6000fd5b50506000546040516303223eab60e11b8152326004820152620100009091046001600160a01b031692506306447d569150602401600060405180830381600087803b1580156101b757600080fd5b505af11580156101cb573d6000803e3d6000fd5b505060015460405163dfc86b1760e01b81526001600160a01b03858116600483015260009450909116915063dfc86b17906024016020604051808303816000875af115801561021e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610242919061048a565b9050806001600160a01b03811663095ea7b3326102616012600a6105b6565b61026e90620f42406105c2565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156102b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102dd91906105d9565b506001600160a01b0381166323b872dd3260646102fc6012600a6105b6565b61030990620f42406105c2565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af115801561035d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038191906105d9565b506001546040516364416be160e11b81526001600160a01b038481166004830152600092169063c882d7c2906024016020604051808303816000875af11580156103cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f391906105d9565b9050600060029054906101000a90046001600160a01b03166001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561044557600080fd5b505af1158015610459573d6000803e3d6000fd5b505050508061046a5761046a6105fb565b50505050565b6106338061061283390190565b6112bc80610c4583390190565b60006020828403121561049c57600080fd5b81516001600160a01b03811681146104b357600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561050b5781600019048211156104f1576104f16104ba565b808516156104fe57918102915b93841c93908002906104d5565b509250929050565b600082610522575060016105b0565b8161052f575060006105b0565b8160018114610545576002811461054f5761056b565b60019150506105b0565b60ff841115610560576105606104ba565b50506001821b6105b0565b5060208310610133831016604e8410600b841016171561058e575081810a6105b0565b61059883836104d0565b80600019048211156105ac576105ac6104ba565b0290505b92915050565b60006104b38383610513565b80820281158282048414176105b0576105b06104ba565b6000602082840312156105eb57600080fd5b815180151581146104b357600080fd5b634e487b7160e01b600052600160045260246000fdfe608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105b58061007e6000396000f3fe6080604052600436106100555760003560e01c8063202023d41461005a578063715018a61461007c5780638da5cb5b14610091578063c882d7c2146100c8578063dfc86b17146100f8578063f2fde38b1461010b575b600080fd5b34801561006657600080fd5b5061007a61007536600461051c565b61012b565b005b34801561008857600080fd5b5061007a61015a565b34801561009d57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100d457600080fd5b506100e86100e336600461051c565b61016e565b60405190151581526020016100bf565b6100ab61010636600461051c565b610297565b34801561011757600080fd5b5061007a61012636600461051c565b6103df565b61013361045d565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b61016261045d565b61016c60006104b7565b565b6001600160a01b03808216600090815260026020526040812080549192909116331461019957600080fd5b6001810154600160a01b900460ff16156101b257600080fd5b600181015460405163d38def5b60e01b81526001600160a01b0385811660048301523360248301529091169063d38def5b906044016020604051808303816000875af1158015610206573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022a9190610540565b1561028e57600181018054600160a01b60ff60a01b198216179091556040516001600160a01b03909116815233907f9dfdf7e3e630f506a3dfe38cdbe34e196353364235df33e5a3b588488d9a1e789060200160405180910390a250600192915050565b50600092915050565b6001600160a01b03811660009081526001602052604081205460ff166102bc57600080fd5b604051633b937bbb60e11b81523360048201526000906001600160a01b03841690637726f77690349060240160206040518083038185885af1158015610306573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061032b9190610562565b60408051606081018252338082526001600160a01b03878116602080850191825260008587018181528885168083526002845291889020965187549086166001600160a01b031990911617875592516001909601805493511515600160a01b026001600160a81b031990941696909416959095179190911790915592519182529293507f7bf7f1ed7f75e83b76de0ff139966989aff81cb85aac26469c18978d86aac1c2910160405180910390a292915050565b6103e761045d565b6001600160a01b0381166104515760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61045a816104b7565b50565b6000546001600160a01b0316331461016c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610448565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461045a57600080fd5b60006020828403121561052e57600080fd5b813561053981610507565b9392505050565b60006020828403121561055257600080fd5b8151801515811461053957600080fd5b60006020828403121561057457600080fd5b81516105398161050756fea26469706673582212200a6985217144b514a794ae8ed1f3c70df9de73effaa640beeadf7107e0d7778564736f6c63430008110033608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61123e8061007e6000396000f3fe608060405260043610620000505760003560e01c8063715018a614620000555780637726f776146200006f5780638da5cb5b14620000a3578063d38def5b14620000c3578063f2fde38b14620000f9575b600080fd5b3480156200006257600080fd5b506200006d6200011e565b005b620000866200008036600462000349565b62000136565b6040516001600160a01b0390911681526020015b60405180910390f35b348015620000b057600080fd5b506000546001600160a01b031662000086565b348015620000d057600080fd5b50620000e8620000e236600462000370565b6200017b565b60405190151581526020016200009a565b3480156200010657600080fd5b506200006d6200011836600462000349565b620001f6565b6200012862000279565b620001346000620002d5565b565b600081604051620001479062000325565b6001600160a01b039091168152602001604051809103906000f08015801562000174573d6000803e3d6000fd5b5092915050565b6040516370a0823160e01b81526001600160a01b03828116600483015260009184918216906370a0823190602401602060405180830381865afa158015620001c7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001ed9190620003ae565b15949350505050565b6200020062000279565b6001600160a01b0381166200026b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6200027681620002d5565b50565b6000546001600160a01b03163314620001345760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640162000262565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610e4080620003c983390190565b6001600160a01b03811681146200027657600080fd5b6000602082840312156200035c57600080fd5b8135620003698162000333565b9392505050565b600080604083850312156200038457600080fd5b8235620003918162000333565b91506020830135620003a38162000333565b809150509250929050565b600060208284031215620003c157600080fd5b505191905056fe608060405262000014426312cc030062000219565b6005553480156200002457600080fd5b5060405162000e4038038062000e40833981016040819052620000479162000235565b6040518060400160405280600a8152602001692730bab3b43a21b7b4b760b11b8152506040518060400160405280600381526020016203078360ec1b81525081600390816200009791906200030b565b506004620000a682826200030b565b5050600780546001600160a01b0319166001600160a01b03841617905550620000cd601290565b620000dd9060ff16600a620004d4565b620000ec90620f4240620004e2565b60068190556007546200010b916001600160a01b039091169062000149565b6007546006546040519081526001600160a01b039091169060009060008051602062000e208339815191529060200160405180910390a350620004fc565b6001600160a01b038216620001a45760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620001b8919062000219565b90915550506001600160a01b0382166000818152602081815260408083208054860190555184815260008051602062000e20833981519152910160405180910390a35050565b505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156200022f576200022f62000203565b92915050565b6000602082840312156200024857600080fd5b81516001600160a01b03811681146200026057600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200029257607f821691505b602082108103620002b357634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001fe57600081815260208120601f850160051c81016020861015620002e25750805b601f850160051c820191505b818110156200030357828155600101620002ee565b505050505050565b81516001600160401b0381111562000327576200032762000267565b6200033f816200033884546200027d565b84620002b9565b602080601f8311600181146200037757600084156200035e5750858301515b600019600386901b1c1916600185901b17855562000303565b600085815260208120601f198616915b82811015620003a85788860151825594840194600190910190840162000387565b5085821015620003c75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600181815b8085111562000418578160001904821115620003fc57620003fc62000203565b808516156200040a57918102915b93841c9390800290620003dc565b509250929050565b60008262000431575060016200022f565b8162000440575060006200022f565b8160018114620004595760028114620004645762000484565b60019150506200022f565b60ff84111562000478576200047862000203565b50506001821b6200022f565b5060208310610133831016604e8410600b8410161715620004a9575081810a6200022f565b620004b58383620003d7565b8060001904821115620004cc57620004cc62000203565b029392505050565b600062000260838362000420565b80820281158282048414176200022f576200022f62000203565b610914806200050c6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806348db5f891161008c578063a457c2d711610066578063a457c2d7146101dc578063a9059cbb146101ef578063d085835a14610202578063dd62ed3e1461020b57600080fd5b806348db5f891461018057806370a08231146101ab57806395d89b41146101d457600080fd5b806323b872dd116100c857806323b872dd146101425780632ff2e9dc14610155578063313ce5671461015e578063395093511461016d57600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761021e565b604051610104919061075e565b60405180910390f35b61012061011b3660046107c8565b6102b0565b6040519015158152602001610104565b6002545b604051908152602001610104565b6101206101503660046107f2565b6102ca565b61013460065481565b60405160128152602001610104565b61012061017b3660046107c8565b6102ee565b600754610193906001600160a01b031681565b6040516001600160a01b039091168152602001610104565b6101346101b936600461082e565b6001600160a01b031660009081526020819052604090205490565b6100f7610310565b6101206101ea3660046107c8565b61031f565b6101206101fd3660046107c8565b61039f565b61013460055481565b610134610219366004610850565b6103e3565b60606003805461022d90610883565b80601f016020809104026020016040519081016040528092919081815260200182805461025990610883565b80156102a65780601f1061027b576101008083540402835291602001916102a6565b820191906000526020600020905b81548152906001019060200180831161028957829003601f168201915b5050505050905090565b6000336102be81858561040e565b60019150505b92915050565b6000336102d8858285610532565b6102e38585856105ac565b506001949350505050565b6000336102be81858561030183836103e3565b61030b91906108bd565b61040e565b60606004805461022d90610883565b6000338161032d82866103e3565b9050838110156103925760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102e3828686840361040e565b6007546000906001600160a01b031633036103d25760055442116103c257600080fd5b6103cc8383610750565b506102c4565b6103dc8383610750565b5092915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610389565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610389565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061053e84846103e3565b905060001981146105a657818110156105995760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610389565b6105a6848484840361040e565b50505050565b6001600160a01b0383166106105760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610389565b6001600160a01b0382166106725760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610389565b6001600160a01b038316600090815260208190526040902054818110156106ea5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610389565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36105a6565b6000336102be8185856105ac565b600060208083528351808285015260005b8181101561078b5785810183015185820160400152820161076f565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107c357600080fd5b919050565b600080604083850312156107db57600080fd5b6107e4836107ac565b946020939093013593505050565b60008060006060848603121561080757600080fd5b610810846107ac565b925061081e602085016107ac565b9150604084013590509250925092565b60006020828403121561084057600080fd5b610849826107ac565b9392505050565b6000806040838503121561086357600080fd5b61086c836107ac565b915061087a602084016107ac565b90509250929050565b600181811c9082168061089757607f821691505b6020821081036108b757634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102c457634e487b7160e01b600052601160045260246000fdfea26469706673582212205cab1a01828cf59ae182df667579f3910130de05d77f9695148735d77a09627364736f6c63430008110033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220a4477d326a9e70a775414a4fe9d5ebfe4e2119345f23e6249a1b0b3404539ed364736f6c63430008110033a26469706673582212207a0a03d37892d95e915eee0b8a13e42e4a10da6e07dfba135e860c2f6375f6c864736f6c63430008110033",
    "sourceMap": "160:1390:89:-:0;;;1573:26:0;;;-1:-1:-1;;;;;;200:63:89;;;;;160:1390;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80630a9254e41461005157806327b313c41461005b578063ba414fa614610063578063fa7626d414610089575b600080fd5b610059610096565b005b6100596100e1565b60005461007590610100900460ff1681565b604051901515815260200160405180910390f35b6000546100759060ff1681565b6040516100a290610470565b604051809103906000f0801580156100be573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b0392909216919091179055565b60006040516100ef9061047d565b604051809103906000f08015801561010b573d6000803e3d6000fd5b5060015460405163080808f560e21b81526001600160a01b03808416600483015292935091169063202023d490602401600060405180830381600087803b15801561015557600080fd5b505af1158015610169573d6000803e3d6000fd5b50506000546040516303223eab60e11b8152326004820152620100009091046001600160a01b031692506306447d569150602401600060405180830381600087803b1580156101b757600080fd5b505af11580156101cb573d6000803e3d6000fd5b505060015460405163dfc86b1760e01b81526001600160a01b03858116600483015260009450909116915063dfc86b17906024016020604051808303816000875af115801561021e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610242919061048a565b9050806001600160a01b03811663095ea7b3326102616012600a6105b6565b61026e90620f42406105c2565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156102b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102dd91906105d9565b506001600160a01b0381166323b872dd3260646102fc6012600a6105b6565b61030990620f42406105c2565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af115801561035d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038191906105d9565b506001546040516364416be160e11b81526001600160a01b038481166004830152600092169063c882d7c2906024016020604051808303816000875af11580156103cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f391906105d9565b9050600060029054906101000a90046001600160a01b03166001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561044557600080fd5b505af1158015610459573d6000803e3d6000fd5b505050508061046a5761046a6105fb565b50505050565b6106338061061283390190565b6112bc80610c4583390190565b60006020828403121561049c57600080fd5b81516001600160a01b03811681146104b357600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561050b5781600019048211156104f1576104f16104ba565b808516156104fe57918102915b93841c93908002906104d5565b509250929050565b600082610522575060016105b0565b8161052f575060006105b0565b8160018114610545576002811461054f5761056b565b60019150506105b0565b60ff841115610560576105606104ba565b50506001821b6105b0565b5060208310610133831016604e8410600b841016171561058e575081810a6105b0565b61059883836104d0565b80600019048211156105ac576105ac6104ba565b0290505b92915050565b60006104b38383610513565b80820281158282048414176105b0576105b06104ba565b6000602082840312156105eb57600080fd5b815180151581146104b357600080fd5b634e487b7160e01b600052600160045260246000fdfe608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105b58061007e6000396000f3fe6080604052600436106100555760003560e01c8063202023d41461005a578063715018a61461007c5780638da5cb5b14610091578063c882d7c2146100c8578063dfc86b17146100f8578063f2fde38b1461010b575b600080fd5b34801561006657600080fd5b5061007a61007536600461051c565b61012b565b005b34801561008857600080fd5b5061007a61015a565b34801561009d57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100d457600080fd5b506100e86100e336600461051c565b61016e565b60405190151581526020016100bf565b6100ab61010636600461051c565b610297565b34801561011757600080fd5b5061007a61012636600461051c565b6103df565b61013361045d565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b61016261045d565b61016c60006104b7565b565b6001600160a01b03808216600090815260026020526040812080549192909116331461019957600080fd5b6001810154600160a01b900460ff16156101b257600080fd5b600181015460405163d38def5b60e01b81526001600160a01b0385811660048301523360248301529091169063d38def5b906044016020604051808303816000875af1158015610206573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022a9190610540565b1561028e57600181018054600160a01b60ff60a01b198216179091556040516001600160a01b03909116815233907f9dfdf7e3e630f506a3dfe38cdbe34e196353364235df33e5a3b588488d9a1e789060200160405180910390a250600192915050565b50600092915050565b6001600160a01b03811660009081526001602052604081205460ff166102bc57600080fd5b604051633b937bbb60e11b81523360048201526000906001600160a01b03841690637726f77690349060240160206040518083038185885af1158015610306573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061032b9190610562565b60408051606081018252338082526001600160a01b03878116602080850191825260008587018181528885168083526002845291889020965187549086166001600160a01b031990911617875592516001909601805493511515600160a01b026001600160a81b031990941696909416959095179190911790915592519182529293507f7bf7f1ed7f75e83b76de0ff139966989aff81cb85aac26469c18978d86aac1c2910160405180910390a292915050565b6103e761045d565b6001600160a01b0381166104515760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61045a816104b7565b50565b6000546001600160a01b0316331461016c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610448565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461045a57600080fd5b60006020828403121561052e57600080fd5b813561053981610507565b9392505050565b60006020828403121561055257600080fd5b8151801515811461053957600080fd5b60006020828403121561057457600080fd5b81516105398161050756fea26469706673582212200a6985217144b514a794ae8ed1f3c70df9de73effaa640beeadf7107e0d7778564736f6c63430008110033608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61123e8061007e6000396000f3fe608060405260043610620000505760003560e01c8063715018a614620000555780637726f776146200006f5780638da5cb5b14620000a3578063d38def5b14620000c3578063f2fde38b14620000f9575b600080fd5b3480156200006257600080fd5b506200006d6200011e565b005b620000866200008036600462000349565b62000136565b6040516001600160a01b0390911681526020015b60405180910390f35b348015620000b057600080fd5b506000546001600160a01b031662000086565b348015620000d057600080fd5b50620000e8620000e236600462000370565b6200017b565b60405190151581526020016200009a565b3480156200010657600080fd5b506200006d6200011836600462000349565b620001f6565b6200012862000279565b620001346000620002d5565b565b600081604051620001479062000325565b6001600160a01b039091168152602001604051809103906000f08015801562000174573d6000803e3d6000fd5b5092915050565b6040516370a0823160e01b81526001600160a01b03828116600483015260009184918216906370a0823190602401602060405180830381865afa158015620001c7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001ed9190620003ae565b15949350505050565b6200020062000279565b6001600160a01b0381166200026b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6200027681620002d5565b50565b6000546001600160a01b03163314620001345760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640162000262565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610e4080620003c983390190565b6001600160a01b03811681146200027657600080fd5b6000602082840312156200035c57600080fd5b8135620003698162000333565b9392505050565b600080604083850312156200038457600080fd5b8235620003918162000333565b91506020830135620003a38162000333565b809150509250929050565b600060208284031215620003c157600080fd5b505191905056fe608060405262000014426312cc030062000219565b6005553480156200002457600080fd5b5060405162000e4038038062000e40833981016040819052620000479162000235565b6040518060400160405280600a8152602001692730bab3b43a21b7b4b760b11b8152506040518060400160405280600381526020016203078360ec1b81525081600390816200009791906200030b565b506004620000a682826200030b565b5050600780546001600160a01b0319166001600160a01b03841617905550620000cd601290565b620000dd9060ff16600a620004d4565b620000ec90620f4240620004e2565b60068190556007546200010b916001600160a01b039091169062000149565b6007546006546040519081526001600160a01b039091169060009060008051602062000e208339815191529060200160405180910390a350620004fc565b6001600160a01b038216620001a45760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620001b8919062000219565b90915550506001600160a01b0382166000818152602081815260408083208054860190555184815260008051602062000e20833981519152910160405180910390a35050565b505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156200022f576200022f62000203565b92915050565b6000602082840312156200024857600080fd5b81516001600160a01b03811681146200026057600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200029257607f821691505b602082108103620002b357634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001fe57600081815260208120601f850160051c81016020861015620002e25750805b601f850160051c820191505b818110156200030357828155600101620002ee565b505050505050565b81516001600160401b0381111562000327576200032762000267565b6200033f816200033884546200027d565b84620002b9565b602080601f8311600181146200037757600084156200035e5750858301515b600019600386901b1c1916600185901b17855562000303565b600085815260208120601f198616915b82811015620003a85788860151825594840194600190910190840162000387565b5085821015620003c75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600181815b8085111562000418578160001904821115620003fc57620003fc62000203565b808516156200040a57918102915b93841c9390800290620003dc565b509250929050565b60008262000431575060016200022f565b8162000440575060006200022f565b8160018114620004595760028114620004645762000484565b60019150506200022f565b60ff84111562000478576200047862000203565b50506001821b6200022f565b5060208310610133831016604e8410600b8410161715620004a9575081810a6200022f565b620004b58383620003d7565b8060001904821115620004cc57620004cc62000203565b029392505050565b600062000260838362000420565b80820281158282048414176200022f576200022f62000203565b610914806200050c6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806348db5f891161008c578063a457c2d711610066578063a457c2d7146101dc578063a9059cbb146101ef578063d085835a14610202578063dd62ed3e1461020b57600080fd5b806348db5f891461018057806370a08231146101ab57806395d89b41146101d457600080fd5b806323b872dd116100c857806323b872dd146101425780632ff2e9dc14610155578063313ce5671461015e578063395093511461016d57600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761021e565b604051610104919061075e565b60405180910390f35b61012061011b3660046107c8565b6102b0565b6040519015158152602001610104565b6002545b604051908152602001610104565b6101206101503660046107f2565b6102ca565b61013460065481565b60405160128152602001610104565b61012061017b3660046107c8565b6102ee565b600754610193906001600160a01b031681565b6040516001600160a01b039091168152602001610104565b6101346101b936600461082e565b6001600160a01b031660009081526020819052604090205490565b6100f7610310565b6101206101ea3660046107c8565b61031f565b6101206101fd3660046107c8565b61039f565b61013460055481565b610134610219366004610850565b6103e3565b60606003805461022d90610883565b80601f016020809104026020016040519081016040528092919081815260200182805461025990610883565b80156102a65780601f1061027b576101008083540402835291602001916102a6565b820191906000526020600020905b81548152906001019060200180831161028957829003601f168201915b5050505050905090565b6000336102be81858561040e565b60019150505b92915050565b6000336102d8858285610532565b6102e38585856105ac565b506001949350505050565b6000336102be81858561030183836103e3565b61030b91906108bd565b61040e565b60606004805461022d90610883565b6000338161032d82866103e3565b9050838110156103925760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102e3828686840361040e565b6007546000906001600160a01b031633036103d25760055442116103c257600080fd5b6103cc8383610750565b506102c4565b6103dc8383610750565b5092915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610389565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610389565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061053e84846103e3565b905060001981146105a657818110156105995760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610389565b6105a6848484840361040e565b50505050565b6001600160a01b0383166106105760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610389565b6001600160a01b0382166106725760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610389565b6001600160a01b038316600090815260208190526040902054818110156106ea5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610389565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36105a6565b6000336102be8185856105ac565b600060208083528351808285015260005b8181101561078b5785810183015185820160400152820161076f565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107c357600080fd5b919050565b600080604083850312156107db57600080fd5b6107e4836107ac565b946020939093013593505050565b60008060006060848603121561080757600080fd5b610810846107ac565b925061081e602085016107ac565b9150604084013590509250925092565b60006020828403121561084057600080fd5b610849826107ac565b9392505050565b6000806040838503121561086357600080fd5b61086c836107ac565b915061087a602084016107ac565b90509250929050565b600181811c9082168061089757607f821691505b6020821081036108b757634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102c457634e487b7160e01b600052601160045260246000fdfea26469706673582212205cab1a01828cf59ae182df667579f3910130de05d77f9695148735d77a09627364736f6c63430008110033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220a4477d326a9e70a775414a4fe9d5ebfe4e2119345f23e6249a1b0b3404539ed364736f6c63430008110033a26469706673582212207a0a03d37892d95e915eee0b8a13e42e4a10da6e07dfba135e860c2f6375f6c864736f6c63430008110033",
    "sourceMap": "160:1390:89:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;295:121;;;:::i;:::-;;422:1126;;;:::i;1605:18:0:-;;;;;;;;;;;;;;;179:14:100;;172:22;154:41;;142:2;127:18;1605::0;;;;;;;1573:26;;;;;;;;;295:121:89;394:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;382:9:89;:27;;-1:-1:-1;;;;;;382:27:89;-1:-1:-1;;;;;382:27:89;;;;;;;;;;295:121::o;422:1126::-;548:35;586:23;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;619:9:89;;:42;;-1:-1:-1;;;619:42:89;;-1:-1:-1;;;;;396:32:100;;;619:42:89;;;378:51:100;548:61:89;;-1:-1:-1;619:9:89;;;:23;;351:18:100;;619:42:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;671:2:89;;:24;;-1:-1:-1;;;671:24:89;;685:9;671:24;;;378:51:100;671:2:89;;;;-1:-1:-1;;;;;671:2:89;;-1:-1:-1;671:13:89;;-1:-1:-1;351:18:100;;671:24:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;728:9:89;;:48;;-1:-1:-1;;;728:48:89;;-1:-1:-1;;;;;396:32:100;;;728:48:89;;;378:51:100;705:20:89;;-1:-1:-1;728:9:89;;;;-1:-1:-1;728:29:89;;351:18:100;;728:48:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;705:71;-1:-1:-1;705:71:89;-1:-1:-1;;;;;1053:27:89;;;1081:9;1104:15;1116:2;1104;:15;:::i;:::-;1093:27;;:7;:27;:::i;:::-;1053:69;;-1:-1:-1;;;;;;1053:69:89;;;;;;;-1:-1:-1;;;;;2814:32:100;;;1053:69:89;;;2796:51:100;2863:18;;;2856:34;2769:18;;1053:69:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1132:32:89;;;1178:9;1209:3;1239:15;1251:2;1239;:15;:::i;:::-;1228:27;;:7;:27;:::i;:::-;1132:134;;-1:-1:-1;;;;;;1132:134:89;;;;;;;-1:-1:-1;;;;;3441:15:100;;;1132:134:89;;;3423:34:100;3493:15;;;;3473:18;;;3466:43;3525:18;;;3518:34;3358:18;;1132:134:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1402:9:89;;:74;;-1:-1:-1;;;1402:74:89;;-1:-1:-1;;;;;396:32:100;;;1402:74:89;;;378:51:100;1371:28:89;;1402:9;;:29;;351:18:100;;1402:74:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1371:105;;1486:2;;;;;;;;;-1:-1:-1;;;;;1486:2:89;-1:-1:-1;;;;;1486:12:89;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1517:23;1510:31;;;;:::i;:::-;459:1089;;;;422:1126::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;648:290:100:-;718:6;771:2;759:9;750:7;746:23;742:32;739:52;;;787:1;784;777:12;739:52;813:16;;-1:-1:-1;;;;;858:31:100;;848:42;;838:70;;904:1;901;894:12;838:70;927:5;648:290;-1:-1:-1;;;648:290:100:o;943:127::-;1004:10;999:3;995:20;992:1;985:31;1035:4;1032:1;1025:15;1059:4;1056:1;1049:15;1075:422;1164:1;1207:5;1164:1;1221:270;1242:7;1232:8;1229:21;1221:270;;;1301:4;1297:1;1293:6;1289:17;1283:4;1280:27;1277:53;;;1310:18;;:::i;:::-;1360:7;1350:8;1346:22;1343:55;;;1380:16;;;;1343:55;1459:22;;;;1419:15;;;;1221:270;;;1225:3;1075:422;;;;;:::o;1502:806::-;1551:5;1581:8;1571:80;;-1:-1:-1;1622:1:100;1636:5;;1571:80;1670:4;1660:76;;-1:-1:-1;1707:1:100;1721:5;;1660:76;1752:4;1770:1;1765:59;;;;1838:1;1833:130;;;;1745:218;;1765:59;1795:1;1786:10;;1809:5;;;1833:130;1870:3;1860:8;1857:17;1854:43;;;1877:18;;:::i;:::-;-1:-1:-1;;1933:1:100;1919:16;;1948:5;;1745:218;;2047:2;2037:8;2034:16;2028:3;2022:4;2019:13;2015:36;2009:2;1999:8;1996:16;1991:2;1985:4;1982:12;1978:35;1975:77;1972:159;;;-1:-1:-1;2084:19:100;;;2116:5;;1972:159;2163:34;2188:8;2182:4;2163:34;:::i;:::-;2233:6;2229:1;2225:6;2221:19;2212:7;2209:32;2206:58;;;2244:18;;:::i;:::-;2282:20;;-1:-1:-1;1502:806:100;;;;;:::o;2313:131::-;2373:5;2402:36;2429:8;2423:4;2402:36;:::i;2449:168::-;2522:9;;;2553;;2570:15;;;2564:22;;2550:37;2540:71;;2591:18;;:::i;2901:277::-;2968:6;3021:2;3009:9;3000:7;2996:23;2992:32;2989:52;;;3037:1;3034;3027:12;2989:52;3069:9;3063:16;3122:5;3115:13;3108:21;3101:5;3098:32;3088:60;;3144:1;3141;3134:12;3787:127;3848:10;3843:3;3839:20;3836:1;3829:31;3879:4;3876:1;3869:15;3903:4;3900:1;3893:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testNaughtCoinHack()": "27b313c4"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testNaughtCoinHack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/NaughtCoin.sol\":\"NaughtCoinTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/ds-test/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/ds-test/src/test.sol\":{\"keccak256\":\"0x529f30c5939d75689f6a982f7f96b8898bed30bd90ec5b385b57cab681e12b00\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://89075d5a96e87acef1d00cf556b409d1836728ec2e92f5629ceb5cae3d1e4354\",\"dweb:/ipfs/QmPAViJrxffEDns9GEMVSAzmr3soAzfrEg1CVuovwmNfnt\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/BaseLevel.sol\":{\"keccak256\":\"0x96532046614f14ded4ed0582d37d1bfb6d8ce0423403094476ae9533323a5af8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b9e8bbc7f3c8d982885e58c27a2d063008abef55e70db5eae1358e3d5f7f5b0\",\"dweb:/ipfs/QmNpDPfDEeYYAdYM14p3ef3wgcgjNYjCqwXqKT6mVv8MK8\"]},\"src/Ethernaut.sol\":{\"keccak256\":\"0xdfd342f8053ad866770cc1a48c60e938dfa4a305c3b3fcdde1f60fd4fa7ad655\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28eabd1b8915a2615d24b7ed674f4a924f59ad7305ff481862d00382df3d0348\",\"dweb:/ipfs/QmPpaCPEZnCadgkzptPrD4hkaz6JuL5k5pS2TjaUCYAPZ6\"]},\"src/NaughtCoin/NaughtCoin.sol\":{\"keccak256\":\"0xbb70c0b7523b28614deb74a8d66d2052c62acdccd7fbb2611da794ceded48231\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef0466b9b8c4577d91313d3361608aaf79cf5fd69d11922fe359b3a790ef6466\",\"dweb:/ipfs/QmdiT5QraucZGAJWnRBG2N4yuSYv15xKq8fwCH1eQsPGzr\"]},\"src/NaughtCoin/NaughtCoinFactory.sol\":{\"keccak256\":\"0x3f81ddd1d75942a6776f2430ad4bcde10c9256419018441e607184c91e293d93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a373367bc564bee0c9a418b2938053e23cdb8073fba435ab322156800187597\",\"dweb:/ipfs/QmNzPf3GKVK3Pe5Rtkiedsn93pe99x2SGRgCVeir5cKk8k\"]},\"test/NaughtCoin.sol\":{\"keccak256\":\"0x0f270f93b46ac26c5426bbc707777270713c4c3fa30b9f8aeff7a5bf2047f328\",\"urls\":[\"bzz-raw://4619c023e7c5a27aef2a22a9c0aef84d7d4a1b2efcb70fea3673637fb16e7b08\",\"dweb:/ipfs/Qmb4gvmEw3g7JUc5ohkHKN7vDJQ3Apj3DiDdG6ocVCP9g2\"]},\"test/utils/vm.sol\":{\"keccak256\":\"0xc34f4b14c4d624ca1d6dbe5434a8328de77817a089067d661ba1a657f46289cc\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://a1dad3c6483f228f98c9e3c492a70277d9e9ef2f65f4153d6082f9b3acee4a7e\",\"dweb:/ipfs/QmXUrWED9yhK4C5LvWbYLEBexwqYgrxRzcefgdYYVB51xt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testNaughtCoinHack"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/ds-test/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/NaughtCoin.sol": "NaughtCoinTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/ds-test/src/test.sol": {
        "keccak256": "0x529f30c5939d75689f6a982f7f96b8898bed30bd90ec5b385b57cab681e12b00",
        "urls": [
          "bzz-raw://89075d5a96e87acef1d00cf556b409d1836728ec2e92f5629ceb5cae3d1e4354",
          "dweb:/ipfs/QmPAViJrxffEDns9GEMVSAzmr3soAzfrEg1CVuovwmNfnt"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/BaseLevel.sol": {
        "keccak256": "0x96532046614f14ded4ed0582d37d1bfb6d8ce0423403094476ae9533323a5af8",
        "urls": [
          "bzz-raw://9b9e8bbc7f3c8d982885e58c27a2d063008abef55e70db5eae1358e3d5f7f5b0",
          "dweb:/ipfs/QmNpDPfDEeYYAdYM14p3ef3wgcgjNYjCqwXqKT6mVv8MK8"
        ],
        "license": "MIT"
      },
      "src/Ethernaut.sol": {
        "keccak256": "0xdfd342f8053ad866770cc1a48c60e938dfa4a305c3b3fcdde1f60fd4fa7ad655",
        "urls": [
          "bzz-raw://28eabd1b8915a2615d24b7ed674f4a924f59ad7305ff481862d00382df3d0348",
          "dweb:/ipfs/QmPpaCPEZnCadgkzptPrD4hkaz6JuL5k5pS2TjaUCYAPZ6"
        ],
        "license": "MIT"
      },
      "src/NaughtCoin/NaughtCoin.sol": {
        "keccak256": "0xbb70c0b7523b28614deb74a8d66d2052c62acdccd7fbb2611da794ceded48231",
        "urls": [
          "bzz-raw://ef0466b9b8c4577d91313d3361608aaf79cf5fd69d11922fe359b3a790ef6466",
          "dweb:/ipfs/QmdiT5QraucZGAJWnRBG2N4yuSYv15xKq8fwCH1eQsPGzr"
        ],
        "license": "MIT"
      },
      "src/NaughtCoin/NaughtCoinFactory.sol": {
        "keccak256": "0x3f81ddd1d75942a6776f2430ad4bcde10c9256419018441e607184c91e293d93",
        "urls": [
          "bzz-raw://5a373367bc564bee0c9a418b2938053e23cdb8073fba435ab322156800187597",
          "dweb:/ipfs/QmNzPf3GKVK3Pe5Rtkiedsn93pe99x2SGRgCVeir5cKk8k"
        ],
        "license": "MIT"
      },
      "test/NaughtCoin.sol": {
        "keccak256": "0x0f270f93b46ac26c5426bbc707777270713c4c3fa30b9f8aeff7a5bf2047f328",
        "urls": [
          "bzz-raw://4619c023e7c5a27aef2a22a9c0aef84d7d4a1b2efcb70fea3673637fb16e7b08",
          "dweb:/ipfs/Qmb4gvmEw3g7JUc5ohkHKN7vDJQ3Apj3DiDdG6ocVCP9g2"
        ],
        "license": null
      },
      "test/utils/vm.sol": {
        "keccak256": "0xc34f4b14c4d624ca1d6dbe5434a8328de77817a089067d661ba1a657f46289cc",
        "urls": [
          "bzz-raw://a1dad3c6483f228f98c9e3c492a70277d9e9ef2f65f4153d6082f9b3acee4a7e",
          "dweb:/ipfs/QmXUrWED9yhK4C5LvWbYLEBexwqYgrxRzcefgdYYVB51xt"
        ],
        "license": "Unlicense"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/NaughtCoin.sol",
    "id": 11302,
    "exportedSymbols": {
      "Context": [
        3004
      ],
      "DSTest": [
        1680
      ],
      "ERC20": [
        2549
      ],
      "Ethernaut": [
        5303
      ],
      "IERC20": [
        2627
      ],
      "IERC20Metadata": [
        2652
      ],
      "Level": [
        3338
      ],
      "NaughtCoin": [
        6912
      ],
      "NaughtCoinFactory": [
        6962
      ],
      "NaughtCoinTest": [
        11301
      ],
      "Ownable": [
        1793
      ],
      "Vm": [
        12761
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:1551:89",
    "nodes": [
      {
        "id": 11172,
        "nodeType": "PragmaDirective",
        "src": "0:24:89",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 11173,
        "nodeType": "ImportDirective",
        "src": "26:26:89",
        "nodes": [],
        "absolutePath": "lib/ds-test/src/test.sol",
        "file": "ds-test/test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11302,
        "sourceUnit": 1681,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 11174,
        "nodeType": "ImportDirective",
        "src": "53:49:89",
        "nodes": [],
        "absolutePath": "src/NaughtCoin/NaughtCoinFactory.sol",
        "file": "../src/NaughtCoin/NaughtCoinFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11302,
        "sourceUnit": 6963,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 11175,
        "nodeType": "ImportDirective",
        "src": "103:30:89",
        "nodes": [],
        "absolutePath": "src/Ethernaut.sol",
        "file": "../src/Ethernaut.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11302,
        "sourceUnit": 5304,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 11176,
        "nodeType": "ImportDirective",
        "src": "134:24:89",
        "nodes": [],
        "absolutePath": "test/utils/vm.sol",
        "file": "./utils/vm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11302,
        "sourceUnit": 12762,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 11301,
        "nodeType": "ContractDefinition",
        "src": "160:1390:89",
        "nodes": [
          {
            "id": 11187,
            "nodeType": "VariableDeclaration",
            "src": "200:63:89",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "vm",
            "nameLocation": "203:2:89",
            "scope": 11301,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Vm_$12761",
              "typeString": "contract Vm"
            },
            "typeName": {
              "id": 11180,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11179,
                "name": "Vm",
                "nameLocations": [
                  "200:2:89"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 12761,
                "src": "200:2:89"
              },
              "referencedDeclaration": 12761,
              "src": "200:2:89",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$12761",
                "typeString": "contract Vm"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "307837313039373039454366613931613830363236664633393839443638663637463562314444313244",
                      "id": 11184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "219:42:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0x7109709ECfa91a80626fF3989D68f67F5b1DD12D"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    ],
                    "id": 11183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "211:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 11182,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "211:7:89",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 11185,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "211:51:89",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 11181,
                "name": "Vm",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 12761,
                "src": "208:2:89",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_Vm_$12761_$",
                  "typeString": "type(contract Vm)"
                }
              },
              "id": 11186,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "208:55:89",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$12761",
                "typeString": "contract Vm"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 11190,
            "nodeType": "VariableDeclaration",
            "src": "269:19:89",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "ethernaut",
            "nameLocation": "279:9:89",
            "scope": 11301,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Ethernaut_$5303",
              "typeString": "contract Ethernaut"
            },
            "typeName": {
              "id": 11189,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11188,
                "name": "Ethernaut",
                "nameLocations": [
                  "269:9:89"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5303,
                "src": "269:9:89"
              },
              "referencedDeclaration": 5303,
              "src": "269:9:89",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ethernaut_$5303",
                "typeString": "contract Ethernaut"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 11201,
            "nodeType": "FunctionDefinition",
            "src": "295:121:89",
            "nodes": [],
            "body": {
              "id": 11200,
              "nodeType": "Block",
              "src": "319:97:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 11198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11193,
                      "name": "ethernaut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11190,
                      "src": "382:9:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Ethernaut_$5303",
                        "typeString": "contract Ethernaut"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 11196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "394:13:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Ethernaut_$5303_$",
                          "typeString": "function () returns (contract Ethernaut)"
                        },
                        "typeName": {
                          "id": 11195,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 11194,
                            "name": "Ethernaut",
                            "nameLocations": [
                              "398:9:89"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 5303,
                            "src": "398:9:89"
                          },
                          "referencedDeclaration": 5303,
                          "src": "398:9:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Ethernaut_$5303",
                            "typeString": "contract Ethernaut"
                          }
                        }
                      },
                      "id": 11197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "394:15:89",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Ethernaut_$5303",
                        "typeString": "contract Ethernaut"
                      }
                    },
                    "src": "382:27:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Ethernaut_$5303",
                      "typeString": "contract Ethernaut"
                    }
                  },
                  "id": 11199,
                  "nodeType": "ExpressionStatement",
                  "src": "382:27:89"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "304:5:89",
            "parameters": {
              "id": 11191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "309:2:89"
            },
            "returnParameters": {
              "id": 11192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "319:0:89"
            },
            "scope": 11301,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 11300,
            "nodeType": "FunctionDefinition",
            "src": "422:1126:89",
            "nodes": [],
            "body": {
              "id": 11299,
              "nodeType": "Block",
              "src": "459:1089:89",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    11206
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11206,
                      "mutability": "mutable",
                      "name": "naughtCoinFactory",
                      "nameLocation": "566:17:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 11299,
                      "src": "548:35:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NaughtCoinFactory_$6962",
                        "typeString": "contract NaughtCoinFactory"
                      },
                      "typeName": {
                        "id": 11205,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11204,
                          "name": "NaughtCoinFactory",
                          "nameLocations": [
                            "548:17:89"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6962,
                          "src": "548:17:89"
                        },
                        "referencedDeclaration": 6962,
                        "src": "548:17:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NaughtCoinFactory_$6962",
                          "typeString": "contract NaughtCoinFactory"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11211,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 11209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "586:21:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_NaughtCoinFactory_$6962_$",
                        "typeString": "function () returns (contract NaughtCoinFactory)"
                      },
                      "typeName": {
                        "id": 11208,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11207,
                          "name": "NaughtCoinFactory",
                          "nameLocations": [
                            "590:17:89"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6962,
                          "src": "590:17:89"
                        },
                        "referencedDeclaration": 6962,
                        "src": "590:17:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NaughtCoinFactory_$6962",
                          "typeString": "contract NaughtCoinFactory"
                        }
                      }
                    },
                    "id": 11210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "586:23:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NaughtCoinFactory_$6962",
                      "typeString": "contract NaughtCoinFactory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "548:61:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11215,
                        "name": "naughtCoinFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11206,
                        "src": "643:17:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NaughtCoinFactory_$6962",
                          "typeString": "contract NaughtCoinFactory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_NaughtCoinFactory_$6962",
                          "typeString": "contract NaughtCoinFactory"
                        }
                      ],
                      "expression": {
                        "id": 11212,
                        "name": "ethernaut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11190,
                        "src": "619:9:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ethernaut_$5303",
                          "typeString": "contract Ethernaut"
                        }
                      },
                      "id": 11214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "629:13:89",
                      "memberName": "registerLevel",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5172,
                      "src": "619:23:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Level_$3338_$returns$__$",
                        "typeString": "function (contract Level) external"
                      }
                    },
                    "id": 11216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "619:42:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11217,
                  "nodeType": "ExpressionStatement",
                  "src": "619:42:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11221,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "685:2:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 11222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "688:6:89",
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "685:9:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 11218,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11187,
                        "src": "671:2:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12761",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 11220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "674:10:89",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12656,
                      "src": "671:13:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 11223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "671:24:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11224,
                  "nodeType": "ExpressionStatement",
                  "src": "671:24:89"
                },
                {
                  "assignments": [
                    11226
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11226,
                      "mutability": "mutable",
                      "name": "levelAddress",
                      "nameLocation": "713:12:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 11299,
                      "src": "705:20:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 11225,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "705:7:89",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11231,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 11229,
                        "name": "naughtCoinFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11206,
                        "src": "758:17:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NaughtCoinFactory_$6962",
                          "typeString": "contract NaughtCoinFactory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_NaughtCoinFactory_$6962",
                          "typeString": "contract NaughtCoinFactory"
                        }
                      ],
                      "expression": {
                        "id": 11227,
                        "name": "ethernaut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11190,
                        "src": "728:9:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ethernaut_$5303",
                          "typeString": "contract Ethernaut"
                        }
                      },
                      "id": 11228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "738:19:89",
                      "memberName": "createLevelInstance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5246,
                      "src": "728:29:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_contract$_Level_$3338_$returns$_t_address_$",
                        "typeString": "function (contract Level) payable external returns (address)"
                      }
                    },
                    "id": 11230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "728:48:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "705:71:89"
                },
                {
                  "assignments": [
                    11234
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11234,
                      "mutability": "mutable",
                      "name": "ethernautNaughtCoin",
                      "nameLocation": "797:19:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 11299,
                      "src": "786:30:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NaughtCoin_$6912",
                        "typeString": "contract NaughtCoin"
                      },
                      "typeName": {
                        "id": 11233,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11232,
                          "name": "NaughtCoin",
                          "nameLocations": [
                            "786:10:89"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6912,
                          "src": "786:10:89"
                        },
                        "referencedDeclaration": 6912,
                        "src": "786:10:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NaughtCoin_$6912",
                          "typeString": "contract NaughtCoin"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11241,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11238,
                            "name": "levelAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11226,
                            "src": "838:12:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 11237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "830:8:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 11236,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "830:8:89",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "830:21:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 11235,
                      "name": "NaughtCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6912,
                      "src": "819:10:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_NaughtCoin_$6912_$",
                        "typeString": "type(contract NaughtCoin)"
                      }
                    },
                    "id": 11240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "819:33:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NaughtCoin_$6912",
                      "typeString": "contract NaughtCoin"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "786:66:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11245,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "1081:2:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 11246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1084:6:89",
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "1081:9:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 11255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "31303030303030",
                              "id": 11247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1093:7:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "value": "1000000"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 11253,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3130",
                                    "id": 11248,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1104:2:89",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "hexValue": "3138",
                                        "id": 11251,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1116:2:89",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_18_by_1",
                                          "typeString": "int_const 18"
                                        },
                                        "value": "18"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_18_by_1",
                                          "typeString": "int_const 18"
                                        }
                                      ],
                                      "id": 11250,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1108:7:89",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 11249,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1108:7:89",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 11252,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1108:11:89",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1104:15:89",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 11254,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1103:17:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1093:27:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 11256,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1092:29:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11242,
                        "name": "ethernautNaughtCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11234,
                        "src": "1053:19:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NaughtCoin_$6912",
                          "typeString": "contract NaughtCoin"
                        }
                      },
                      "id": 11244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1073:7:89",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2129,
                      "src": "1053:27:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 11257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1053:69:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11258,
                  "nodeType": "ExpressionStatement",
                  "src": "1053:69:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11262,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "1178:2:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 11263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1181:6:89",
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "1178:9:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "313030",
                            "id": 11266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1209:3:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            }
                          ],
                          "id": 11265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1201:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11264,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1201:7:89",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1201:12:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 11276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "31303030303030",
                              "id": 11268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1228:7:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "value": "1000000"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 11274,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3130",
                                    "id": 11269,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1239:2:89",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "hexValue": "3138",
                                        "id": 11272,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1251:2:89",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_18_by_1",
                                          "typeString": "int_const 18"
                                        },
                                        "value": "18"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_18_by_1",
                                          "typeString": "int_const 18"
                                        }
                                      ],
                                      "id": 11271,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1243:7:89",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 11270,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1243:7:89",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 11273,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1243:11:89",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1239:15:89",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 11275,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1238:17:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1228:27:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 11277,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1227:29:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11259,
                        "name": "ethernautNaughtCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11234,
                        "src": "1132:19:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NaughtCoin_$6912",
                          "typeString": "contract NaughtCoin"
                        }
                      },
                      "id": 11261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1152:12:89",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2162,
                      "src": "1132:32:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 11278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1132:134:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11279,
                  "nodeType": "ExpressionStatement",
                  "src": "1132:134:89"
                },
                {
                  "assignments": [
                    11281
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11281,
                      "mutability": "mutable",
                      "name": "levelSuccessfullyPassed",
                      "nameLocation": "1376:23:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 11299,
                      "src": "1371:28:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 11280,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1371:4:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11289,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11286,
                            "name": "levelAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11226,
                            "src": "1453:12:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 11285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1445:8:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 11284,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1445:8:89",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1445:21:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 11282,
                        "name": "ethernaut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11190,
                        "src": "1402:9:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ethernaut_$5303",
                          "typeString": "contract Ethernaut"
                        }
                      },
                      "id": 11283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1412:19:89",
                      "memberName": "submitLevelInstance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5302,
                      "src": "1402:29:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$_t_bool_$",
                        "typeString": "function (address payable) external returns (bool)"
                      }
                    },
                    "id": 11288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1402:74:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1371:105:89"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 11290,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11187,
                        "src": "1486:2:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12761",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 11292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1489:9:89",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12673,
                      "src": "1486:12:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 11293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1486:14:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11294,
                  "nodeType": "ExpressionStatement",
                  "src": "1486:14:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11296,
                        "name": "levelSuccessfullyPassed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11281,
                        "src": "1517:23:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 11295,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1510:6:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 11297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1510:31:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11298,
                  "nodeType": "ExpressionStatement",
                  "src": "1510:31:89"
                }
              ]
            },
            "functionSelector": "27b313c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testNaughtCoinHack",
            "nameLocation": "431:18:89",
            "parameters": {
              "id": 11202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "449:2:89"
            },
            "returnParameters": {
              "id": 11203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "459:0:89"
            },
            "scope": 11301,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11177,
              "name": "DSTest",
              "nameLocations": [
                "187:6:89"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1680,
              "src": "187:6:89"
            },
            "id": 11178,
            "nodeType": "InheritanceSpecifier",
            "src": "187:6:89"
          }
        ],
        "canonicalName": "NaughtCoinTest",
        "contractDependencies": [
          5303,
          6962
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          11301,
          1680
        ],
        "name": "NaughtCoinTest",
        "nameLocation": "169:14:89",
        "scope": 11302,
        "usedErrors": []
      }
    ]
  },
  "id": 89
}