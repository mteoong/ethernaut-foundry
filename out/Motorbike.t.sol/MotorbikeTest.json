{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "answer",
          "type": "bool"
        }
      ],
      "name": "IsTrue",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMotorbikeHack",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805460ff19166001179055601380546001600160a01b031916606417905534801561003057600080fd5b50610c1d806100406000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630a9254e414610051578063ba414fa61461005b578063e9f53db414610081578063fa7626d414610089575b600080fd5b610059610096565b005b60005461006d90610100900460ff1681565b604051901515815260200160405180910390f35b610059610117565b60005461006d9060ff1681565b60135460405163c88a5e6d60e01b81526001600160a01b039091166004820152674563918244f400006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b1580156100fd57600080fd5b505af1158015610111573d6000803e3d6000fd5b50505050565b600060405161012590610296565b604051809103906000f080158015610141573d6000803e3d6000fd5b509050600081604051610153906102a3565b6001600160a01b039091168152602001604051809103906000f08015801561017f573d6000803e3d6000fd5b5090506000819050826001600160a01b0316638129fc1c6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156101c257600080fd5b505af11580156101d6573d6000803e3d6000fd5b5050505060006040516101e8906102b0565b604051809103906000f080158015610204573d6000803e3d6000fd5b506040805160048082526024820183526020820180516001600160e01b031663204a7f0760e21b179052915163278f794360e11b8152929350916001600160a01b03871691634f1ef2869161025d9186918691016102bc565b600060405180830381600087803b15801561027757600080fd5b505af115801561028b573d6000803e3d6000fd5b505050505050505050565b6105878061031b83390190565b6102bf806108a283390190565b608780610b6183390190565b60018060a01b038316815260006020604081840152835180604085015260005b818110156102f8578581018301518582016060015282016102dc565b506000606082860101526060601f19601f83011685010192505050939250505056fe608060405234801561001057600080fd5b50610567806100206000396000f3fe60806040526004361061004a5760003560e01c80634f1ef2861461004f578063564f6d71146100645780638129fc1c1461008d578063af269745146100a2578063b3018e92146100e0575b600080fd5b61006261005d366004610432565b6100f5565b005b34801561007057600080fd5b5061007a60015481565b6040519081526020015b60405180910390f35b34801561009957600080fd5b5061006261010b565b3480156100ae57600080fd5b506000546100c8906201000090046001600160a01b031681565b6040516001600160a01b039091168152602001610084565b3480156100ec57600080fd5b50610062610238565b6100fd61026e565b61010782826102c0565b5050565b600054610100900460ff161580801561012b5750600054600160ff909116105b806101455750303b158015610145575060005460ff166001145b6101ad5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156101d0576000805461ff0019166101001790555b6103e86001556000805462010000600160b01b0319163362010000021790558015610235576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b604051604281527fb8ff236ae922fc5005e85d78459b7da25512b06a560d5344ce136ccb90c770b89060200160405180910390a1565b6000546201000090046001600160a01b031633146102be5760405162461bcd60e51b815260206004820152600d60248201526c43616e2774207570677261646560981b60448201526064016101a4565b565b6102c98261036e565b805115610107576000826001600160a01b0316826040516102ea9190610502565b600060405180830381855af49150503d8060008114610325576040519150601f19603f3d011682016040523d82523d6000602084013e61032a565b606091505b50509050806103695760405162461bcd60e51b815260206004820152600b60248201526a10d85b1b0819985a5b195960aa1b60448201526064016101a4565b505050565b6001600160a01b0381163b6103db5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016101a4565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561044557600080fd5b82356001600160a01b038116811461045c57600080fd5b9150602083013567ffffffffffffffff8082111561047957600080fd5b818501915085601f83011261048d57600080fd5b81358181111561049f5761049f61041c565b604051601f8201601f19908116603f011681019083821181831017156104c7576104c761041c565b816040528281528860208487010111156104e057600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000825160005b818110156105235760208186018101518583015201610509565b50600092019182525091905056fea264697066735822122049a1e8bcb380a14f7f6a332b6e28f1f5f39fbf793a0aaca0a57ce5cebadf0e0a64736f6c63430008110033608060405234801561001057600080fd5b506040516102bf3803806102bf83398101604081905261002f916101b3565b610042816101a460201b61005a1760201c565b6100a95760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0383166001600160a01b0319909116811790915560408051600481526024810182526020810180516001600160e01b031663204a7f0760e21b17905290516000929161011e916101e3565b600060405180830381855af49150503d8060008114610159576040519150601f19603f3d011682016040523d82523d6000602084013e61015e565b606091505b505090508061019d5760405162461bcd60e51b815260206004820152600b60248201526a10d85b1b0819985a5b195960aa1b60448201526064016100a0565b5050610212565b6001600160a01b03163b151590565b6000602082840312156101c557600080fd5b81516001600160a01b03811681146101dc57600080fd5b9392505050565b6000825160005b8181101561020457602081860181015185830152016101ea565b506000920191825250919050565b609f806102206000396000f3fe608060405260357f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b03166037565b005b3660008037600080366000845af43d6000803e8080156055573d6000f35b3d6000fd5b6001600160a01b03163b15159056fea264697066735822122036ca825837ac54f6ca44520dba1fd1a63cf56226a4b051d031334ea011ea290a64736f6c634300081100336080604052348015600f57600080fd5b50606a80601d6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80638129fc1c14602d575b600080fd5b603233ff5b00fea2646970667358221220db2dd58f5b0d3818d1123fe1ae9038d4abd075f4f7e6d47cdf95e6a40e004ab264736f6c63430008110033a26469706673582212206a03a4e03cbcc2625f4293008549ea8faefdedd4c17dd87bd72311188e9f0bd564736f6c63430008110033",
    "sourceMap": "97:1711:101:-:0;;;1573:26:0;;;-1:-1:-1;;1573:26:0;1595:4;1573:26;;;134:33:101;;;-1:-1:-1;;;;;;134:33:101;163:3;134:33;;;97:1711;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80630a9254e414610051578063ba414fa61461005b578063e9f53db414610081578063fa7626d414610089575b600080fd5b610059610096565b005b60005461006d90610100900460ff1681565b604051901515815260200160405180910390f35b610059610117565b60005461006d9060ff1681565b60135460405163c88a5e6d60e01b81526001600160a01b039091166004820152674563918244f400006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b1580156100fd57600080fd5b505af1158015610111573d6000803e3d6000fd5b50505050565b600060405161012590610296565b604051809103906000f080158015610141573d6000803e3d6000fd5b509050600081604051610153906102a3565b6001600160a01b039091168152602001604051809103906000f08015801561017f573d6000803e3d6000fd5b5090506000819050826001600160a01b0316638129fc1c6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156101c257600080fd5b505af11580156101d6573d6000803e3d6000fd5b5050505060006040516101e8906102b0565b604051809103906000f080158015610204573d6000803e3d6000fd5b506040805160048082526024820183526020820180516001600160e01b031663204a7f0760e21b179052915163278f794360e11b8152929350916001600160a01b03871691634f1ef2869161025d9186918691016102bc565b600060405180830381600087803b15801561027757600080fd5b505af115801561028b573d6000803e3d6000fd5b505050505050505050565b6105878061031b83390190565b6102bf806108a283390190565b608780610b6183390190565b60018060a01b038316815260006020604081840152835180604085015260005b818110156102f8578581018301518582016060015282016102dc565b506000606082860101526060601f19601f83011685010192505050939250505056fe608060405234801561001057600080fd5b50610567806100206000396000f3fe60806040526004361061004a5760003560e01c80634f1ef2861461004f578063564f6d71146100645780638129fc1c1461008d578063af269745146100a2578063b3018e92146100e0575b600080fd5b61006261005d366004610432565b6100f5565b005b34801561007057600080fd5b5061007a60015481565b6040519081526020015b60405180910390f35b34801561009957600080fd5b5061006261010b565b3480156100ae57600080fd5b506000546100c8906201000090046001600160a01b031681565b6040516001600160a01b039091168152602001610084565b3480156100ec57600080fd5b50610062610238565b6100fd61026e565b61010782826102c0565b5050565b600054610100900460ff161580801561012b5750600054600160ff909116105b806101455750303b158015610145575060005460ff166001145b6101ad5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156101d0576000805461ff0019166101001790555b6103e86001556000805462010000600160b01b0319163362010000021790558015610235576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b604051604281527fb8ff236ae922fc5005e85d78459b7da25512b06a560d5344ce136ccb90c770b89060200160405180910390a1565b6000546201000090046001600160a01b031633146102be5760405162461bcd60e51b815260206004820152600d60248201526c43616e2774207570677261646560981b60448201526064016101a4565b565b6102c98261036e565b805115610107576000826001600160a01b0316826040516102ea9190610502565b600060405180830381855af49150503d8060008114610325576040519150601f19603f3d011682016040523d82523d6000602084013e61032a565b606091505b50509050806103695760405162461bcd60e51b815260206004820152600b60248201526a10d85b1b0819985a5b195960aa1b60448201526064016101a4565b505050565b6001600160a01b0381163b6103db5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016101a4565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561044557600080fd5b82356001600160a01b038116811461045c57600080fd5b9150602083013567ffffffffffffffff8082111561047957600080fd5b818501915085601f83011261048d57600080fd5b81358181111561049f5761049f61041c565b604051601f8201601f19908116603f011681019083821181831017156104c7576104c761041c565b816040528281528860208487010111156104e057600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000825160005b818110156105235760208186018101518583015201610509565b50600092019182525091905056fea264697066735822122049a1e8bcb380a14f7f6a332b6e28f1f5f39fbf793a0aaca0a57ce5cebadf0e0a64736f6c63430008110033608060405234801561001057600080fd5b506040516102bf3803806102bf83398101604081905261002f916101b3565b610042816101a460201b61005a1760201c565b6100a95760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0383166001600160a01b0319909116811790915560408051600481526024810182526020810180516001600160e01b031663204a7f0760e21b17905290516000929161011e916101e3565b600060405180830381855af49150503d8060008114610159576040519150601f19603f3d011682016040523d82523d6000602084013e61015e565b606091505b505090508061019d5760405162461bcd60e51b815260206004820152600b60248201526a10d85b1b0819985a5b195960aa1b60448201526064016100a0565b5050610212565b6001600160a01b03163b151590565b6000602082840312156101c557600080fd5b81516001600160a01b03811681146101dc57600080fd5b9392505050565b6000825160005b8181101561020457602081860181015185830152016101ea565b506000920191825250919050565b609f806102206000396000f3fe608060405260357f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b03166037565b005b3660008037600080366000845af43d6000803e8080156055573d6000f35b3d6000fd5b6001600160a01b03163b15159056fea264697066735822122036ca825837ac54f6ca44520dba1fd1a63cf56226a4b051d031334ea011ea290a64736f6c634300081100336080604052348015600f57600080fd5b50606a80601d6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80638129fc1c14602d575b600080fd5b603233ff5b00fea2646970667358221220db2dd58f5b0d3818d1123fe1ae9038d4abd075f4f7e6d47cdf95e6a40e004ab264736f6c63430008110033a26469706673582212206a03a4e03cbcc2625f4293008549ea8faefdedd4c17dd87bd72311188e9f0bd564736f6c63430008110033",
    "sourceMap": "97:1711:101:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;206:108;;;:::i;:::-;;1605:18:0;;;;;;;;;;;;;;;179:14:112;;172:22;154:41;;142:2;127:18;1605::0;;;;;;;320:1486:101;;;:::i;1573:26:0:-;;;;;;;;;206:108:101;287:10;;279:28;;-1:-1:-1;;;279:28:101;;-1:-1:-1;;;;;287:10:101;;;279:28;;;406:51:112;299:7:101;473:18:112;;;466:34;279:7:101;;;;379:18:112;;279:28:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;206:108::o;320:1486::-;445:13;461:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;445:28;;483:19;527:6;505:30;;;;;:::i;:::-;-1:-1:-1;;;;;675:32:112;;;657:51;;645:2;630:18;505:30:101;;;;;;;;;;;;;;;;;;;;;;;483:52;;545:22;593:9;545:60;;731:6;-1:-1:-1;;;;;731:17:101;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;788:15;806:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;921:39:101;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;921:39:101;-1:-1:-1;;;921:39:101;;;1060:54;;-1:-1:-1;;;1060:54:101;;788:31;;-1:-1:-1;921:39:101;-1:-1:-1;;;;;1060:23:101;;;;;:54;;788:31;;921:39;;1060:54;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;356:1450;;;;;320:1486::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;719:643:112:-;923:1;919;914:3;910:11;906:19;898:6;894:32;883:9;876:51;857:4;946:2;984;979;968:9;964:18;957:30;1016:6;1010:13;1059:6;1054:2;1043:9;1039:18;1032:34;1084:1;1094:140;1108:6;1105:1;1102:13;1094:140;;;1203:14;;;1199:23;;1193:30;1169:17;;;1188:2;1165:26;1158:66;1123:10;;1094:140;;;1098:3;1283:1;1278:2;1269:6;1258:9;1254:22;1250:31;1243:42;1353:2;1346;1342:7;1337:2;1329:6;1325:15;1321:29;1310:9;1306:45;1302:54;1294:62;;;;719:643;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testMotorbikeHack()": "e9f53db4"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"answer\",\"type\":\"bool\"}],\"name\":\"IsTrue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMotorbikeHack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Motorbike.t.sol\":\"MotorbikeTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/ds-test/src/test.sol\":{\"keccak256\":\"0x529f30c5939d75689f6a982f7f96b8898bed30bd90ec5b385b57cab681e12b00\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://89075d5a96e87acef1d00cf556b409d1836728ec2e92f5629ceb5cae3d1e4354\",\"dweb:/ipfs/QmPAViJrxffEDns9GEMVSAzmr3soAzfrEg1CVuovwmNfnt\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x7f6016716c0c6f49e8163af625290c7ef270a045d9b82be04e269035726d3213\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd050537b58640f8545b319928ee66bef9649d1ebd68a3afa1d28a1ce8cea3dd\",\"dweb:/ipfs/QmbBVxERnZ2ciQuRuZ45czd2DRgouCLEhibLWtC2CrH2j4\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x9d53fb0317c888ed0ef4a8476883d4304f5e7e6fa0161d84d18fa27a63875524\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9638e9a042f5b7695953ea394072f90b814ac98312e447f45c4f2f6cdb22c3ec\",\"dweb:/ipfs/QmPvKu8hyzB2og54Lecmb2DvEiAgM9o5UC2gGgRQJ42PQw\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xd9f9791f56c2afcd841237417d5a55fa8b69de2c1b528ddbfc7d7823fe136606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f66271850d38488984ec1e38aeb57df1cda53538b2ddd19e2164c767792905f0\",\"dweb:/ipfs/QmetNJMTfgJ7SCNMwfLrZEwnL3xdNaBY5vMiqrRrUWjjes\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x94d97a78c720a10212552c5f7f27c61ea58eb027bd51dd054efae6925e785269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://563fd7373c84d700606fc113d535b1a103e7bad4b0412e6cb515d927fb8f57bc\",\"dweb:/ipfs/QmQEjP2DXCXRC4bxXPonLfF8cq1UvMhdQu5X1JynPntvio\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x113bce4d6d0fe7c4e1e3bf2760ba21c075448660a8dae6003f27b9ff86890612\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c8a169ea47398b475696e66d07e354d9997680b5f954418caeeaec5427a131f\",\"dweb:/ipfs/QmSTK6XmjgYZ2CCGZ87AVTowNL3UWfRvqhT6DTbZoKyJzz\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xb31c4ee03d05c6202f6e354245ac3ab883d954f9f36074902089e1b3e645273d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bd98bde50b840b8d7d5cebf818176b9f219345078ed5d3bd0071f035efb2e3\",\"dweb:/ipfs/QmPYC7FZvCWCPF2qWg6TXXTTPGEdnT4y5nebPn1AoZ1H4p\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0xc3222299fd637498c81ab5c8e15c9327289d3708fb8a7063dd10a55a8813c9cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6f5f818e75e8ae5a67b58cff9b351dd790a72d0a5332fb6f425a3561801b6cc\",\"dweb:/ipfs/QmXJEPtMM1AzwCh6u1o1wL2xdi1qRyxsTLt1eVgeC8Y1QH\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xb7004fe1ceab4a20ae13baec8732a5414b28d5ddb06f9f4184b49c1fc1d61521\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a60b5d84bd7d7e455f4a1ca1d260f6b50c419e4c4e7196ef32fd77d0f480d51\",\"dweb:/ipfs/QmYwRMAYYsQuvvM4mnagYs8Zhqm5VXicXmxoqEvkiUzQSd\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd793ebfb854f707ccf9dfec320b3b75d0d73ba54af0dfae727862fe93bc1cfd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a0a39917aabf39d981b17d1a06c9b82377917c3a0eedce8e9dc00df5c096bf9\",\"dweb:/ipfs/Qme7GpiHd32FFKYNbY4vdhiiciWPV1z1Uwtj1KDQAusxki\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xcee5467d5d873fb75dae6f98c01a8d25dd609f9d0374c7d39217bd5f9539a2d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://546651335214a63d1ea3b1d3297228a1df2165f17063b2e45b589ade861ddedc\",\"dweb:/ipfs/QmNwpHiPBRB6dmNz9WLVYvy2kUhYHZgWBMWRcoDuMsuZt9\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"src/Motorbike/Motorbike.sol\":{\"keccak256\":\"0xa595c18bd7274b360651d582987d5bfb0d8d8a74c1ac5a679cf4c6136f7ddf9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fba1ab177423692082c7bb2f8d3999240a0538699f4e450a5c9234cf6ff9e89a\",\"dweb:/ipfs/QmWmEUgWicGYi3DmNMvaeuJY6fHmUSCXdSDXKH7jJVqh83\"]},\"test/Motorbike.t.sol\":{\"keccak256\":\"0x1d4beb78c9eeb90f56c8a67bec6fe3e741ff19e51ac7b1dfb992663b4e8093b3\",\"urls\":[\"bzz-raw://a6d2325ad5745c8ae03f4a35673376ad6aed2451f2b5f0f97bab151ba712aac1\",\"dweb:/ipfs/QmPd5gMfPsVWJ2weVAoNNgNJXYrAmmiow5ATxduSZpEkfE\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "answer",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "IsTrue",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testMotorbikeHack"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Motorbike.t.sol": "MotorbikeTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/ds-test/src/test.sol": {
        "keccak256": "0x529f30c5939d75689f6a982f7f96b8898bed30bd90ec5b385b57cab681e12b00",
        "urls": [
          "bzz-raw://89075d5a96e87acef1d00cf556b409d1836728ec2e92f5629ceb5cae3d1e4354",
          "dweb:/ipfs/QmPAViJrxffEDns9GEMVSAzmr3soAzfrEg1CVuovwmNfnt"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x7f6016716c0c6f49e8163af625290c7ef270a045d9b82be04e269035726d3213",
        "urls": [
          "bzz-raw://bd050537b58640f8545b319928ee66bef9649d1ebd68a3afa1d28a1ce8cea3dd",
          "dweb:/ipfs/QmbBVxERnZ2ciQuRuZ45czd2DRgouCLEhibLWtC2CrH2j4"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x9d53fb0317c888ed0ef4a8476883d4304f5e7e6fa0161d84d18fa27a63875524",
        "urls": [
          "bzz-raw://9638e9a042f5b7695953ea394072f90b814ac98312e447f45c4f2f6cdb22c3ec",
          "dweb:/ipfs/QmPvKu8hyzB2og54Lecmb2DvEiAgM9o5UC2gGgRQJ42PQw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xd9f9791f56c2afcd841237417d5a55fa8b69de2c1b528ddbfc7d7823fe136606",
        "urls": [
          "bzz-raw://f66271850d38488984ec1e38aeb57df1cda53538b2ddd19e2164c767792905f0",
          "dweb:/ipfs/QmetNJMTfgJ7SCNMwfLrZEwnL3xdNaBY5vMiqrRrUWjjes"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x94d97a78c720a10212552c5f7f27c61ea58eb027bd51dd054efae6925e785269",
        "urls": [
          "bzz-raw://563fd7373c84d700606fc113d535b1a103e7bad4b0412e6cb515d927fb8f57bc",
          "dweb:/ipfs/QmQEjP2DXCXRC4bxXPonLfF8cq1UvMhdQu5X1JynPntvio"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x113bce4d6d0fe7c4e1e3bf2760ba21c075448660a8dae6003f27b9ff86890612",
        "urls": [
          "bzz-raw://8c8a169ea47398b475696e66d07e354d9997680b5f954418caeeaec5427a131f",
          "dweb:/ipfs/QmSTK6XmjgYZ2CCGZ87AVTowNL3UWfRvqhT6DTbZoKyJzz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xb31c4ee03d05c6202f6e354245ac3ab883d954f9f36074902089e1b3e645273d",
        "urls": [
          "bzz-raw://33bd98bde50b840b8d7d5cebf818176b9f219345078ed5d3bd0071f035efb2e3",
          "dweb:/ipfs/QmPYC7FZvCWCPF2qWg6TXXTTPGEdnT4y5nebPn1AoZ1H4p"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0xc3222299fd637498c81ab5c8e15c9327289d3708fb8a7063dd10a55a8813c9cf",
        "urls": [
          "bzz-raw://b6f5f818e75e8ae5a67b58cff9b351dd790a72d0a5332fb6f425a3561801b6cc",
          "dweb:/ipfs/QmXJEPtMM1AzwCh6u1o1wL2xdi1qRyxsTLt1eVgeC8Y1QH"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xb7004fe1ceab4a20ae13baec8732a5414b28d5ddb06f9f4184b49c1fc1d61521",
        "urls": [
          "bzz-raw://5a60b5d84bd7d7e455f4a1ca1d260f6b50c419e4c4e7196ef32fd77d0f480d51",
          "dweb:/ipfs/QmYwRMAYYsQuvvM4mnagYs8Zhqm5VXicXmxoqEvkiUzQSd"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xfd793ebfb854f707ccf9dfec320b3b75d0d73ba54af0dfae727862fe93bc1cfd",
        "urls": [
          "bzz-raw://9a0a39917aabf39d981b17d1a06c9b82377917c3a0eedce8e9dc00df5c096bf9",
          "dweb:/ipfs/Qme7GpiHd32FFKYNbY4vdhiiciWPV1z1Uwtj1KDQAusxki"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xcee5467d5d873fb75dae6f98c01a8d25dd609f9d0374c7d39217bd5f9539a2d6",
        "urls": [
          "bzz-raw://546651335214a63d1ea3b1d3297228a1df2165f17063b2e45b589ade861ddedc",
          "dweb:/ipfs/QmNwpHiPBRB6dmNz9WLVYvy2kUhYHZgWBMWRcoDuMsuZt9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "src/Motorbike/Motorbike.sol": {
        "keccak256": "0xa595c18bd7274b360651d582987d5bfb0d8d8a74c1ac5a679cf4c6136f7ddf9d",
        "urls": [
          "bzz-raw://fba1ab177423692082c7bb2f8d3999240a0538699f4e450a5c9234cf6ff9e89a",
          "dweb:/ipfs/QmWmEUgWicGYi3DmNMvaeuJY6fHmUSCXdSDXKH7jJVqh83"
        ],
        "license": "MIT"
      },
      "test/Motorbike.t.sol": {
        "keccak256": "0x1d4beb78c9eeb90f56c8a67bec6fe3e741ff19e51ac7b1dfb992663b4e8093b3",
        "urls": [
          "bzz-raw://a6d2325ad5745c8ae03f4a35673376ad6aed2451f2b5f0f97bab151ba712aac1",
          "dweb:/ipfs/QmPd5gMfPsVWJ2weVAoNNgNJXYrAmmiow5ATxduSZpEkfE"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Motorbike.t.sol",
    "id": 34740,
    "exportedSymbols": {
      "Address": [
        26671
      ],
      "BikeExy": [
        30503
      ],
      "DSTest": [
        1680
      ],
      "Engine": [
        30490
      ],
      "Initializable": [
        25651
      ],
      "Motorbike": [
        30367
      ],
      "MotorbikeTest": [
        34739
      ],
      "StdAssertions": [
        2565
      ],
      "StdChains": [
        3101
      ],
      "StdCheats": [
        5038
      ],
      "StdStorage": [
        5945
      ],
      "StdUtils": [
        8010
      ],
      "Test": [
        8052
      ],
      "TestBase": [
        1737
      ],
      "Vm": [
        9209
      ],
      "console": [
        17273
      ],
      "console2": [
        25369
      ],
      "stdError": [
        5104
      ],
      "stdJson": [
        5771
      ],
      "stdMath": [
        5913
      ],
      "stdStorage": [
        7379
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:1809:101",
    "nodes": [
      {
        "id": 34646,
        "nodeType": "PragmaDirective",
        "src": "0:24:101",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 34647,
        "nodeType": "ImportDirective",
        "src": "26:28:101",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34740,
        "sourceUnit": 8053,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34648,
        "nodeType": "ImportDirective",
        "src": "55:40:101",
        "nodes": [],
        "absolutePath": "src/Motorbike/Motorbike.sol",
        "file": "../src/Motorbike/Motorbike.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34740,
        "sourceUnit": 30504,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34739,
        "nodeType": "ContractDefinition",
        "src": "97:1711:101",
        "nodes": [
          {
            "id": 34656,
            "nodeType": "VariableDeclaration",
            "src": "134:33:101",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "eoaAddress",
            "nameLocation": "142:10:101",
            "scope": 34739,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 34651,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "134:7:101",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "313030",
                  "id": 34654,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "163:3:101",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_100_by_1",
                    "typeString": "int_const 100"
                  },
                  "value": "100"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_100_by_1",
                    "typeString": "int_const 100"
                  }
                ],
                "id": 34653,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "155:7:101",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 34652,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "155:7:101",
                  "typeDescriptions": {}
                }
              },
              "id": 34655,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "155:12:101",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 34660,
            "nodeType": "EventDefinition",
            "src": "174:26:101",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "eca20a3eb03323329aaaa8ddcdbadf91d23ea5827c098f441bf962c1bb82bb78",
            "name": "IsTrue",
            "nameLocation": "180:6:101",
            "parameters": {
              "id": 34659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34658,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "answer",
                  "nameLocation": "192:6:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 34660,
                  "src": "187:11:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 34657,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "187:4:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "186:13:101"
            }
          },
          {
            "id": 34671,
            "nodeType": "FunctionDefinition",
            "src": "206:108:101",
            "nodes": [],
            "body": {
              "id": 34670,
              "nodeType": "Block",
              "src": "230:84:101",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34666,
                        "name": "eoaAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34656,
                        "src": "287:10:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 34667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "299:7:101",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 34663,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1730,
                        "src": "279:2:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$9209",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "282:4:101",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8961,
                      "src": "279:7:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 34668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "279:28:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34669,
                  "nodeType": "ExpressionStatement",
                  "src": "279:28:101"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "215:5:101",
            "parameters": {
              "id": 34661,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "220:2:101"
            },
            "returnParameters": {
              "id": 34662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "230:0:101"
            },
            "scope": 34739,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34738,
            "nodeType": "FunctionDefinition",
            "src": "320:1486:101",
            "nodes": [],
            "body": {
              "id": 34737,
              "nodeType": "Block",
              "src": "356:1450:101",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    34676
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34676,
                      "mutability": "mutable",
                      "name": "engine",
                      "nameLocation": "452:6:101",
                      "nodeType": "VariableDeclaration",
                      "scope": 34737,
                      "src": "445:13:101",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Engine_$30490",
                        "typeString": "contract Engine"
                      },
                      "typeName": {
                        "id": 34675,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34674,
                          "name": "Engine",
                          "nameLocations": [
                            "445:6:101"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 30490,
                          "src": "445:6:101"
                        },
                        "referencedDeclaration": 30490,
                        "src": "445:6:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Engine_$30490",
                          "typeString": "contract Engine"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34681,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 34679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "461:10:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Engine_$30490_$",
                        "typeString": "function () returns (contract Engine)"
                      },
                      "typeName": {
                        "id": 34678,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34677,
                          "name": "Engine",
                          "nameLocations": [
                            "465:6:101"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 30490,
                          "src": "465:6:101"
                        },
                        "referencedDeclaration": 30490,
                        "src": "465:6:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Engine_$30490",
                          "typeString": "contract Engine"
                        }
                      }
                    },
                    "id": 34680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "461:12:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Engine_$30490",
                      "typeString": "contract Engine"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "445:28:101"
                },
                {
                  "assignments": [
                    34684
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34684,
                      "mutability": "mutable",
                      "name": "motorbike",
                      "nameLocation": "493:9:101",
                      "nodeType": "VariableDeclaration",
                      "scope": 34737,
                      "src": "483:19:101",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Motorbike_$30367",
                        "typeString": "contract Motorbike"
                      },
                      "typeName": {
                        "id": 34683,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34682,
                          "name": "Motorbike",
                          "nameLocations": [
                            "483:9:101"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 30367,
                          "src": "483:9:101"
                        },
                        "referencedDeclaration": 30367,
                        "src": "483:9:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Motorbike_$30367",
                          "typeString": "contract Motorbike"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34693,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34690,
                            "name": "engine",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34676,
                            "src": "527:6:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Engine_$30490",
                              "typeString": "contract Engine"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Engine_$30490",
                              "typeString": "contract Engine"
                            }
                          ],
                          "id": 34689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "519:7:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34688,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "519:7:101",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "519:15:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 34687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "505:13:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Motorbike_$30367_$",
                        "typeString": "function (address) returns (contract Motorbike)"
                      },
                      "typeName": {
                        "id": 34686,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34685,
                          "name": "Motorbike",
                          "nameLocations": [
                            "509:9:101"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 30367,
                          "src": "509:9:101"
                        },
                        "referencedDeclaration": 30367,
                        "src": "509:9:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Motorbike_$30367",
                          "typeString": "contract Motorbike"
                        }
                      }
                    },
                    "id": 34692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "505:30:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Motorbike_$30367",
                      "typeString": "contract Motorbike"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "483:52:101"
                },
                {
                  "assignments": [
                    34696
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34696,
                      "mutability": "mutable",
                      "name": "ethernautEngine",
                      "nameLocation": "552:15:101",
                      "nodeType": "VariableDeclaration",
                      "scope": 34737,
                      "src": "545:22:101",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Engine_$30490",
                        "typeString": "contract Engine"
                      },
                      "typeName": {
                        "id": 34695,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34694,
                          "name": "Engine",
                          "nameLocations": [
                            "545:6:101"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 30490,
                          "src": "545:6:101"
                        },
                        "referencedDeclaration": 30490,
                        "src": "545:6:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Engine_$30490",
                          "typeString": "contract Engine"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34706,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 34702,
                                "name": "motorbike",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34684,
                                "src": "593:9:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Motorbike_$30367",
                                  "typeString": "contract Motorbike"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Motorbike_$30367",
                                  "typeString": "contract Motorbike"
                                }
                              ],
                              "id": 34701,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "585:7:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 34700,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "585:7:101",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "585:18:101",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 34699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "577:8:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 34698,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "577:8:101",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "577:27:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 34697,
                      "name": "Engine",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30490,
                      "src": "570:6:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Engine_$30490_$",
                        "typeString": "type(contract Engine)"
                      }
                    },
                    "id": 34705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "570:35:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Engine_$30490",
                      "typeString": "contract Engine"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "545:60:101"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34707,
                        "name": "engine",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34676,
                        "src": "731:6:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Engine_$30490",
                          "typeString": "contract Engine"
                        }
                      },
                      "id": 34709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "738:10:101",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30394,
                      "src": "731:17:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 34710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "731:19:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34711,
                  "nodeType": "ExpressionStatement",
                  "src": "731:19:101"
                },
                {
                  "assignments": [
                    34714
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34714,
                      "mutability": "mutable",
                      "name": "bikeExy",
                      "nameLocation": "796:7:101",
                      "nodeType": "VariableDeclaration",
                      "scope": 34737,
                      "src": "788:15:101",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BikeExy_$30503",
                        "typeString": "contract BikeExy"
                      },
                      "typeName": {
                        "id": 34713,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34712,
                          "name": "BikeExy",
                          "nameLocations": [
                            "788:7:101"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 30503,
                          "src": "788:7:101"
                        },
                        "referencedDeclaration": 30503,
                        "src": "788:7:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BikeExy_$30503",
                          "typeString": "contract BikeExy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34719,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 34717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "806:11:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_BikeExy_$30503_$",
                        "typeString": "function () returns (contract BikeExy)"
                      },
                      "typeName": {
                        "id": 34716,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34715,
                          "name": "BikeExy",
                          "nameLocations": [
                            "810:7:101"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 30503,
                          "src": "810:7:101"
                        },
                        "referencedDeclaration": 30503,
                        "src": "810:7:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BikeExy_$30503",
                          "typeString": "contract BikeExy"
                        }
                      }
                    },
                    "id": 34718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "806:13:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BikeExy_$30503",
                      "typeString": "contract BikeExy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "788:31:101"
                },
                {
                  "assignments": [
                    34721
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34721,
                      "mutability": "mutable",
                      "name": "initEncoded",
                      "nameLocation": "907:11:101",
                      "nodeType": "VariableDeclaration",
                      "scope": 34737,
                      "src": "894:24:101",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 34720,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "894:5:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34726,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "696e697469616c697a652829",
                        "id": 34724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "945:14:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8129fc1cf5a76b8b9d76c7ab5059b1685decddb2380c6e4cebb774b7c17ae83f",
                          "typeString": "literal_string \"initialize()\""
                        },
                        "value": "initialize()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8129fc1cf5a76b8b9d76c7ab5059b1685decddb2380c6e4cebb774b7c17ae83f",
                          "typeString": "literal_string \"initialize()\""
                        }
                      ],
                      "expression": {
                        "id": 34722,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "921:3:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 34723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "925:19:101",
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "921:23:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 34725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "921:39:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "894:66:101"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34732,
                            "name": "bikeExy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34714,
                            "src": "1092:7:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BikeExy_$30503",
                              "typeString": "contract BikeExy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BikeExy_$30503",
                              "typeString": "contract BikeExy"
                            }
                          ],
                          "id": 34731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1084:7:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34730,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1084:7:101",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1084:16:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34734,
                        "name": "initEncoded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34721,
                        "src": "1102:11:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 34727,
                        "name": "engine",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34676,
                        "src": "1060:6:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Engine_$30490",
                          "typeString": "contract Engine"
                        }
                      },
                      "id": 34729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1067:16:101",
                      "memberName": "upgradeToAndCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30410,
                      "src": "1060:23:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) payable external"
                      }
                    },
                    "id": 34735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1060:54:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34736,
                  "nodeType": "ExpressionStatement",
                  "src": "1060:54:101"
                }
              ]
            },
            "functionSelector": "e9f53db4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMotorbikeHack",
            "nameLocation": "329:17:101",
            "parameters": {
              "id": 34672,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "346:2:101"
            },
            "returnParameters": {
              "id": 34673,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "356:0:101"
            },
            "scope": 34739,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 34649,
              "name": "Test",
              "nameLocations": [
                "123:4:101"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8052,
              "src": "123:4:101"
            },
            "id": 34650,
            "nodeType": "InheritanceSpecifier",
            "src": "123:4:101"
          }
        ],
        "canonicalName": "MotorbikeTest",
        "contractDependencies": [
          30367,
          30490,
          30503
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          34739,
          8052,
          1737,
          1734,
          8010,
          5038,
          4649,
          3101,
          2565,
          1680
        ],
        "name": "MotorbikeTest",
        "nameLocation": "106:13:101",
        "scope": 34740,
        "usedErrors": []
      }
    ]
  },
  "id": 101
}