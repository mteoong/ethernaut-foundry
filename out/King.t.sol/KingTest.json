{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testKingHack",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260008054757109709ecfa91a80626ff3989d68f67f5b1dd12d000161ff01600160b01b0319909116179055600280546001600160a01b031916606417905534801561004e57600080fd5b506114018061005e6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630a9254e414610051578063ba414fa61461005b578063baeded9214610081578063fa7626d414610089575b600080fd5b610059610096565b005b60005461006d90610100900460ff1681565b604051901515815260200160405180910390f35b61005961014c565b60005461006d9060ff1681565b6040516100a29061044e565b604051809103906000f0801580156100be573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b0392831617905560005460025460405163c88a5e6d60e01b81529083166004820152674563918244f400006024820152620100009091049091169063c88a5e6d90604401600060405180830381600087803b15801561013257600080fd5b505af1158015610146573d6000803e3d6000fd5b50505050565b600060405161015a9061045b565b604051809103906000f080158015610176573d6000803e3d6000fd5b5060015460405163080808f560e21b81526001600160a01b03808416600483015292935091169063202023d490602401600060405180830381600087803b1580156101c057600080fd5b505af11580156101d4573d6000803e3d6000fd5b50506000546002546040516303223eab60e11b81526001600160a01b039182166004820152620100009092041692506306447d569150602401600060405180830381600087803b15801561022757600080fd5b505af115801561023b573d6000803e3d6000fd5b505060015460405163dfc86b1760e01b81526001600160a01b03858116600483015260009450909116915063dfc86b1790670de0b6b3a76400009060240160206040518083038185885af1158015610297573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906102bc9190610475565b905060008190506000826040516102d290610468565b6001600160a01b039091168152602001604051809103906000f0801580156102fe573d6000803e3d6000fd5b509050806001600160a01b0316639e5faafc670de0b6b3a76400006040518263ffffffff1660e01b81526004016000604051808303818588803b15801561034457600080fd5b505af1158015610358573d6000803e3d6000fd5b50506001546040516364416be160e11b81526001600160a01b03888116600483015260009550909116925063c882d7c291506024016020604051808303816000875af11580156103ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d091906104a5565b9050600060029054906101000a90046001600160a01b03166001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561042257600080fd5b505af1158015610436573d6000803e3d6000fd5b5050505080610447576104476104c7565b5050505050565b610633806104de83390190565b61069680610b1183390190565b610225806111a783390190565b60006020828403121561048757600080fd5b81516001600160a01b038116811461049e57600080fd5b9392505050565b6000602082840312156104b757600080fd5b8151801515811461049e57600080fd5b634e487b7160e01b600052600160045260246000fdfe608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105b58061007e6000396000f3fe6080604052600436106100555760003560e01c8063202023d41461005a578063715018a61461007c5780638da5cb5b14610091578063c882d7c2146100c8578063dfc86b17146100f8578063f2fde38b1461010b575b600080fd5b34801561006657600080fd5b5061007a61007536600461051c565b61012b565b005b34801561008857600080fd5b5061007a61015a565b34801561009d57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100d457600080fd5b506100e86100e336600461051c565b61016e565b60405190151581526020016100bf565b6100ab61010636600461051c565b610297565b34801561011757600080fd5b5061007a61012636600461051c565b6103df565b61013361045d565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b61016261045d565b61016c60006104b7565b565b6001600160a01b03808216600090815260026020526040812080549192909116331461019957600080fd5b6001810154600160a01b900460ff16156101b257600080fd5b600181015460405163d38def5b60e01b81526001600160a01b0385811660048301523360248301529091169063d38def5b906044016020604051808303816000875af1158015610206573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022a9190610540565b1561028e57600181018054600160a01b60ff60a01b198216179091556040516001600160a01b03909116815233907f9dfdf7e3e630f506a3dfe38cdbe34e196353364235df33e5a3b588488d9a1e789060200160405180910390a250600192915050565b50600092915050565b6001600160a01b03811660009081526001602052604081205460ff166102bc57600080fd5b604051633b937bbb60e11b81523360048201526000906001600160a01b03841690637726f77690349060240160206040518083038185885af1158015610306573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061032b9190610562565b60408051606081018252338082526001600160a01b03878116602080850191825260008587018181528885168083526002845291889020965187549086166001600160a01b031990911617875592516001909601805493511515600160a01b026001600160a81b031990941696909416959095179190911790915592519182529293507f7bf7f1ed7f75e83b76de0ff139966989aff81cb85aac26469c18978d86aac1c2910160405180910390a292915050565b6103e761045d565b6001600160a01b0381166104515760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61045a816104b7565b50565b6000546001600160a01b0316331461016c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610448565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461045a57600080fd5b60006020828403121561052e57600080fd5b813561053981610507565b9392505050565b60006020828403121561055257600080fd5b8151801515811461053957600080fd5b60006020828403121561057457600080fd5b81516105398161050756fea26469706673582212200a6985217144b514a794ae8ed1f3c70df9de73effaa640beeadf7107e0d7778564736f6c634300081100336080604052670de0b6b3a764000060015534801561001c57600080fd5b506100263361002b565b61007b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61060c8061008a6000396000f3fe6080604052600436106100595760003560e01c8063715018a6146100655780637726f7761461007c5780638da5cb5b146100ac57806390696af9146100ca578063d38def5b146100ee578063f2fde38b1461011e57600080fd5b3661006057005b600080fd5b34801561007157600080fd5b5061007a61013e565b005b61008f61008a3660046103b6565b610152565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100b857600080fd5b506000546001600160a01b031661008f565b3480156100d657600080fd5b506100e060015481565b6040519081526020016100a3565b3480156100fa57600080fd5b5061010e6101093660046103da565b610194565b60405190151581526020016100a3565b34801561012a57600080fd5b5061007a6101393660046103b6565b61026c565b6101466102ea565b6101506000610344565b565b600060015434101561016357600080fd5b3460405161017090610394565b6040518091039082f090508015801561018d573d6000803e3d6000fd5b5092915050565b604051600090839082906001600160a01b0383169082908181818181875af1925050503d80600081146101e3576040519150601f19603f3d011682016040523d82523d6000602084013e6101e8565b606091505b50509050306001600160a01b0316826001600160a01b03166329cc6d6f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610234573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102589190610413565b6001600160a01b0316141595945050505050565b6102746102ea565b6001600160a01b0381166102de5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6102e781610344565b50565b6000546001600160a01b031633146101505760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102d5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6101a68061043183390190565b6001600160a01b03811681146102e757600080fd5b6000602082840312156103c857600080fd5b81356103d3816103a1565b9392505050565b600080604083850312156103ed57600080fd5b82356103f8816103a1565b91506020830135610408816103a1565b809150509250929050565b60006020828403121561042557600080fd5b81516103d3816103a156fe6080604052600280546001600160a01b0319908116339081179092556000805490911690911790553460015561016c8061003a6000396000f3fe6080604052600436106100385760003560e01c806329cc6d6f146100bb5780638da5cb5b146100f2578063e3ac5d261461011257600080fd5b366100b6576001543410158061005857506002546001600160a01b031633145b61006157600080fd5b600080546040516001600160a01b03909116913480156108fc02929091818181858888f1935050505015801561009b573d6000803e3d6000fd5b50600080546001600160a01b03191633179055346001819055005b600080fd5b3480156100c757600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100fe57600080fd5b506002546100d5906001600160a01b031681565b34801561011e57600080fd5b5061012860015481565b6040519081526020016100e956fea2646970667358221220a184ee086112da267f303a4d1ad6dc8d448b1f7a03e8c690900be60fe1d6096464736f6c63430008110033a2646970667358221220e4ccb645a7909743ccb42a77ad9484665ad8c2eb3ff0a95f125f0dd87cc4bc4564736f6c63430008110033608060405234801561001057600080fd5b5060405161022538038061022583398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610192806100936000396000f3fe60806040526004361061002d5760003560e01c80639e5faafc1461007b578063d2ef73981461008357600080fd5b366100765760405162461bcd60e51b81526020600482015260126024820152714920616d204b696e6720666f72657665722160701b60448201526064015b60405180910390fd5b005b600080fd5b6100746100bf565b34801561008f57600080fd5b506000546100a3906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b600080546040516001600160a01b039091169034908381818185875af1925050503d806000811461010c576040519150601f19603f3d011682016040523d82523d6000602084013e610111565b606091505b50509050806101595760405162461bcd60e51b8152602060048201526014602482015273115e1d195c9b985b0818d85b1b0819985a5b195960621b604482015260640161006b565b5056fea2646970667358221220b3bcaf35a742a9ce235e35c2e33c44b93722af20d7bfae3ac649ebd7d6b54a7864736f6c63430008110033a264697066735822122053f2b175dc5c5d8fc5ca52676f1cf42608d6aa3a6187cb7359bc3fcb26584b4b64736f6c63430008110033",
    "sourceMap": "183:1419:86:-:0;;;1573:26:0;;;217:63:86;-1:-1:-1;;;;;;217:63:86;;;;;;;311:33;;-1:-1:-1;;;;;;311:33:86;340:3;311:33;;;183:1419;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "183:1419:86:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;351:197;;;:::i;:::-;;1605:18:0;;;;;;;;;;;;;;;179:14:100;;172:22;154:41;;142:2;127:18;1605::0;;;;;;;554:1046:86;;;:::i;1573:26:0:-;;;;;;;;;351:197:86;449:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;437:9:86;:27;;-1:-1:-1;;;;;;437:27:86;-1:-1:-1;;;;;437:27:86;;;;;;-1:-1:-1;513:2:86;;521:10;513:28;;-1:-1:-1;;;513:28:86;;521:10;;;513:28;;;406:51:100;533:7:86;473:18:100;;;466:34;513:2:86;;;;;;;;:7;;379:18:100;;513:28:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;351:197::o;554:1046::-;674:23;700:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;727:9:86;;:36;;-1:-1:-1;;;727:36:86;;-1:-1:-1;;;;;695:32:100;;;727:36:86;;;677:51:100;674:43:86;;-1:-1:-1;727:9:86;;;:23;;650:18:100;;727:36:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;773:2:86;;;787:10;773:25;;-1:-1:-1;;;773:25:86;;-1:-1:-1;;;;;787:10:86;;;773:25;;;677:51:100;773:2:86;;;;;;-1:-1:-1;773:13:86;;-1:-1:-1;650:18:100;;773:25:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;831:9:86;;:80;;-1:-1:-1;;;831:80:86;;-1:-1:-1;;;;;695:32:100;;;831:80:86;;;677:51:100;808:20:86;;-1:-1:-1;831:9:86;;;;-1:-1:-1;831:29:86;;868:7;;650:18:100;;831:80:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;808:103;;921:18;955:12;921:48;;1098:17;1139:12;1118:35;;;;;:::i;:::-;-1:-1:-1;;;;;695:32:100;;;677:51;;665:2;650:18;1118:35:86;;;;;;;;;;;;;;;;;;;;;;;1098:55;;1285:8;-1:-1:-1;;;;;1285:15:86;;1308:7;1285:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1454:9:86;;:74;;-1:-1:-1;;;1454:74:86;;-1:-1:-1;;;;;695:32:100;;;1454:74:86;;;677:51:100;1423:28:86;;-1:-1:-1;1454:9:86;;;;-1:-1:-1;1454:29:86;;-1:-1:-1;650:18:100;;1454:74:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1423:105;;1538:2;;;;;;;;;-1:-1:-1;;;;;1538:2:86;-1:-1:-1;;;;;1538:12:86;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1569:23;1562:31;;;;:::i;:::-;585:1015;;;;;554:1046::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;947:290:100:-;1017:6;1070:2;1058:9;1049:7;1045:23;1041:32;1038:52;;;1086:1;1083;1076:12;1038:52;1112:16;;-1:-1:-1;;;;;1157:31:100;;1147:42;;1137:70;;1203:1;1200;1193:12;1137:70;1226:5;947:290;-1:-1:-1;;;947:290:100:o;1682:277::-;1749:6;1802:2;1790:9;1781:7;1777:23;1773:32;1770:52;;;1818:1;1815;1808:12;1770:52;1850:9;1844:16;1903:5;1896:13;1889:21;1882:5;1879:32;1869:60;;1925:1;1922;1915:12;1964:127;2025:10;2020:3;2016:20;2013:1;2006:31;2056:4;2053:1;2046:15;2080:4;2077:1;2070:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testKingHack()": "baeded92"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testKingHack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/King.t.sol\":\"KingTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/ds-test/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/ds-test/src/test.sol\":{\"keccak256\":\"0x529f30c5939d75689f6a982f7f96b8898bed30bd90ec5b385b57cab681e12b00\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://89075d5a96e87acef1d00cf556b409d1836728ec2e92f5629ceb5cae3d1e4354\",\"dweb:/ipfs/QmPAViJrxffEDns9GEMVSAzmr3soAzfrEg1CVuovwmNfnt\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/BaseLevel.sol\":{\"keccak256\":\"0x96532046614f14ded4ed0582d37d1bfb6d8ce0423403094476ae9533323a5af8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b9e8bbc7f3c8d982885e58c27a2d063008abef55e70db5eae1358e3d5f7f5b0\",\"dweb:/ipfs/QmNpDPfDEeYYAdYM14p3ef3wgcgjNYjCqwXqKT6mVv8MK8\"]},\"src/Ethernaut.sol\":{\"keccak256\":\"0xdfd342f8053ad866770cc1a48c60e938dfa4a305c3b3fcdde1f60fd4fa7ad655\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28eabd1b8915a2615d24b7ed674f4a924f59ad7305ff481862d00382df3d0348\",\"dweb:/ipfs/QmPpaCPEZnCadgkzptPrD4hkaz6JuL5k5pS2TjaUCYAPZ6\"]},\"src/King/King.sol\":{\"keccak256\":\"0x1fdc2c76be699006163e1aeea14f0e9fbb88bc8206f2619917a1b40910fd536e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70f0cc55eedc4e4b4d4d44f51de005789c84d30b35a5eb25aae2fa654bcb33af\",\"dweb:/ipfs/QmZo1aVGtNY58CYTVPAxeTgxauBYLQwMBTAAhFPwqc2nek\"]},\"src/King/KingFactory.sol\":{\"keccak256\":\"0x80307731da3bc3bf88638fd3c63bcf2ef755a0b5cf56cb14c43462fe9f114c00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58aa5f0c9fbdc5e1e8a0d3de2711488fa7eafdce016bef44cb4bb0fc63563c4f\",\"dweb:/ipfs/QmUGtGL8L9rv9k6oPxfbmwULxuiyEmRUt5JiExGUfBqRLC\"]},\"src/King/KingHack.sol\":{\"keccak256\":\"0x05f326576ba8f465ffe50935f16d4932012f630760428af3a7f4a8d50f3412e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba0e598011bcd393d3c3c4ead013e56800621449a217be15a794d0e7b091ada5\",\"dweb:/ipfs/QmUMaaUtoonok4BTxEqhzfYVAaQrnZSZoCKyP8p7amfJxr\"]},\"test/King.t.sol\":{\"keccak256\":\"0xad7714e30d867ff90d4b11f09611e4840466ab2de668a35d1368a4bf0cb400cd\",\"urls\":[\"bzz-raw://642c3279b8fc3128ca3ab27b107f95e1e93c543a9d2c220e1ec25e2c4cf82cc6\",\"dweb:/ipfs/QmNUj48Wp46HJSLJGRQUg8qY9JJP3y7uXQHKcZtLn9UU1e\"]},\"test/utils/vm.sol\":{\"keccak256\":\"0xc34f4b14c4d624ca1d6dbe5434a8328de77817a089067d661ba1a657f46289cc\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://a1dad3c6483f228f98c9e3c492a70277d9e9ef2f65f4153d6082f9b3acee4a7e\",\"dweb:/ipfs/QmXUrWED9yhK4C5LvWbYLEBexwqYgrxRzcefgdYYVB51xt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testKingHack"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/ds-test/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/King.t.sol": "KingTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/ds-test/src/test.sol": {
        "keccak256": "0x529f30c5939d75689f6a982f7f96b8898bed30bd90ec5b385b57cab681e12b00",
        "urls": [
          "bzz-raw://89075d5a96e87acef1d00cf556b409d1836728ec2e92f5629ceb5cae3d1e4354",
          "dweb:/ipfs/QmPAViJrxffEDns9GEMVSAzmr3soAzfrEg1CVuovwmNfnt"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/BaseLevel.sol": {
        "keccak256": "0x96532046614f14ded4ed0582d37d1bfb6d8ce0423403094476ae9533323a5af8",
        "urls": [
          "bzz-raw://9b9e8bbc7f3c8d982885e58c27a2d063008abef55e70db5eae1358e3d5f7f5b0",
          "dweb:/ipfs/QmNpDPfDEeYYAdYM14p3ef3wgcgjNYjCqwXqKT6mVv8MK8"
        ],
        "license": "MIT"
      },
      "src/Ethernaut.sol": {
        "keccak256": "0xdfd342f8053ad866770cc1a48c60e938dfa4a305c3b3fcdde1f60fd4fa7ad655",
        "urls": [
          "bzz-raw://28eabd1b8915a2615d24b7ed674f4a924f59ad7305ff481862d00382df3d0348",
          "dweb:/ipfs/QmPpaCPEZnCadgkzptPrD4hkaz6JuL5k5pS2TjaUCYAPZ6"
        ],
        "license": "MIT"
      },
      "src/King/King.sol": {
        "keccak256": "0x1fdc2c76be699006163e1aeea14f0e9fbb88bc8206f2619917a1b40910fd536e",
        "urls": [
          "bzz-raw://70f0cc55eedc4e4b4d4d44f51de005789c84d30b35a5eb25aae2fa654bcb33af",
          "dweb:/ipfs/QmZo1aVGtNY58CYTVPAxeTgxauBYLQwMBTAAhFPwqc2nek"
        ],
        "license": "MIT"
      },
      "src/King/KingFactory.sol": {
        "keccak256": "0x80307731da3bc3bf88638fd3c63bcf2ef755a0b5cf56cb14c43462fe9f114c00",
        "urls": [
          "bzz-raw://58aa5f0c9fbdc5e1e8a0d3de2711488fa7eafdce016bef44cb4bb0fc63563c4f",
          "dweb:/ipfs/QmUGtGL8L9rv9k6oPxfbmwULxuiyEmRUt5JiExGUfBqRLC"
        ],
        "license": "MIT"
      },
      "src/King/KingHack.sol": {
        "keccak256": "0x05f326576ba8f465ffe50935f16d4932012f630760428af3a7f4a8d50f3412e2",
        "urls": [
          "bzz-raw://ba0e598011bcd393d3c3c4ead013e56800621449a217be15a794d0e7b091ada5",
          "dweb:/ipfs/QmUMaaUtoonok4BTxEqhzfYVAaQrnZSZoCKyP8p7amfJxr"
        ],
        "license": "MIT"
      },
      "test/King.t.sol": {
        "keccak256": "0xad7714e30d867ff90d4b11f09611e4840466ab2de668a35d1368a4bf0cb400cd",
        "urls": [
          "bzz-raw://642c3279b8fc3128ca3ab27b107f95e1e93c543a9d2c220e1ec25e2c4cf82cc6",
          "dweb:/ipfs/QmNUj48Wp46HJSLJGRQUg8qY9JJP3y7uXQHKcZtLn9UU1e"
        ],
        "license": null
      },
      "test/utils/vm.sol": {
        "keccak256": "0xc34f4b14c4d624ca1d6dbe5434a8328de77817a089067d661ba1a657f46289cc",
        "urls": [
          "bzz-raw://a1dad3c6483f228f98c9e3c492a70277d9e9ef2f65f4153d6082f9b3acee4a7e",
          "dweb:/ipfs/QmXUrWED9yhK4C5LvWbYLEBexwqYgrxRzcefgdYYVB51xt"
        ],
        "license": "Unlicense"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/King.t.sol",
    "id": 10959,
    "exportedSymbols": {
      "Context": [
        3004
      ],
      "DSTest": [
        1680
      ],
      "Ethernaut": [
        5303
      ],
      "IKing": [
        6453
      ],
      "King": [
        6357
      ],
      "KingFactory": [
        6445
      ],
      "KingHack": [
        6503
      ],
      "KingTest": [
        10958
      ],
      "Level": [
        3338
      ],
      "Ownable": [
        1793
      ],
      "Vm": [
        12761
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:1603:86",
    "nodes": [
      {
        "id": 10833,
        "nodeType": "PragmaDirective",
        "src": "0:24:86",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 10834,
        "nodeType": "ImportDirective",
        "src": "26:26:86",
        "nodes": [],
        "absolutePath": "lib/ds-test/src/test.sol",
        "file": "ds-test/test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10959,
        "sourceUnit": 1681,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10835,
        "nodeType": "ImportDirective",
        "src": "53:34:86",
        "nodes": [],
        "absolutePath": "src/King/KingHack.sol",
        "file": "../src/King/KingHack.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10959,
        "sourceUnit": 6504,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10836,
        "nodeType": "ImportDirective",
        "src": "88:37:86",
        "nodes": [],
        "absolutePath": "src/King/KingFactory.sol",
        "file": "../src/King/KingFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10959,
        "sourceUnit": 6446,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10837,
        "nodeType": "ImportDirective",
        "src": "126:30:86",
        "nodes": [],
        "absolutePath": "src/Ethernaut.sol",
        "file": "../src/Ethernaut.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10959,
        "sourceUnit": 5304,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10838,
        "nodeType": "ImportDirective",
        "src": "157:24:86",
        "nodes": [],
        "absolutePath": "test/utils/vm.sol",
        "file": "./utils/vm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10959,
        "sourceUnit": 12762,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10958,
        "nodeType": "ContractDefinition",
        "src": "183:1419:86",
        "nodes": [
          {
            "id": 10849,
            "nodeType": "VariableDeclaration",
            "src": "217:63:86",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "vm",
            "nameLocation": "220:2:86",
            "scope": 10958,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Vm_$12761",
              "typeString": "contract Vm"
            },
            "typeName": {
              "id": 10842,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10841,
                "name": "Vm",
                "nameLocations": [
                  "217:2:86"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 12761,
                "src": "217:2:86"
              },
              "referencedDeclaration": 12761,
              "src": "217:2:86",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$12761",
                "typeString": "contract Vm"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "307837313039373039454366613931613830363236664633393839443638663637463562314444313244",
                      "id": 10846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "236:42:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0x7109709ECfa91a80626fF3989D68f67F5b1DD12D"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    ],
                    "id": 10845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "228:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 10844,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "228:7:86",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 10847,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "228:51:86",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 10843,
                "name": "Vm",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 12761,
                "src": "225:2:86",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_Vm_$12761_$",
                  "typeString": "type(contract Vm)"
                }
              },
              "id": 10848,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "225:55:86",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$12761",
                "typeString": "contract Vm"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 10852,
            "nodeType": "VariableDeclaration",
            "src": "286:19:86",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "ethernaut",
            "nameLocation": "296:9:86",
            "scope": 10958,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Ethernaut_$5303",
              "typeString": "contract Ethernaut"
            },
            "typeName": {
              "id": 10851,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10850,
                "name": "Ethernaut",
                "nameLocations": [
                  "286:9:86"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5303,
                "src": "286:9:86"
              },
              "referencedDeclaration": 5303,
              "src": "286:9:86",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ethernaut_$5303",
                "typeString": "contract Ethernaut"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 10858,
            "nodeType": "VariableDeclaration",
            "src": "311:33:86",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "eoaAddress",
            "nameLocation": "319:10:86",
            "scope": 10958,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 10853,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "311:7:86",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "313030",
                  "id": 10856,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "340:3:86",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_100_by_1",
                    "typeString": "int_const 100"
                  },
                  "value": "100"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_100_by_1",
                    "typeString": "int_const 100"
                  }
                ],
                "id": 10855,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "332:7:86",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 10854,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "332:7:86",
                  "typeDescriptions": {}
                }
              },
              "id": 10857,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "332:12:86",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 10876,
            "nodeType": "FunctionDefinition",
            "src": "351:197:86",
            "nodes": [],
            "body": {
              "id": 10875,
              "nodeType": "Block",
              "src": "375:173:86",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 10866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10861,
                      "name": "ethernaut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10852,
                      "src": "437:9:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Ethernaut_$5303",
                        "typeString": "contract Ethernaut"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 10864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "449:13:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Ethernaut_$5303_$",
                          "typeString": "function () returns (contract Ethernaut)"
                        },
                        "typeName": {
                          "id": 10863,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 10862,
                            "name": "Ethernaut",
                            "nameLocations": [
                              "453:9:86"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 5303,
                            "src": "453:9:86"
                          },
                          "referencedDeclaration": 5303,
                          "src": "453:9:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Ethernaut_$5303",
                            "typeString": "contract Ethernaut"
                          }
                        }
                      },
                      "id": 10865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "449:15:86",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Ethernaut_$5303",
                        "typeString": "contract Ethernaut"
                      }
                    },
                    "src": "437:27:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Ethernaut_$5303",
                      "typeString": "contract Ethernaut"
                    }
                  },
                  "id": 10867,
                  "nodeType": "ExpressionStatement",
                  "src": "437:27:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10871,
                        "name": "eoaAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10858,
                        "src": "521:10:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 10872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "533:7:86",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 10868,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10849,
                        "src": "513:2:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12761",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 10870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "516:4:86",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12680,
                      "src": "513:7:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 10873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "513:28:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10874,
                  "nodeType": "ExpressionStatement",
                  "src": "513:28:86"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "360:5:86",
            "parameters": {
              "id": 10859,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "365:2:86"
            },
            "returnParameters": {
              "id": 10860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "375:0:86"
            },
            "scope": 10958,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 10957,
            "nodeType": "FunctionDefinition",
            "src": "554:1046:86",
            "nodes": [],
            "body": {
              "id": 10956,
              "nodeType": "Block",
              "src": "585:1015:86",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    10881
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10881,
                      "mutability": "mutable",
                      "name": "kingFactory",
                      "nameLocation": "686:11:86",
                      "nodeType": "VariableDeclaration",
                      "scope": 10956,
                      "src": "674:23:86",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_KingFactory_$6445",
                        "typeString": "contract KingFactory"
                      },
                      "typeName": {
                        "id": 10880,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10879,
                          "name": "KingFactory",
                          "nameLocations": [
                            "674:11:86"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6445,
                          "src": "674:11:86"
                        },
                        "referencedDeclaration": 6445,
                        "src": "674:11:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_KingFactory_$6445",
                          "typeString": "contract KingFactory"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10886,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 10884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "700:15:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_KingFactory_$6445_$",
                        "typeString": "function () returns (contract KingFactory)"
                      },
                      "typeName": {
                        "id": 10883,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10882,
                          "name": "KingFactory",
                          "nameLocations": [
                            "704:11:86"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6445,
                          "src": "704:11:86"
                        },
                        "referencedDeclaration": 6445,
                        "src": "704:11:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_KingFactory_$6445",
                          "typeString": "contract KingFactory"
                        }
                      }
                    },
                    "id": 10885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "700:17:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_KingFactory_$6445",
                      "typeString": "contract KingFactory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "674:43:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10890,
                        "name": "kingFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10881,
                        "src": "751:11:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_KingFactory_$6445",
                          "typeString": "contract KingFactory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_KingFactory_$6445",
                          "typeString": "contract KingFactory"
                        }
                      ],
                      "expression": {
                        "id": 10887,
                        "name": "ethernaut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10852,
                        "src": "727:9:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ethernaut_$5303",
                          "typeString": "contract Ethernaut"
                        }
                      },
                      "id": 10889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "737:13:86",
                      "memberName": "registerLevel",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5172,
                      "src": "727:23:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Level_$3338_$returns$__$",
                        "typeString": "function (contract Level) external"
                      }
                    },
                    "id": 10891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "727:36:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10892,
                  "nodeType": "ExpressionStatement",
                  "src": "727:36:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10896,
                        "name": "eoaAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10858,
                        "src": "787:10:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 10893,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10849,
                        "src": "773:2:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12761",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 10895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "776:10:86",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12656,
                      "src": "773:13:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 10897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "773:25:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10898,
                  "nodeType": "ExpressionStatement",
                  "src": "773:25:86"
                },
                {
                  "assignments": [
                    10900
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10900,
                      "mutability": "mutable",
                      "name": "levelAddress",
                      "nameLocation": "816:12:86",
                      "nodeType": "VariableDeclaration",
                      "scope": 10956,
                      "src": "808:20:86",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10899,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "808:7:86",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10907,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10905,
                        "name": "kingFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10881,
                        "src": "890:11:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_KingFactory_$6445",
                          "typeString": "contract KingFactory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_KingFactory_$6445",
                          "typeString": "contract KingFactory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_KingFactory_$6445",
                            "typeString": "contract KingFactory"
                          }
                        ],
                        "expression": {
                          "id": 10901,
                          "name": "ethernaut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10852,
                          "src": "831:9:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Ethernaut_$5303",
                            "typeString": "contract Ethernaut"
                          }
                        },
                        "id": 10902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "841:19:86",
                        "memberName": "createLevelInstance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5246,
                        "src": "831:29:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_contract$_Level_$3338_$returns$_t_address_$",
                          "typeString": "function (contract Level) payable external returns (address)"
                        }
                      },
                      "id": 10904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 10903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "868:7:86",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "831:45:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_contract$_Level_$3338_$returns$_t_address_$value",
                        "typeString": "function (contract Level) payable external returns (address)"
                      }
                    },
                    "id": 10906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "831:80:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "808:103:86"
                },
                {
                  "assignments": [
                    10910
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10910,
                      "mutability": "mutable",
                      "name": "ethernautKing",
                      "nameLocation": "926:13:86",
                      "nodeType": "VariableDeclaration",
                      "scope": 10956,
                      "src": "921:18:86",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_King_$6357",
                        "typeString": "contract King"
                      },
                      "typeName": {
                        "id": 10909,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10908,
                          "name": "King",
                          "nameLocations": [
                            "921:4:86"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6357,
                          "src": "921:4:86"
                        },
                        "referencedDeclaration": 6357,
                        "src": "921:4:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_King_$6357",
                          "typeString": "contract King"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10917,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10914,
                            "name": "levelAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10900,
                            "src": "955:12:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "947:8:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 10912,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "947:8:86",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "947:21:86",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 10911,
                      "name": "King",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6357,
                      "src": "942:4:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_King_$6357_$",
                        "typeString": "type(contract King)"
                      }
                    },
                    "id": 10916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "942:27:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_King_$6357",
                      "typeString": "contract King"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "921:48:86"
                },
                {
                  "assignments": [
                    10920
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10920,
                      "mutability": "mutable",
                      "name": "kingHack",
                      "nameLocation": "1107:8:86",
                      "nodeType": "VariableDeclaration",
                      "scope": 10956,
                      "src": "1098:17:86",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_KingHack_$6503",
                        "typeString": "contract KingHack"
                      },
                      "typeName": {
                        "id": 10919,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10918,
                          "name": "KingHack",
                          "nameLocations": [
                            "1098:8:86"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6503,
                          "src": "1098:8:86"
                        },
                        "referencedDeclaration": 6503,
                        "src": "1098:8:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_KingHack_$6503",
                          "typeString": "contract KingHack"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10929,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10926,
                            "name": "levelAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10900,
                            "src": "1139:12:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1131:8:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 10924,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1131:8:86",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1131:21:86",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 10923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1118:12:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_KingHack_$6503_$",
                        "typeString": "function (address) returns (contract KingHack)"
                      },
                      "typeName": {
                        "id": 10922,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10921,
                          "name": "KingHack",
                          "nameLocations": [
                            "1122:8:86"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6503,
                          "src": "1122:8:86"
                        },
                        "referencedDeclaration": 6503,
                        "src": "1122:8:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_KingHack_$6503",
                          "typeString": "contract KingHack"
                        }
                      }
                    },
                    "id": 10928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1118:35:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_KingHack_$6503",
                      "typeString": "contract KingHack"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1098:55:86"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 10930,
                          "name": "kingHack",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10920,
                          "src": "1285:8:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_KingHack_$6503",
                            "typeString": "contract KingHack"
                          }
                        },
                        "id": 10932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1294:6:86",
                        "memberName": "attack",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6493,
                        "src": "1285:15:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 10934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 10933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1308:7:86",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "1285:31:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 10935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1285:33:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10936,
                  "nodeType": "ExpressionStatement",
                  "src": "1285:33:86"
                },
                {
                  "assignments": [
                    10938
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10938,
                      "mutability": "mutable",
                      "name": "levelSuccessfullyPassed",
                      "nameLocation": "1428:23:86",
                      "nodeType": "VariableDeclaration",
                      "scope": 10956,
                      "src": "1423:28:86",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 10937,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1423:4:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10946,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10943,
                            "name": "levelAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10900,
                            "src": "1505:12:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1497:8:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 10941,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1497:8:86",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1497:21:86",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 10939,
                        "name": "ethernaut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10852,
                        "src": "1454:9:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ethernaut_$5303",
                          "typeString": "contract Ethernaut"
                        }
                      },
                      "id": 10940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1464:19:86",
                      "memberName": "submitLevelInstance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5302,
                      "src": "1454:29:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$_t_bool_$",
                        "typeString": "function (address payable) external returns (bool)"
                      }
                    },
                    "id": 10945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1454:74:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1423:105:86"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 10947,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10849,
                        "src": "1538:2:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12761",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 10949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1541:9:86",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12673,
                      "src": "1538:12:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 10950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1538:14:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10951,
                  "nodeType": "ExpressionStatement",
                  "src": "1538:14:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10953,
                        "name": "levelSuccessfullyPassed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10938,
                        "src": "1569:23:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10952,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1562:6:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1562:31:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10955,
                  "nodeType": "ExpressionStatement",
                  "src": "1562:31:86"
                }
              ]
            },
            "functionSelector": "baeded92",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testKingHack",
            "nameLocation": "563:12:86",
            "parameters": {
              "id": 10877,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "575:2:86"
            },
            "returnParameters": {
              "id": 10878,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "585:0:86"
            },
            "scope": 10958,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10839,
              "name": "DSTest",
              "nameLocations": [
                "204:6:86"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1680,
              "src": "204:6:86"
            },
            "id": 10840,
            "nodeType": "InheritanceSpecifier",
            "src": "204:6:86"
          }
        ],
        "canonicalName": "KingTest",
        "contractDependencies": [
          5303,
          6445,
          6503
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          10958,
          1680
        ],
        "name": "KingTest",
        "nameLocation": "192:8:86",
        "scope": 10959,
        "usedErrors": []
      }
    ]
  },
  "id": 86
}