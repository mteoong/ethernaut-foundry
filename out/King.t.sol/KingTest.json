{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testKingHack",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805460ff19166001179055601480546001600160a01b031916606417905534801561003057600080fd5b50611420806100406000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630a9254e414610051578063ba414fa61461005b578063baeded9214610081578063fa7626d414610089575b600080fd5b610059610096565b005b60005461006d90610100900460ff1681565b604051901515815260200160405180910390f35b610059610153565b60005461006d9060ff1681565b6040516100a29061046d565b604051809103906000f0801580156100be573d6000803e3d6000fd5b50601380546001600160a01b0319166001600160a01b0392831617905560145460405163c88a5e6d60e01b815291166004820152674563918244f400006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b15801561013957600080fd5b505af115801561014d573d6000803e3d6000fd5b50505050565b60006040516101619061047a565b604051809103906000f08015801561017d573d6000803e3d6000fd5b5060135460405163080808f560e21b81526001600160a01b03808416600483015292935091169063202023d490602401600060405180830381600087803b1580156101c757600080fd5b505af11580156101db573d6000803e3d6000fd5b50506014546040516303223eab60e11b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d92506306447d569150602401600060405180830381600087803b15801561023857600080fd5b505af115801561024c573d6000803e3d6000fd5b505060135460405163dfc86b1760e01b81526001600160a01b03858116600483015260009450909116915063dfc86b1790670de0b6b3a76400009060240160206040518083038185885af11580156102a8573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906102cd9190610494565b905060008190506000826040516102e390610487565b6001600160a01b039091168152602001604051809103906000f08015801561030f573d6000803e3d6000fd5b509050806001600160a01b0316639e5faafc670de0b6b3a76400006040518263ffffffff1660e01b81526004016000604051808303818588803b15801561035557600080fd5b505af1158015610369573d6000803e3d6000fd5b50506013546040516364416be160e11b81526001600160a01b03888116600483015260009550909116925063c882d7c291506024016020604051808303816000875af11580156103bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e191906104c4565b90507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561044157600080fd5b505af1158015610455573d6000803e3d6000fd5b5050505080610466576104666104e6565b5050505050565b610633806104fd83390190565b61069680610b3083390190565b610225806111c683390190565b6000602082840312156104a657600080fd5b81516001600160a01b03811681146104bd57600080fd5b9392505050565b6000602082840312156104d657600080fd5b815180151581146104bd57600080fd5b634e487b7160e01b600052600160045260246000fdfe608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105b58061007e6000396000f3fe6080604052600436106100555760003560e01c8063202023d41461005a578063715018a61461007c5780638da5cb5b14610091578063c882d7c2146100c8578063dfc86b17146100f8578063f2fde38b1461010b575b600080fd5b34801561006657600080fd5b5061007a61007536600461051c565b61012b565b005b34801561008857600080fd5b5061007a61015a565b34801561009d57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100d457600080fd5b506100e86100e336600461051c565b61016e565b60405190151581526020016100bf565b6100ab61010636600461051c565b610297565b34801561011757600080fd5b5061007a61012636600461051c565b6103df565b61013361045d565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b61016261045d565b61016c60006104b7565b565b6001600160a01b03808216600090815260026020526040812080549192909116331461019957600080fd5b6001810154600160a01b900460ff16156101b257600080fd5b600181015460405163d38def5b60e01b81526001600160a01b0385811660048301523360248301529091169063d38def5b906044016020604051808303816000875af1158015610206573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022a9190610540565b1561028e57600181018054600160a01b60ff60a01b198216179091556040516001600160a01b03909116815233907f9dfdf7e3e630f506a3dfe38cdbe34e196353364235df33e5a3b588488d9a1e789060200160405180910390a250600192915050565b50600092915050565b6001600160a01b03811660009081526001602052604081205460ff166102bc57600080fd5b604051633b937bbb60e11b81523360048201526000906001600160a01b03841690637726f77690349060240160206040518083038185885af1158015610306573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061032b9190610562565b60408051606081018252338082526001600160a01b03878116602080850191825260008587018181528885168083526002845291889020965187549086166001600160a01b031990911617875592516001909601805493511515600160a01b026001600160a81b031990941696909416959095179190911790915592519182529293507f7bf7f1ed7f75e83b76de0ff139966989aff81cb85aac26469c18978d86aac1c2910160405180910390a292915050565b6103e761045d565b6001600160a01b0381166104515760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61045a816104b7565b50565b6000546001600160a01b0316331461016c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610448565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461045a57600080fd5b60006020828403121561052e57600080fd5b813561053981610507565b9392505050565b60006020828403121561055257600080fd5b8151801515811461053957600080fd5b60006020828403121561057457600080fd5b81516105398161050756fea264697066735822122006f19a4484583f66f5689044bca9380e34b5e41445b771070b1fafa86e60f5e964736f6c634300081100336080604052670de0b6b3a764000060015534801561001c57600080fd5b506100263361002b565b61007b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61060c8061008a6000396000f3fe6080604052600436106100595760003560e01c8063715018a6146100655780637726f7761461007c5780638da5cb5b146100ac57806390696af9146100ca578063d38def5b146100ee578063f2fde38b1461011e57600080fd5b3661006057005b600080fd5b34801561007157600080fd5b5061007a61013e565b005b61008f61008a3660046103b6565b610152565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100b857600080fd5b506000546001600160a01b031661008f565b3480156100d657600080fd5b506100e060015481565b6040519081526020016100a3565b3480156100fa57600080fd5b5061010e6101093660046103da565b610194565b60405190151581526020016100a3565b34801561012a57600080fd5b5061007a6101393660046103b6565b61026c565b6101466102ea565b6101506000610344565b565b600060015434101561016357600080fd5b3460405161017090610394565b6040518091039082f090508015801561018d573d6000803e3d6000fd5b5092915050565b604051600090839082906001600160a01b0383169082908181818181875af1925050503d80600081146101e3576040519150601f19603f3d011682016040523d82523d6000602084013e6101e8565b606091505b50509050306001600160a01b0316826001600160a01b03166329cc6d6f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610234573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102589190610413565b6001600160a01b0316141595945050505050565b6102746102ea565b6001600160a01b0381166102de5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6102e781610344565b50565b6000546001600160a01b031633146101505760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102d5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6101a68061043183390190565b6001600160a01b03811681146102e757600080fd5b6000602082840312156103c857600080fd5b81356103d3816103a1565b9392505050565b600080604083850312156103ed57600080fd5b82356103f8816103a1565b91506020830135610408816103a1565b809150509250929050565b60006020828403121561042557600080fd5b81516103d3816103a156fe6080604052600280546001600160a01b0319908116339081179092556000805490911690911790553460015561016c8061003a6000396000f3fe6080604052600436106100385760003560e01c806329cc6d6f146100bb5780638da5cb5b146100f2578063e3ac5d261461011257600080fd5b366100b6576001543410158061005857506002546001600160a01b031633145b61006157600080fd5b600080546040516001600160a01b03909116913480156108fc02929091818181858888f1935050505015801561009b573d6000803e3d6000fd5b50600080546001600160a01b03191633179055346001819055005b600080fd5b3480156100c757600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100fe57600080fd5b506002546100d5906001600160a01b031681565b34801561011e57600080fd5b5061012860015481565b6040519081526020016100e956fea26469706673582212209a80ebe503a3d8cf5b1e917616491fe2606f456e3c9ecc7a60b938fdd1028eb664736f6c63430008110033a264697066735822122020189540ef851e37dd96e8582ecef6897687abadfc030183d4356063d170508a64736f6c63430008110033608060405234801561001057600080fd5b5060405161022538038061022583398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610192806100936000396000f3fe60806040526004361061002d5760003560e01c80639e5faafc1461007b578063d2ef73981461008357600080fd5b366100765760405162461bcd60e51b81526020600482015260126024820152714920616d204b696e6720666f72657665722160701b60448201526064015b60405180910390fd5b005b600080fd5b6100746100bf565b34801561008f57600080fd5b506000546100a3906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b600080546040516001600160a01b039091169034908381818185875af1925050503d806000811461010c576040519150601f19603f3d011682016040523d82523d6000602084013e610111565b606091505b50509050806101595760405162461bcd60e51b8152602060048201526014602482015273115e1d195c9b985b0818d85b1b0819985a5b195960621b604482015260640161006b565b5056fea2646970667358221220dc1acb2b4295d3da651f5142b435c30b8302af3f4c1c7e5257a6a1363bd0a46164736f6c63430008110033a26469706673582212202d2002c22fde824757bb525525660945b8fa7534283d68c6c4fe8a0a1fb6fdb064736f6c63430008110033",
    "sourceMap": "160:1348:99:-:0;;;1573:26:0;;;-1:-1:-1;;1573:26:0;1595:4;1573:26;;;217:33:99;;;-1:-1:-1;;;;;;217:33:99;246:3;217:33;;;160:1348;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "160:1348:99:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;257:197;;;:::i;:::-;;1605:18:0;;;;;;;;;;;;;;;179:14:112;;172:22;154:41;;142:2;127:18;1605::0;;;;;;;460:1046:99;;;:::i;1573:26:0:-;;;;;;;;;257:197:99;355:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;343:9:99;:27;;-1:-1:-1;;;;;;343:27:99;-1:-1:-1;;;;;343:27:99;;;;;;427:10;;419:28;;-1:-1:-1;;;419:28:99;;427:10;;419:28;;;406:51:112;439:7:99;473:18:112;;;466:34;419:7:99;;;;379:18:112;;419:28:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;257:197::o;460:1046::-;580:23;606:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;633:9:99;;:36;;-1:-1:-1;;;633:36:99;;-1:-1:-1;;;;;696:32:112;;;633:36:99;;;678:51:112;580:43:99;;-1:-1:-1;633:9:99;;;:23;;651:18:112;;633:36:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;693:10:99;;679:25;;-1:-1:-1;;;679:25:99;;-1:-1:-1;;;;;693:10:99;;;679:25;;;678:51:112;679:13:99;;-1:-1:-1;679:13:99;;-1:-1:-1;651:18:112;;679:25:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;737:9:99;;:80;;-1:-1:-1;;;737:80:99;;-1:-1:-1;;;;;696:32:112;;;737:80:99;;;678:51:112;714:20:99;;-1:-1:-1;737:9:99;;;;-1:-1:-1;737:29:99;;774:7;;651:18:112;;737:80:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;714:103;;827:18;861:12;827:48;;1004:17;1045:12;1024:35;;;;;:::i;:::-;-1:-1:-1;;;;;696:32:112;;;678:51;;666:2;651:18;1024:35:99;;;;;;;;;;;;;;;;;;;;;;;1004:55;;1191:8;-1:-1:-1;;;;;1191:15:99;;1214:7;1191:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1360:9:99;;:74;;-1:-1:-1;;;1360:74:99;;-1:-1:-1;;;;;696:32:112;;;1360:74:99;;;678:51:112;1329:28:99;;-1:-1:-1;1360:9:99;;;;-1:-1:-1;1360:29:99;;-1:-1:-1;651:18:112;;1360:74:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1329:105;;317:28:1;309:37;;-1:-1:-1;;;;;1444:12:99;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1475:23;1468:31;;;;:::i;:::-;491:1015;;;;;460:1046::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;948:290:112:-;1018:6;1071:2;1059:9;1050:7;1046:23;1042:32;1039:52;;;1087:1;1084;1077:12;1039:52;1113:16;;-1:-1:-1;;;;;1158:31:112;;1148:42;;1138:70;;1204:1;1201;1194:12;1138:70;1227:5;948:290;-1:-1:-1;;;948:290:112:o;1683:277::-;1750:6;1803:2;1791:9;1782:7;1778:23;1774:32;1771:52;;;1819:1;1816;1809:12;1771:52;1851:9;1845:16;1904:5;1897:13;1890:21;1883:5;1880:32;1870:60;;1926:1;1923;1916:12;1965:127;2026:10;2021:3;2017:20;2014:1;2007:31;2057:4;2054:1;2047:15;2081:4;2078:1;2071:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testKingHack()": "baeded92"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testKingHack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/King.t.sol\":\"KingTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/ds-test/src/test.sol\":{\"keccak256\":\"0x529f30c5939d75689f6a982f7f96b8898bed30bd90ec5b385b57cab681e12b00\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://89075d5a96e87acef1d00cf556b409d1836728ec2e92f5629ceb5cae3d1e4354\",\"dweb:/ipfs/QmPAViJrxffEDns9GEMVSAzmr3soAzfrEg1CVuovwmNfnt\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x7f6016716c0c6f49e8163af625290c7ef270a045d9b82be04e269035726d3213\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd050537b58640f8545b319928ee66bef9649d1ebd68a3afa1d28a1ce8cea3dd\",\"dweb:/ipfs/QmbBVxERnZ2ciQuRuZ45czd2DRgouCLEhibLWtC2CrH2j4\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x9d53fb0317c888ed0ef4a8476883d4304f5e7e6fa0161d84d18fa27a63875524\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9638e9a042f5b7695953ea394072f90b814ac98312e447f45c4f2f6cdb22c3ec\",\"dweb:/ipfs/QmPvKu8hyzB2og54Lecmb2DvEiAgM9o5UC2gGgRQJ42PQw\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xd9f9791f56c2afcd841237417d5a55fa8b69de2c1b528ddbfc7d7823fe136606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f66271850d38488984ec1e38aeb57df1cda53538b2ddd19e2164c767792905f0\",\"dweb:/ipfs/QmetNJMTfgJ7SCNMwfLrZEwnL3xdNaBY5vMiqrRrUWjjes\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x94d97a78c720a10212552c5f7f27c61ea58eb027bd51dd054efae6925e785269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://563fd7373c84d700606fc113d535b1a103e7bad4b0412e6cb515d927fb8f57bc\",\"dweb:/ipfs/QmQEjP2DXCXRC4bxXPonLfF8cq1UvMhdQu5X1JynPntvio\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x113bce4d6d0fe7c4e1e3bf2760ba21c075448660a8dae6003f27b9ff86890612\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c8a169ea47398b475696e66d07e354d9997680b5f954418caeeaec5427a131f\",\"dweb:/ipfs/QmSTK6XmjgYZ2CCGZ87AVTowNL3UWfRvqhT6DTbZoKyJzz\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xb31c4ee03d05c6202f6e354245ac3ab883d954f9f36074902089e1b3e645273d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bd98bde50b840b8d7d5cebf818176b9f219345078ed5d3bd0071f035efb2e3\",\"dweb:/ipfs/QmPYC7FZvCWCPF2qWg6TXXTTPGEdnT4y5nebPn1AoZ1H4p\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0xc3222299fd637498c81ab5c8e15c9327289d3708fb8a7063dd10a55a8813c9cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6f5f818e75e8ae5a67b58cff9b351dd790a72d0a5332fb6f425a3561801b6cc\",\"dweb:/ipfs/QmXJEPtMM1AzwCh6u1o1wL2xdi1qRyxsTLt1eVgeC8Y1QH\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xb7004fe1ceab4a20ae13baec8732a5414b28d5ddb06f9f4184b49c1fc1d61521\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a60b5d84bd7d7e455f4a1ca1d260f6b50c419e4c4e7196ef32fd77d0f480d51\",\"dweb:/ipfs/QmYwRMAYYsQuvvM4mnagYs8Zhqm5VXicXmxoqEvkiUzQSd\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd793ebfb854f707ccf9dfec320b3b75d0d73ba54af0dfae727862fe93bc1cfd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a0a39917aabf39d981b17d1a06c9b82377917c3a0eedce8e9dc00df5c096bf9\",\"dweb:/ipfs/Qme7GpiHd32FFKYNbY4vdhiiciWPV1z1Uwtj1KDQAusxki\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/BaseLevel.sol\":{\"keccak256\":\"0x96532046614f14ded4ed0582d37d1bfb6d8ce0423403094476ae9533323a5af8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b9e8bbc7f3c8d982885e58c27a2d063008abef55e70db5eae1358e3d5f7f5b0\",\"dweb:/ipfs/QmNpDPfDEeYYAdYM14p3ef3wgcgjNYjCqwXqKT6mVv8MK8\"]},\"src/Ethernaut.sol\":{\"keccak256\":\"0xdfd342f8053ad866770cc1a48c60e938dfa4a305c3b3fcdde1f60fd4fa7ad655\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28eabd1b8915a2615d24b7ed674f4a924f59ad7305ff481862d00382df3d0348\",\"dweb:/ipfs/QmPpaCPEZnCadgkzptPrD4hkaz6JuL5k5pS2TjaUCYAPZ6\"]},\"src/King/King.sol\":{\"keccak256\":\"0x1fdc2c76be699006163e1aeea14f0e9fbb88bc8206f2619917a1b40910fd536e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70f0cc55eedc4e4b4d4d44f51de005789c84d30b35a5eb25aae2fa654bcb33af\",\"dweb:/ipfs/QmZo1aVGtNY58CYTVPAxeTgxauBYLQwMBTAAhFPwqc2nek\"]},\"src/King/KingFactory.sol\":{\"keccak256\":\"0x80307731da3bc3bf88638fd3c63bcf2ef755a0b5cf56cb14c43462fe9f114c00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58aa5f0c9fbdc5e1e8a0d3de2711488fa7eafdce016bef44cb4bb0fc63563c4f\",\"dweb:/ipfs/QmUGtGL8L9rv9k6oPxfbmwULxuiyEmRUt5JiExGUfBqRLC\"]},\"src/King/KingHack.sol\":{\"keccak256\":\"0x05f326576ba8f465ffe50935f16d4932012f630760428af3a7f4a8d50f3412e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba0e598011bcd393d3c3c4ead013e56800621449a217be15a794d0e7b091ada5\",\"dweb:/ipfs/QmUMaaUtoonok4BTxEqhzfYVAaQrnZSZoCKyP8p7amfJxr\"]},\"test/King.t.sol\":{\"keccak256\":\"0x67314169eb7fda326867ddefe30197a6e34bcbe8a62968b415a2fbf7f6c676dc\",\"urls\":[\"bzz-raw://818daf9421c474e27b6b08970cd6819171858920a91eb24caaa2b2d2597430ef\",\"dweb:/ipfs/QmWs3mD4k36PyUgstZAJjUt7pkunUePX5ZddQTfjhrYSdt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testKingHack"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/King.t.sol": "KingTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/ds-test/src/test.sol": {
        "keccak256": "0x529f30c5939d75689f6a982f7f96b8898bed30bd90ec5b385b57cab681e12b00",
        "urls": [
          "bzz-raw://89075d5a96e87acef1d00cf556b409d1836728ec2e92f5629ceb5cae3d1e4354",
          "dweb:/ipfs/QmPAViJrxffEDns9GEMVSAzmr3soAzfrEg1CVuovwmNfnt"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x7f6016716c0c6f49e8163af625290c7ef270a045d9b82be04e269035726d3213",
        "urls": [
          "bzz-raw://bd050537b58640f8545b319928ee66bef9649d1ebd68a3afa1d28a1ce8cea3dd",
          "dweb:/ipfs/QmbBVxERnZ2ciQuRuZ45czd2DRgouCLEhibLWtC2CrH2j4"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x9d53fb0317c888ed0ef4a8476883d4304f5e7e6fa0161d84d18fa27a63875524",
        "urls": [
          "bzz-raw://9638e9a042f5b7695953ea394072f90b814ac98312e447f45c4f2f6cdb22c3ec",
          "dweb:/ipfs/QmPvKu8hyzB2og54Lecmb2DvEiAgM9o5UC2gGgRQJ42PQw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xd9f9791f56c2afcd841237417d5a55fa8b69de2c1b528ddbfc7d7823fe136606",
        "urls": [
          "bzz-raw://f66271850d38488984ec1e38aeb57df1cda53538b2ddd19e2164c767792905f0",
          "dweb:/ipfs/QmetNJMTfgJ7SCNMwfLrZEwnL3xdNaBY5vMiqrRrUWjjes"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x94d97a78c720a10212552c5f7f27c61ea58eb027bd51dd054efae6925e785269",
        "urls": [
          "bzz-raw://563fd7373c84d700606fc113d535b1a103e7bad4b0412e6cb515d927fb8f57bc",
          "dweb:/ipfs/QmQEjP2DXCXRC4bxXPonLfF8cq1UvMhdQu5X1JynPntvio"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x113bce4d6d0fe7c4e1e3bf2760ba21c075448660a8dae6003f27b9ff86890612",
        "urls": [
          "bzz-raw://8c8a169ea47398b475696e66d07e354d9997680b5f954418caeeaec5427a131f",
          "dweb:/ipfs/QmSTK6XmjgYZ2CCGZ87AVTowNL3UWfRvqhT6DTbZoKyJzz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xb31c4ee03d05c6202f6e354245ac3ab883d954f9f36074902089e1b3e645273d",
        "urls": [
          "bzz-raw://33bd98bde50b840b8d7d5cebf818176b9f219345078ed5d3bd0071f035efb2e3",
          "dweb:/ipfs/QmPYC7FZvCWCPF2qWg6TXXTTPGEdnT4y5nebPn1AoZ1H4p"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0xc3222299fd637498c81ab5c8e15c9327289d3708fb8a7063dd10a55a8813c9cf",
        "urls": [
          "bzz-raw://b6f5f818e75e8ae5a67b58cff9b351dd790a72d0a5332fb6f425a3561801b6cc",
          "dweb:/ipfs/QmXJEPtMM1AzwCh6u1o1wL2xdi1qRyxsTLt1eVgeC8Y1QH"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xb7004fe1ceab4a20ae13baec8732a5414b28d5ddb06f9f4184b49c1fc1d61521",
        "urls": [
          "bzz-raw://5a60b5d84bd7d7e455f4a1ca1d260f6b50c419e4c4e7196ef32fd77d0f480d51",
          "dweb:/ipfs/QmYwRMAYYsQuvvM4mnagYs8Zhqm5VXicXmxoqEvkiUzQSd"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xfd793ebfb854f707ccf9dfec320b3b75d0d73ba54af0dfae727862fe93bc1cfd",
        "urls": [
          "bzz-raw://9a0a39917aabf39d981b17d1a06c9b82377917c3a0eedce8e9dc00df5c096bf9",
          "dweb:/ipfs/Qme7GpiHd32FFKYNbY4vdhiiciWPV1z1Uwtj1KDQAusxki"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/BaseLevel.sol": {
        "keccak256": "0x96532046614f14ded4ed0582d37d1bfb6d8ce0423403094476ae9533323a5af8",
        "urls": [
          "bzz-raw://9b9e8bbc7f3c8d982885e58c27a2d063008abef55e70db5eae1358e3d5f7f5b0",
          "dweb:/ipfs/QmNpDPfDEeYYAdYM14p3ef3wgcgjNYjCqwXqKT6mVv8MK8"
        ],
        "license": "MIT"
      },
      "src/Ethernaut.sol": {
        "keccak256": "0xdfd342f8053ad866770cc1a48c60e938dfa4a305c3b3fcdde1f60fd4fa7ad655",
        "urls": [
          "bzz-raw://28eabd1b8915a2615d24b7ed674f4a924f59ad7305ff481862d00382df3d0348",
          "dweb:/ipfs/QmPpaCPEZnCadgkzptPrD4hkaz6JuL5k5pS2TjaUCYAPZ6"
        ],
        "license": "MIT"
      },
      "src/King/King.sol": {
        "keccak256": "0x1fdc2c76be699006163e1aeea14f0e9fbb88bc8206f2619917a1b40910fd536e",
        "urls": [
          "bzz-raw://70f0cc55eedc4e4b4d4d44f51de005789c84d30b35a5eb25aae2fa654bcb33af",
          "dweb:/ipfs/QmZo1aVGtNY58CYTVPAxeTgxauBYLQwMBTAAhFPwqc2nek"
        ],
        "license": "MIT"
      },
      "src/King/KingFactory.sol": {
        "keccak256": "0x80307731da3bc3bf88638fd3c63bcf2ef755a0b5cf56cb14c43462fe9f114c00",
        "urls": [
          "bzz-raw://58aa5f0c9fbdc5e1e8a0d3de2711488fa7eafdce016bef44cb4bb0fc63563c4f",
          "dweb:/ipfs/QmUGtGL8L9rv9k6oPxfbmwULxuiyEmRUt5JiExGUfBqRLC"
        ],
        "license": "MIT"
      },
      "src/King/KingHack.sol": {
        "keccak256": "0x05f326576ba8f465ffe50935f16d4932012f630760428af3a7f4a8d50f3412e2",
        "urls": [
          "bzz-raw://ba0e598011bcd393d3c3c4ead013e56800621449a217be15a794d0e7b091ada5",
          "dweb:/ipfs/QmUMaaUtoonok4BTxEqhzfYVAaQrnZSZoCKyP8p7amfJxr"
        ],
        "license": "MIT"
      },
      "test/King.t.sol": {
        "keccak256": "0x67314169eb7fda326867ddefe30197a6e34bcbe8a62968b415a2fbf7f6c676dc",
        "urls": [
          "bzz-raw://818daf9421c474e27b6b08970cd6819171858920a91eb24caaa2b2d2597430ef",
          "dweb:/ipfs/QmWs3mD4k36PyUgstZAJjUt7pkunUePX5ZddQTfjhrYSdt"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/King.t.sol",
    "id": 34548,
    "exportedSymbols": {
      "Context": [
        26693
      ],
      "DSTest": [
        1680
      ],
      "Ethernaut": [
        28992
      ],
      "IKing": [
        30142
      ],
      "King": [
        30046
      ],
      "KingFactory": [
        30134
      ],
      "KingHack": [
        30192
      ],
      "KingTest": [
        34547
      ],
      "Level": [
        27027
      ],
      "Ownable": [
        25482
      ],
      "StdAssertions": [
        2565
      ],
      "StdChains": [
        3101
      ],
      "StdCheats": [
        5038
      ],
      "StdStorage": [
        5945
      ],
      "StdUtils": [
        8010
      ],
      "Test": [
        8052
      ],
      "TestBase": [
        1737
      ],
      "Vm": [
        9209
      ],
      "console": [
        17273
      ],
      "console2": [
        25369
      ],
      "stdError": [
        5104
      ],
      "stdJson": [
        5771
      ],
      "stdMath": [
        5913
      ],
      "stdStorage": [
        7379
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:1509:99",
    "nodes": [
      {
        "id": 34432,
        "nodeType": "PragmaDirective",
        "src": "0:24:99",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 34433,
        "nodeType": "ImportDirective",
        "src": "26:28:99",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34548,
        "sourceUnit": 8053,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34434,
        "nodeType": "ImportDirective",
        "src": "55:34:99",
        "nodes": [],
        "absolutePath": "src/King/KingHack.sol",
        "file": "../src/King/KingHack.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34548,
        "sourceUnit": 30193,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34435,
        "nodeType": "ImportDirective",
        "src": "90:37:99",
        "nodes": [],
        "absolutePath": "src/King/KingFactory.sol",
        "file": "../src/King/KingFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34548,
        "sourceUnit": 30135,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34436,
        "nodeType": "ImportDirective",
        "src": "128:30:99",
        "nodes": [],
        "absolutePath": "src/Ethernaut.sol",
        "file": "../src/Ethernaut.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34548,
        "sourceUnit": 28993,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34547,
        "nodeType": "ContractDefinition",
        "src": "160:1348:99",
        "nodes": [
          {
            "id": 34441,
            "nodeType": "VariableDeclaration",
            "src": "192:19:99",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "ethernaut",
            "nameLocation": "202:9:99",
            "scope": 34547,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Ethernaut_$28992",
              "typeString": "contract Ethernaut"
            },
            "typeName": {
              "id": 34440,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 34439,
                "name": "Ethernaut",
                "nameLocations": [
                  "192:9:99"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28992,
                "src": "192:9:99"
              },
              "referencedDeclaration": 28992,
              "src": "192:9:99",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ethernaut_$28992",
                "typeString": "contract Ethernaut"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 34447,
            "nodeType": "VariableDeclaration",
            "src": "217:33:99",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "eoaAddress",
            "nameLocation": "225:10:99",
            "scope": 34547,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 34442,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "217:7:99",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "313030",
                  "id": 34445,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "246:3:99",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_100_by_1",
                    "typeString": "int_const 100"
                  },
                  "value": "100"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_100_by_1",
                    "typeString": "int_const 100"
                  }
                ],
                "id": 34444,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "238:7:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 34443,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "238:7:99",
                  "typeDescriptions": {}
                }
              },
              "id": 34446,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "238:12:99",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 34465,
            "nodeType": "FunctionDefinition",
            "src": "257:197:99",
            "nodes": [],
            "body": {
              "id": 34464,
              "nodeType": "Block",
              "src": "281:173:99",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 34455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34450,
                      "name": "ethernaut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34441,
                      "src": "343:9:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Ethernaut_$28992",
                        "typeString": "contract Ethernaut"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 34453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "355:13:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Ethernaut_$28992_$",
                          "typeString": "function () returns (contract Ethernaut)"
                        },
                        "typeName": {
                          "id": 34452,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 34451,
                            "name": "Ethernaut",
                            "nameLocations": [
                              "359:9:99"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 28992,
                            "src": "359:9:99"
                          },
                          "referencedDeclaration": 28992,
                          "src": "359:9:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Ethernaut_$28992",
                            "typeString": "contract Ethernaut"
                          }
                        }
                      },
                      "id": 34454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "355:15:99",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Ethernaut_$28992",
                        "typeString": "contract Ethernaut"
                      }
                    },
                    "src": "343:27:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Ethernaut_$28992",
                      "typeString": "contract Ethernaut"
                    }
                  },
                  "id": 34456,
                  "nodeType": "ExpressionStatement",
                  "src": "343:27:99"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34460,
                        "name": "eoaAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34447,
                        "src": "427:10:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 34461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "439:7:99",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 34457,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1730,
                        "src": "419:2:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$9209",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "422:4:99",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8961,
                      "src": "419:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 34462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "419:28:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34463,
                  "nodeType": "ExpressionStatement",
                  "src": "419:28:99"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "266:5:99",
            "parameters": {
              "id": 34448,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "271:2:99"
            },
            "returnParameters": {
              "id": 34449,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "281:0:99"
            },
            "scope": 34547,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34546,
            "nodeType": "FunctionDefinition",
            "src": "460:1046:99",
            "nodes": [],
            "body": {
              "id": 34545,
              "nodeType": "Block",
              "src": "491:1015:99",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    34470
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34470,
                      "mutability": "mutable",
                      "name": "kingFactory",
                      "nameLocation": "592:11:99",
                      "nodeType": "VariableDeclaration",
                      "scope": 34545,
                      "src": "580:23:99",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_KingFactory_$30134",
                        "typeString": "contract KingFactory"
                      },
                      "typeName": {
                        "id": 34469,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34468,
                          "name": "KingFactory",
                          "nameLocations": [
                            "580:11:99"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 30134,
                          "src": "580:11:99"
                        },
                        "referencedDeclaration": 30134,
                        "src": "580:11:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_KingFactory_$30134",
                          "typeString": "contract KingFactory"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34475,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 34473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "606:15:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_KingFactory_$30134_$",
                        "typeString": "function () returns (contract KingFactory)"
                      },
                      "typeName": {
                        "id": 34472,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34471,
                          "name": "KingFactory",
                          "nameLocations": [
                            "610:11:99"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 30134,
                          "src": "610:11:99"
                        },
                        "referencedDeclaration": 30134,
                        "src": "610:11:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_KingFactory_$30134",
                          "typeString": "contract KingFactory"
                        }
                      }
                    },
                    "id": 34474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "606:17:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_KingFactory_$30134",
                      "typeString": "contract KingFactory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "580:43:99"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34479,
                        "name": "kingFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34470,
                        "src": "657:11:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_KingFactory_$30134",
                          "typeString": "contract KingFactory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_KingFactory_$30134",
                          "typeString": "contract KingFactory"
                        }
                      ],
                      "expression": {
                        "id": 34476,
                        "name": "ethernaut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34441,
                        "src": "633:9:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ethernaut_$28992",
                          "typeString": "contract Ethernaut"
                        }
                      },
                      "id": 34478,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "643:13:99",
                      "memberName": "registerLevel",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28861,
                      "src": "633:23:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Level_$27027_$returns$__$",
                        "typeString": "function (contract Level) external"
                      }
                    },
                    "id": 34480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "633:36:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34481,
                  "nodeType": "ExpressionStatement",
                  "src": "633:36:99"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34485,
                        "name": "eoaAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34447,
                        "src": "693:10:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34482,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1730,
                        "src": "679:2:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$9209",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "682:10:99",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8937,
                      "src": "679:13:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 34486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "679:25:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34487,
                  "nodeType": "ExpressionStatement",
                  "src": "679:25:99"
                },
                {
                  "assignments": [
                    34489
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34489,
                      "mutability": "mutable",
                      "name": "levelAddress",
                      "nameLocation": "722:12:99",
                      "nodeType": "VariableDeclaration",
                      "scope": 34545,
                      "src": "714:20:99",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 34488,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "714:7:99",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34496,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 34494,
                        "name": "kingFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34470,
                        "src": "796:11:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_KingFactory_$30134",
                          "typeString": "contract KingFactory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_KingFactory_$30134",
                          "typeString": "contract KingFactory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_KingFactory_$30134",
                            "typeString": "contract KingFactory"
                          }
                        ],
                        "expression": {
                          "id": 34490,
                          "name": "ethernaut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34441,
                          "src": "737:9:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Ethernaut_$28992",
                            "typeString": "contract Ethernaut"
                          }
                        },
                        "id": 34491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "747:19:99",
                        "memberName": "createLevelInstance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28935,
                        "src": "737:29:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_contract$_Level_$27027_$returns$_t_address_$",
                          "typeString": "function (contract Level) payable external returns (address)"
                        }
                      },
                      "id": 34493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 34492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "774:7:99",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "737:45:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_contract$_Level_$27027_$returns$_t_address_$value",
                        "typeString": "function (contract Level) payable external returns (address)"
                      }
                    },
                    "id": 34495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "737:80:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "714:103:99"
                },
                {
                  "assignments": [
                    34499
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34499,
                      "mutability": "mutable",
                      "name": "ethernautKing",
                      "nameLocation": "832:13:99",
                      "nodeType": "VariableDeclaration",
                      "scope": 34545,
                      "src": "827:18:99",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_King_$30046",
                        "typeString": "contract King"
                      },
                      "typeName": {
                        "id": 34498,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34497,
                          "name": "King",
                          "nameLocations": [
                            "827:4:99"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 30046,
                          "src": "827:4:99"
                        },
                        "referencedDeclaration": 30046,
                        "src": "827:4:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_King_$30046",
                          "typeString": "contract King"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34506,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34503,
                            "name": "levelAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34489,
                            "src": "861:12:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 34502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "853:8:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 34501,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "853:8:99",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "853:21:99",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 34500,
                      "name": "King",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30046,
                      "src": "848:4:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_King_$30046_$",
                        "typeString": "type(contract King)"
                      }
                    },
                    "id": 34505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "848:27:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_King_$30046",
                      "typeString": "contract King"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "827:48:99"
                },
                {
                  "assignments": [
                    34509
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34509,
                      "mutability": "mutable",
                      "name": "kingHack",
                      "nameLocation": "1013:8:99",
                      "nodeType": "VariableDeclaration",
                      "scope": 34545,
                      "src": "1004:17:99",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_KingHack_$30192",
                        "typeString": "contract KingHack"
                      },
                      "typeName": {
                        "id": 34508,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34507,
                          "name": "KingHack",
                          "nameLocations": [
                            "1004:8:99"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 30192,
                          "src": "1004:8:99"
                        },
                        "referencedDeclaration": 30192,
                        "src": "1004:8:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_KingHack_$30192",
                          "typeString": "contract KingHack"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34518,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34515,
                            "name": "levelAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34489,
                            "src": "1045:12:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 34514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1037:8:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 34513,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1037:8:99",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1037:21:99",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 34512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1024:12:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_KingHack_$30192_$",
                        "typeString": "function (address) returns (contract KingHack)"
                      },
                      "typeName": {
                        "id": 34511,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34510,
                          "name": "KingHack",
                          "nameLocations": [
                            "1028:8:99"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 30192,
                          "src": "1028:8:99"
                        },
                        "referencedDeclaration": 30192,
                        "src": "1028:8:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_KingHack_$30192",
                          "typeString": "contract KingHack"
                        }
                      }
                    },
                    "id": 34517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1024:35:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_KingHack_$30192",
                      "typeString": "contract KingHack"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1004:55:99"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 34519,
                          "name": "kingHack",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34509,
                          "src": "1191:8:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_KingHack_$30192",
                            "typeString": "contract KingHack"
                          }
                        },
                        "id": 34521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1200:6:99",
                        "memberName": "attack",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30182,
                        "src": "1191:15:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 34523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 34522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1214:7:99",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "1191:31:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 34524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1191:33:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34525,
                  "nodeType": "ExpressionStatement",
                  "src": "1191:33:99"
                },
                {
                  "assignments": [
                    34527
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34527,
                      "mutability": "mutable",
                      "name": "levelSuccessfullyPassed",
                      "nameLocation": "1334:23:99",
                      "nodeType": "VariableDeclaration",
                      "scope": 34545,
                      "src": "1329:28:99",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 34526,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1329:4:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34535,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34532,
                            "name": "levelAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34489,
                            "src": "1411:12:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 34531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1403:8:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 34530,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1403:8:99",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1403:21:99",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 34528,
                        "name": "ethernaut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34441,
                        "src": "1360:9:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ethernaut_$28992",
                          "typeString": "contract Ethernaut"
                        }
                      },
                      "id": 34529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1370:19:99",
                      "memberName": "submitLevelInstance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28991,
                      "src": "1360:29:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$_t_bool_$",
                        "typeString": "function (address payable) external returns (bool)"
                      }
                    },
                    "id": 34534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1360:74:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1329:105:99"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34536,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1730,
                        "src": "1444:2:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$9209",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1447:9:99",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8954,
                      "src": "1444:12:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 34539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1444:14:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34540,
                  "nodeType": "ExpressionStatement",
                  "src": "1444:14:99"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34542,
                        "name": "levelSuccessfullyPassed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34527,
                        "src": "1475:23:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 34541,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1468:6:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 34543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1468:31:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34544,
                  "nodeType": "ExpressionStatement",
                  "src": "1468:31:99"
                }
              ]
            },
            "functionSelector": "baeded92",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testKingHack",
            "nameLocation": "469:12:99",
            "parameters": {
              "id": 34466,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "481:2:99"
            },
            "returnParameters": {
              "id": 34467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "491:0:99"
            },
            "scope": 34547,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 34437,
              "name": "Test",
              "nameLocations": [
                "181:4:99"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8052,
              "src": "181:4:99"
            },
            "id": 34438,
            "nodeType": "InheritanceSpecifier",
            "src": "181:4:99"
          }
        ],
        "canonicalName": "KingTest",
        "contractDependencies": [
          28992,
          30134,
          30192
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          34547,
          8052,
          1737,
          1734,
          8010,
          5038,
          4649,
          3101,
          2565,
          1680
        ],
        "name": "KingTest",
        "nameLocation": "169:8:99",
        "scope": 34548,
        "usedErrors": []
      }
    ]
  },
  "id": 99
}