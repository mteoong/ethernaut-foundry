{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCoinFlipHack",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805461ff01600160b01b031916757109709ecfa91a80626ff3989d68f67f5b1dd12d000117905534801561003957600080fd5b50611495806100496000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630a9254e41461005157806351c3b4f11461005b578063ba414fa614610063578063fa7626d414610089575b600080fd5b610059610096565b005b6100596100e1565b60005461007590610100900460ff1681565b604051901515815260200160405180910390f35b6000546100759060ff1681565b6040516100a2906104bb565b604051809103906000f0801580156100be573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b0392909216919091179055565b60006040516100ef906104c8565b604051809103906000f08015801561010b573d6000803e3d6000fd5b5060015460405163080808f560e21b81526001600160a01b03808416600483015292935091169063202023d490602401600060405180830381600087803b15801561015557600080fd5b505af1158015610169573d6000803e3d6000fd5b50506000546040516303223eab60e11b8152326004820152620100009091046001600160a01b031692506306447d569150602401600060405180830381600087803b1580156101b757600080fd5b505af11580156101cb573d6000803e3d6000fd5b505060015460405163dfc86b1760e01b81526001600160a01b03858116600483015260009450909116915063dfc86b17906024016020604051808303816000875af115801561021e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024291906104e2565b6000546040516301f7b4f360e41b8152600560048201529192508291620100009091046001600160a01b031690631f7b4f3090602401600060405180830381600087803b15801561029257600080fd5b505af11580156102a6573d6000803e3d6000fd5b505050506000826040516102b9906104d5565b6001600160a01b039091168152602001604051809103906000f0801580156102e5573d6000803e3d6000fd5b50905060005b600a81116103cb576000546201000090046001600160a01b0316631f7b4f30610315836006610528565b6040518263ffffffff1660e01b815260040161033391815260200190565b600060405180830381600087803b15801561034d57600080fd5b505af1158015610361573d6000803e3d6000fd5b50505050816001600160a01b0316639e5faafc6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156103a057600080fd5b505af11580156103b4573d6000803e3d6000fd5b5050505080806103c390610541565b9150506102eb565b506001546040516364416be160e11b81526001600160a01b038581166004830152600092169063c882d7c2906024016020604051808303816000875af1158015610419573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043d919061055a565b9050600060029054906101000a90046001600160a01b03166001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561048f57600080fd5b505af11580156104a3573d6000803e3d6000fd5b50505050806104b4576104b461057c565b5050505050565b6106338061059383390190565b61064380610bc683390190565b6102578061120983390190565b6000602082840312156104f457600080fd5b81516001600160a01b038116811461050b57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561053b5761053b610512565b92915050565b60006001820161055357610553610512565b5060010190565b60006020828403121561056c57600080fd5b8151801515811461050b57600080fd5b634e487b7160e01b600052600160045260246000fdfe608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105b58061007e6000396000f3fe6080604052600436106100555760003560e01c8063202023d41461005a578063715018a61461007c5780638da5cb5b14610091578063c882d7c2146100c8578063dfc86b17146100f8578063f2fde38b1461010b575b600080fd5b34801561006657600080fd5b5061007a61007536600461051c565b61012b565b005b34801561008857600080fd5b5061007a61015a565b34801561009d57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100d457600080fd5b506100e86100e336600461051c565b61016e565b60405190151581526020016100bf565b6100ab61010636600461051c565b610297565b34801561011757600080fd5b5061007a61012636600461051c565b6103df565b61013361045d565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b61016261045d565b61016c60006104b7565b565b6001600160a01b03808216600090815260026020526040812080549192909116331461019957600080fd5b6001810154600160a01b900460ff16156101b257600080fd5b600181015460405163d38def5b60e01b81526001600160a01b0385811660048301523360248301529091169063d38def5b906044016020604051808303816000875af1158015610206573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022a9190610540565b1561028e57600181018054600160a01b60ff60a01b198216179091556040516001600160a01b03909116815233907f9dfdf7e3e630f506a3dfe38cdbe34e196353364235df33e5a3b588488d9a1e789060200160405180910390a250600192915050565b50600092915050565b6001600160a01b03811660009081526001602052604081205460ff166102bc57600080fd5b604051633b937bbb60e11b81523360048201526000906001600160a01b03841690637726f77690349060240160206040518083038185885af1158015610306573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061032b9190610562565b60408051606081018252338082526001600160a01b03878116602080850191825260008587018181528885168083526002845291889020965187549086166001600160a01b031990911617875592516001909601805493511515600160a01b026001600160a81b031990941696909416959095179190911790915592519182529293507f7bf7f1ed7f75e83b76de0ff139966989aff81cb85aac26469c18978d86aac1c2910160405180910390a292915050565b6103e761045d565b6001600160a01b0381166104515760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61045a816104b7565b50565b6000546001600160a01b0316331461016c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610448565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461045a57600080fd5b60006020828403121561052e57600080fd5b813561053981610507565b9392505050565b60006020828403121561055257600080fd5b8151801515811461053957600080fd5b60006020828403121561057457600080fd5b81516105398161050756fea26469706673582212200a6985217144b514a794ae8ed1f3c70df9de73effaa640beeadf7107e0d7778564736f6c63430008110033608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105c58061007e6000396000f3fe60806040526004361061004a5760003560e01c8063715018a61461004f5780637726f776146100665780638da5cb5b14610096578063d38def5b146100b4578063f2fde38b146100e4575b600080fd5b34801561005b57600080fd5b50610064610104565b005b610079610074366004610307565b610118565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100a257600080fd5b506000546001600160a01b0316610079565b3480156100c057600080fd5b506100d46100cf36600461032b565b610149565b604051901515815260200161008d565b3480156100f057600080fd5b506100646100ff366004610307565b6101bd565b61010c61023b565b6101166000610295565b565b6000604051610126906102e5565b604051809103906000f080158015610142573d6000803e3d6000fd5b5092915050565b600080839050600a816001600160a01b031663e6f334d76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561018f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b39190610364565b1015949350505050565b6101c561023b565b6001600160a01b03811661022f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61023881610295565b50565b6000546001600160a01b031633146101165760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610226565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6102128061037e83390190565b6001600160a01b038116811461023857600080fd5b60006020828403121561031957600080fd5b8135610324816102f2565b9392505050565b6000806040838503121561033e57600080fd5b8235610349816102f2565b91506020830135610359816102f2565b809150509250929050565b60006020828403121561037657600080fd5b505191905056fe6080604052600160ff1b60025534801561001857600080fd5b50600080556101e68061002c6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631d263f671461003b578063e6f334d714610063575b600080fd5b61004e610049366004610123565b61007a565b60405190151581526020015b60405180910390f35b61006c60005481565b60405190815260200161005a565b600080610088436001610102565b4060001c9050806001540361009c57600080fd5b60018190556002546000906100b2908390610117565b90506000816001146100c55760006100c8565b60015b9050841515811515036100f4576000805490806100e483610162565b9091555060019695505050505050565b505060008080559392505050565b600061010e828461017b565b90505b92915050565b600061010e828461018e565b60006020828403121561013557600080fd5b8135801515811461014557600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b6000600182016101745761017461014c565b5060010190565b818103818111156101115761011161014c565b6000826101ab57634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122026c581892ebf9520acaab7ccf5e6e6430a09e6e3d8f963f0c0539ee03099528664736f6c63430008110033a2646970667358221220e26a81b482e3111993982f334ad5d5ff884a7d56c726e54f15dfd008c606a7ea64736f6c63430008110033608060405234801561001057600080fd5b5060405161025738038061025783398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6101c4806100936000396000f3fe6080604052600436106100295760003560e01c80639e5faafc1461002b578063d2ef739814610033575b005b61002961006f565b34801561003f57600080fd5b50600054610053906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b600061007c60014361011c565b409050600061008f600160ff1b83610143565b90506000816001146100a25760006100a5565b60015b600054604051631d263f6760e01b815282151560048201529192506001600160a01b031690631d263f67906024016020604051808303816000875af11580156100f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101169190610165565b50505050565b8181038181111561013d57634e487b7160e01b600052601160045260246000fd5b92915050565b60008261016057634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561017757600080fd5b8151801515811461018757600080fd5b939250505056fea264697066735822122022ee2ba316425696156c32e2a2abfb72a339e2d105a5e6d0af7ea7e0b76c3bdc64736f6c63430008110033a26469706673582212204e3a8fc080b88fc2f43d87fb8bcf44876bb91b7c1ac921f6ced52dc939479f0c64736f6c63430008110033",
    "sourceMap": "199:1642:9:-:0;;;1573:26:0;;;-1:-1:-1;;;;;;237:63:9;;;;;199:1642;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80630a9254e41461005157806351c3b4f11461005b578063ba414fa614610063578063fa7626d414610089575b600080fd5b610059610096565b005b6100596100e1565b60005461007590610100900460ff1681565b604051901515815260200160405180910390f35b6000546100759060ff1681565b6040516100a2906104bb565b604051809103906000f0801580156100be573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b0392909216919091179055565b60006040516100ef906104c8565b604051809103906000f08015801561010b573d6000803e3d6000fd5b5060015460405163080808f560e21b81526001600160a01b03808416600483015292935091169063202023d490602401600060405180830381600087803b15801561015557600080fd5b505af1158015610169573d6000803e3d6000fd5b50506000546040516303223eab60e11b8152326004820152620100009091046001600160a01b031692506306447d569150602401600060405180830381600087803b1580156101b757600080fd5b505af11580156101cb573d6000803e3d6000fd5b505060015460405163dfc86b1760e01b81526001600160a01b03858116600483015260009450909116915063dfc86b17906024016020604051808303816000875af115801561021e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024291906104e2565b6000546040516301f7b4f360e41b8152600560048201529192508291620100009091046001600160a01b031690631f7b4f3090602401600060405180830381600087803b15801561029257600080fd5b505af11580156102a6573d6000803e3d6000fd5b505050506000826040516102b9906104d5565b6001600160a01b039091168152602001604051809103906000f0801580156102e5573d6000803e3d6000fd5b50905060005b600a81116103cb576000546201000090046001600160a01b0316631f7b4f30610315836006610528565b6040518263ffffffff1660e01b815260040161033391815260200190565b600060405180830381600087803b15801561034d57600080fd5b505af1158015610361573d6000803e3d6000fd5b50505050816001600160a01b0316639e5faafc6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156103a057600080fd5b505af11580156103b4573d6000803e3d6000fd5b5050505080806103c390610541565b9150506102eb565b506001546040516364416be160e11b81526001600160a01b038581166004830152600092169063c882d7c2906024016020604051808303816000875af1158015610419573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043d919061055a565b9050600060029054906101000a90046001600160a01b03166001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561048f57600080fd5b505af11580156104a3573d6000803e3d6000fd5b50505050806104b4576104b461057c565b5050505050565b6106338061059383390190565b61064380610bc683390190565b6102578061120983390190565b6000602082840312156104f457600080fd5b81516001600160a01b038116811461050b57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561053b5761053b610512565b92915050565b60006001820161055357610553610512565b5060010190565b60006020828403121561056c57600080fd5b8151801515811461050b57600080fd5b634e487b7160e01b600052600160045260246000fdfe608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105b58061007e6000396000f3fe6080604052600436106100555760003560e01c8063202023d41461005a578063715018a61461007c5780638da5cb5b14610091578063c882d7c2146100c8578063dfc86b17146100f8578063f2fde38b1461010b575b600080fd5b34801561006657600080fd5b5061007a61007536600461051c565b61012b565b005b34801561008857600080fd5b5061007a61015a565b34801561009d57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100d457600080fd5b506100e86100e336600461051c565b61016e565b60405190151581526020016100bf565b6100ab61010636600461051c565b610297565b34801561011757600080fd5b5061007a61012636600461051c565b6103df565b61013361045d565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b61016261045d565b61016c60006104b7565b565b6001600160a01b03808216600090815260026020526040812080549192909116331461019957600080fd5b6001810154600160a01b900460ff16156101b257600080fd5b600181015460405163d38def5b60e01b81526001600160a01b0385811660048301523360248301529091169063d38def5b906044016020604051808303816000875af1158015610206573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022a9190610540565b1561028e57600181018054600160a01b60ff60a01b198216179091556040516001600160a01b03909116815233907f9dfdf7e3e630f506a3dfe38cdbe34e196353364235df33e5a3b588488d9a1e789060200160405180910390a250600192915050565b50600092915050565b6001600160a01b03811660009081526001602052604081205460ff166102bc57600080fd5b604051633b937bbb60e11b81523360048201526000906001600160a01b03841690637726f77690349060240160206040518083038185885af1158015610306573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061032b9190610562565b60408051606081018252338082526001600160a01b03878116602080850191825260008587018181528885168083526002845291889020965187549086166001600160a01b031990911617875592516001909601805493511515600160a01b026001600160a81b031990941696909416959095179190911790915592519182529293507f7bf7f1ed7f75e83b76de0ff139966989aff81cb85aac26469c18978d86aac1c2910160405180910390a292915050565b6103e761045d565b6001600160a01b0381166104515760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61045a816104b7565b50565b6000546001600160a01b0316331461016c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610448565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461045a57600080fd5b60006020828403121561052e57600080fd5b813561053981610507565b9392505050565b60006020828403121561055257600080fd5b8151801515811461053957600080fd5b60006020828403121561057457600080fd5b81516105398161050756fea26469706673582212200a6985217144b514a794ae8ed1f3c70df9de73effaa640beeadf7107e0d7778564736f6c63430008110033608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105c58061007e6000396000f3fe60806040526004361061004a5760003560e01c8063715018a61461004f5780637726f776146100665780638da5cb5b14610096578063d38def5b146100b4578063f2fde38b146100e4575b600080fd5b34801561005b57600080fd5b50610064610104565b005b610079610074366004610307565b610118565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100a257600080fd5b506000546001600160a01b0316610079565b3480156100c057600080fd5b506100d46100cf36600461032b565b610149565b604051901515815260200161008d565b3480156100f057600080fd5b506100646100ff366004610307565b6101bd565b61010c61023b565b6101166000610295565b565b6000604051610126906102e5565b604051809103906000f080158015610142573d6000803e3d6000fd5b5092915050565b600080839050600a816001600160a01b031663e6f334d76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561018f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b39190610364565b1015949350505050565b6101c561023b565b6001600160a01b03811661022f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61023881610295565b50565b6000546001600160a01b031633146101165760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610226565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6102128061037e83390190565b6001600160a01b038116811461023857600080fd5b60006020828403121561031957600080fd5b8135610324816102f2565b9392505050565b6000806040838503121561033e57600080fd5b8235610349816102f2565b91506020830135610359816102f2565b809150509250929050565b60006020828403121561037657600080fd5b505191905056fe6080604052600160ff1b60025534801561001857600080fd5b50600080556101e68061002c6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631d263f671461003b578063e6f334d714610063575b600080fd5b61004e610049366004610123565b61007a565b60405190151581526020015b60405180910390f35b61006c60005481565b60405190815260200161005a565b600080610088436001610102565b4060001c9050806001540361009c57600080fd5b60018190556002546000906100b2908390610117565b90506000816001146100c55760006100c8565b60015b9050841515811515036100f4576000805490806100e483610162565b9091555060019695505050505050565b505060008080559392505050565b600061010e828461017b565b90505b92915050565b600061010e828461018e565b60006020828403121561013557600080fd5b8135801515811461014557600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b6000600182016101745761017461014c565b5060010190565b818103818111156101115761011161014c565b6000826101ab57634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122026c581892ebf9520acaab7ccf5e6e6430a09e6e3d8f963f0c0539ee03099528664736f6c63430008110033a2646970667358221220e26a81b482e3111993982f334ad5d5ff884a7d56c726e54f15dfd008c606a7ea64736f6c63430008110033608060405234801561001057600080fd5b5060405161025738038061025783398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6101c4806100936000396000f3fe6080604052600436106100295760003560e01c80639e5faafc1461002b578063d2ef739814610033575b005b61002961006f565b34801561003f57600080fd5b50600054610053906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b600061007c60014361011c565b409050600061008f600160ff1b83610143565b90506000816001146100a25760006100a5565b60015b600054604051631d263f6760e01b815282151560048201529192506001600160a01b031690631d263f67906024016020604051808303816000875af11580156100f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101169190610165565b50505050565b8181038181111561013d57634e487b7160e01b600052601160045260246000fd5b92915050565b60008261016057634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561017757600080fd5b8151801515811461018757600080fd5b939250505056fea264697066735822122022ee2ba316425696156c32e2a2abfb72a339e2d105a5e6d0af7ea7e0b76c3bdc64736f6c63430008110033a26469706673582212204e3a8fc080b88fc2f43d87fb8bcf44876bb91b7c1ac921f6ced52dc939479f0c64736f6c63430008110033",
    "sourceMap": "199:1642:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;332:121;;;:::i;:::-;;459:1380;;;:::i;1605:18:0:-;;;;;;;;;;;;;;;179:14:11;;172:22;154:41;;142:2;127:18;1605::0;;;;;;;1573:26;;;;;;;;;332:121:9;431:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;419:9:9;:27;;-1:-1:-1;;;;;;419:27:9;-1:-1:-1;;;;;419:27:9;;;;;;;;;;332:121::o;459:1380::-;583:31;617:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;648:9:9;;:40;;-1:-1:-1;;;648:40:9;;-1:-1:-1;;;;;394:32:11;;;648:40:9;;;376:51:11;583:55:9;;-1:-1:-1;648:9:9;;;:23;;349:18:11;;648:40:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;698:2:9;;:24;;-1:-1:-1;;;698:24:9;;712:9;698:24;;;376:51:11;698:2:9;;;;-1:-1:-1;;;;;698:2:9;;-1:-1:-1;698:13:9;;-1:-1:-1;349:18:11;;698:24:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;755:9:9;;:46;;-1:-1:-1;;;755:46:9;;-1:-1:-1;;;;;394:32:11;;;755:46:9;;;376:51:11;732:20:9;;-1:-1:-1;755:9:9;;;;-1:-1:-1;755:29:9;;349:18:11;;755:46:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;811:26;1030:2;:10;;-1:-1:-1;;;1030:10:9;;1038:1;1030:10;;;1095:25:11;732:69:9;;-1:-1:-1;732:69:9;;1030:2;;;;-1:-1:-1;;;;;1030:2:9;;:7;;1068:18:11;;1030:10:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1091:25;1136:12;1119:30;;;;;:::i;:::-;-1:-1:-1;;;;;394:32:11;;;376:51;;364:2;349:18;1119:30:9;;;;;;;;;;;;;;;;;;;;;;;1091:58;;1273:9;1268:290;1293:2;1288:1;:7;1268:290;;1498:2;;;;;-1:-1:-1;;;;;1498:2:9;:7;1506:5;1510:1;1506;:5;:::i;:::-;1498:14;;;;;;;;;;;;;1095:25:11;;1083:2;1068:18;;941:185;1498:14:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1526:12;-1:-1:-1;;;;;1526:19:9;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1297:3;;;;;:::i;:::-;;;;1268:290;;;-1:-1:-1;1693:9:9;;:74;;-1:-1:-1;;;1693:74:9;;-1:-1:-1;;;;;394:32:11;;;1693:74:9;;;376:51:11;1662:28:9;;1693:9;;:29;;349:18:11;;1693:74:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1662:105;;1777:2;;;;;;;;;-1:-1:-1;;;;;1777:2:9;-1:-1:-1;;;;;1777:12:9;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1808:23;1801:31;;;;:::i;:::-;494:1345;;;;;459:1380::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;646:290:11:-;716:6;769:2;757:9;748:7;744:23;740:32;737:52;;;785:1;782;775:12;737:52;811:16;;-1:-1:-1;;;;;856:31:11;;846:42;;836:70;;902:1;899;892:12;836:70;925:5;646:290;-1:-1:-1;;;646:290:11:o;1131:127::-;1192:10;1187:3;1183:20;1180:1;1173:31;1223:4;1220:1;1213:15;1247:4;1244:1;1237:15;1263:125;1328:9;;;1349:10;;;1346:36;;;1362:18;;:::i;:::-;1263:125;;;;:::o;1575:135::-;1614:3;1635:17;;;1632:43;;1655:18;;:::i;:::-;-1:-1:-1;1702:1:11;1691:13;;1575:135::o;1939:277::-;2006:6;2059:2;2047:9;2038:7;2034:23;2030:32;2027:52;;;2075:1;2072;2065:12;2027:52;2107:9;2101:16;2160:5;2153:13;2146:21;2139:5;2136:32;2126:60;;2182:1;2179;2172:12;2221:127;2282:10;2277:3;2273:20;2270:1;2263:31;2313:4;2310:1;2303:15;2337:4;2334:1;2327:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testCoinFlipHack()": "51c3b4f1"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCoinFlipHack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/CoinFlip.t.sol\":\"CoinFlipTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/ds-test/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/ds-test/src/test.sol\":{\"keccak256\":\"0x529f30c5939d75689f6a982f7f96b8898bed30bd90ec5b385b57cab681e12b00\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://89075d5a96e87acef1d00cf556b409d1836728ec2e92f5629ceb5cae3d1e4354\",\"dweb:/ipfs/QmPAViJrxffEDns9GEMVSAzmr3soAzfrEg1CVuovwmNfnt\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"src/BaseLevel.sol\":{\"keccak256\":\"0x96532046614f14ded4ed0582d37d1bfb6d8ce0423403094476ae9533323a5af8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b9e8bbc7f3c8d982885e58c27a2d063008abef55e70db5eae1358e3d5f7f5b0\",\"dweb:/ipfs/QmNpDPfDEeYYAdYM14p3ef3wgcgjNYjCqwXqKT6mVv8MK8\"]},\"src/CoinFlip/CoinFlip.sol\":{\"keccak256\":\"0x9a09e2516a54042e70ecfe1fd55e479aba953cccd7cdd87c99cc081078713c2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9121120c2fb0084fbc8dc9d41969cf5d73f51e215ab5bcc3c74327a53aad0ce1\",\"dweb:/ipfs/QmR5scFanCS79Lb8rbRXiipMsSyvUWnQccmgm3CNC4EhxX\"]},\"src/CoinFlip/CoinFlipFactory.sol\":{\"keccak256\":\"0x293ca12b23347007872d605b885c6daffcb2dcdcf208541cc1dced8efa3dbf84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26a3fe9cb188b9c2fa0bd2458f671cbecf73ad63495bfb4984c20c4d283e75e0\",\"dweb:/ipfs/Qmd96VLaTzCbZEDAQ8BpHRL18i72tARVPQutkp85Gt6SNB\"]},\"src/CoinFlip/CoinFlipHack.sol\":{\"keccak256\":\"0x42fd028ce09d5e4f57b0cec3442aac202887e3e2b9196f4c20c411ca6bf45aba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63e1cf0861ff24b4ff6199389d73757d732a6419bc51163e732eb26ebe22b011\",\"dweb:/ipfs/QmXu9kNrj2J6pXv7G26RHVAarppQu2jmfirBX1anQBQCwj\"]},\"src/Ethernaut.sol\":{\"keccak256\":\"0xdfd342f8053ad866770cc1a48c60e938dfa4a305c3b3fcdde1f60fd4fa7ad655\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28eabd1b8915a2615d24b7ed674f4a924f59ad7305ff481862d00382df3d0348\",\"dweb:/ipfs/QmPpaCPEZnCadgkzptPrD4hkaz6JuL5k5pS2TjaUCYAPZ6\"]},\"test/CoinFlip.t.sol\":{\"keccak256\":\"0x6fa5623431b15a8c291967a4e81c2d99d6b66cdedab4bfc991b1f28ea4587113\",\"urls\":[\"bzz-raw://1c430a699051810f03bed935eadc327e9f8d7156fbdc9eea657dd6a9894e890f\",\"dweb:/ipfs/QmeZM72TzALU6j6RjgkUayCVJJgyjaXqroYdkjuYFxLzPe\"]},\"test/utils/vm.sol\":{\"keccak256\":\"0xc34f4b14c4d624ca1d6dbe5434a8328de77817a089067d661ba1a657f46289cc\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://a1dad3c6483f228f98c9e3c492a70277d9e9ef2f65f4153d6082f9b3acee4a7e\",\"dweb:/ipfs/QmXUrWED9yhK4C5LvWbYLEBexwqYgrxRzcefgdYYVB51xt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCoinFlipHack"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/ds-test/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/CoinFlip.t.sol": "CoinFlipTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/ds-test/src/test.sol": {
        "keccak256": "0x529f30c5939d75689f6a982f7f96b8898bed30bd90ec5b385b57cab681e12b00",
        "urls": [
          "bzz-raw://89075d5a96e87acef1d00cf556b409d1836728ec2e92f5629ceb5cae3d1e4354",
          "dweb:/ipfs/QmPAViJrxffEDns9GEMVSAzmr3soAzfrEg1CVuovwmNfnt"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e",
        "urls": [
          "bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65",
          "dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN"
        ],
        "license": "MIT"
      },
      "src/BaseLevel.sol": {
        "keccak256": "0x96532046614f14ded4ed0582d37d1bfb6d8ce0423403094476ae9533323a5af8",
        "urls": [
          "bzz-raw://9b9e8bbc7f3c8d982885e58c27a2d063008abef55e70db5eae1358e3d5f7f5b0",
          "dweb:/ipfs/QmNpDPfDEeYYAdYM14p3ef3wgcgjNYjCqwXqKT6mVv8MK8"
        ],
        "license": "MIT"
      },
      "src/CoinFlip/CoinFlip.sol": {
        "keccak256": "0x9a09e2516a54042e70ecfe1fd55e479aba953cccd7cdd87c99cc081078713c2a",
        "urls": [
          "bzz-raw://9121120c2fb0084fbc8dc9d41969cf5d73f51e215ab5bcc3c74327a53aad0ce1",
          "dweb:/ipfs/QmR5scFanCS79Lb8rbRXiipMsSyvUWnQccmgm3CNC4EhxX"
        ],
        "license": "MIT"
      },
      "src/CoinFlip/CoinFlipFactory.sol": {
        "keccak256": "0x293ca12b23347007872d605b885c6daffcb2dcdcf208541cc1dced8efa3dbf84",
        "urls": [
          "bzz-raw://26a3fe9cb188b9c2fa0bd2458f671cbecf73ad63495bfb4984c20c4d283e75e0",
          "dweb:/ipfs/Qmd96VLaTzCbZEDAQ8BpHRL18i72tARVPQutkp85Gt6SNB"
        ],
        "license": "MIT"
      },
      "src/CoinFlip/CoinFlipHack.sol": {
        "keccak256": "0x42fd028ce09d5e4f57b0cec3442aac202887e3e2b9196f4c20c411ca6bf45aba",
        "urls": [
          "bzz-raw://63e1cf0861ff24b4ff6199389d73757d732a6419bc51163e732eb26ebe22b011",
          "dweb:/ipfs/QmXu9kNrj2J6pXv7G26RHVAarppQu2jmfirBX1anQBQCwj"
        ],
        "license": "MIT"
      },
      "src/Ethernaut.sol": {
        "keccak256": "0xdfd342f8053ad866770cc1a48c60e938dfa4a305c3b3fcdde1f60fd4fa7ad655",
        "urls": [
          "bzz-raw://28eabd1b8915a2615d24b7ed674f4a924f59ad7305ff481862d00382df3d0348",
          "dweb:/ipfs/QmPpaCPEZnCadgkzptPrD4hkaz6JuL5k5pS2TjaUCYAPZ6"
        ],
        "license": "MIT"
      },
      "test/CoinFlip.t.sol": {
        "keccak256": "0x6fa5623431b15a8c291967a4e81c2d99d6b66cdedab4bfc991b1f28ea4587113",
        "urls": [
          "bzz-raw://1c430a699051810f03bed935eadc327e9f8d7156fbdc9eea657dd6a9894e890f",
          "dweb:/ipfs/QmeZM72TzALU6j6RjgkUayCVJJgyjaXqroYdkjuYFxLzPe"
        ],
        "license": null
      },
      "test/utils/vm.sol": {
        "keccak256": "0xc34f4b14c4d624ca1d6dbe5434a8328de77817a089067d661ba1a657f46289cc",
        "urls": [
          "bzz-raw://a1dad3c6483f228f98c9e3c492a70277d9e9ef2f65f4153d6082f9b3acee4a7e",
          "dweb:/ipfs/QmXUrWED9yhK4C5LvWbYLEBexwqYgrxRzcefgdYYVB51xt"
        ],
        "license": "Unlicense"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/CoinFlip.t.sol",
    "id": 2648,
    "exportedSymbols": {
      "CoinFlip": [
        2237
      ],
      "CoinFlipFactory": [
        2287
      ],
      "CoinFlipHack": [
        2354
      ],
      "CoinFlipTest": [
        2647
      ],
      "Context": [
        1815
      ],
      "DSTest": [
        1680
      ],
      "Ethernaut": [
        2513
      ],
      "ICoinFlipChallenge": [
        2297
      ],
      "Level": [
        2149
      ],
      "Ownable": [
        1793
      ],
      "SafeMath": [
        2127
      ],
      "Vm": [
        2826
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:1842:9",
    "nodes": [
      {
        "id": 2515,
        "nodeType": "PragmaDirective",
        "src": "0:24:9",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 2516,
        "nodeType": "ImportDirective",
        "src": "26:26:9",
        "nodes": [],
        "absolutePath": "lib/ds-test/src/test.sol",
        "file": "ds-test/test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2648,
        "sourceUnit": 1681,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2517,
        "nodeType": "ImportDirective",
        "src": "53:42:9",
        "nodes": [],
        "absolutePath": "src/CoinFlip/CoinFlipHack.sol",
        "file": "../src/CoinFlip/CoinFlipHack.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2648,
        "sourceUnit": 2355,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2518,
        "nodeType": "ImportDirective",
        "src": "96:45:9",
        "nodes": [],
        "absolutePath": "src/CoinFlip/CoinFlipFactory.sol",
        "file": "../src/CoinFlip/CoinFlipFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2648,
        "sourceUnit": 2288,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2519,
        "nodeType": "ImportDirective",
        "src": "142:30:9",
        "nodes": [],
        "absolutePath": "src/Ethernaut.sol",
        "file": "../src/Ethernaut.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2648,
        "sourceUnit": 2514,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2520,
        "nodeType": "ImportDirective",
        "src": "173:24:9",
        "nodes": [],
        "absolutePath": "test/utils/vm.sol",
        "file": "./utils/vm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2648,
        "sourceUnit": 2827,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2647,
        "nodeType": "ContractDefinition",
        "src": "199:1642:9",
        "nodes": [
          {
            "id": 2531,
            "nodeType": "VariableDeclaration",
            "src": "237:63:9",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "vm",
            "nameLocation": "240:2:9",
            "scope": 2647,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Vm_$2826",
              "typeString": "contract Vm"
            },
            "typeName": {
              "id": 2524,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2523,
                "name": "Vm",
                "nameLocations": [
                  "237:2:9"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2826,
                "src": "237:2:9"
              },
              "referencedDeclaration": 2826,
              "src": "237:2:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$2826",
                "typeString": "contract Vm"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "307837313039373039454366613931613830363236664633393839443638663637463562314444313244",
                      "id": 2528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "256:42:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0x7109709ECfa91a80626fF3989D68f67F5b1DD12D"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    ],
                    "id": 2527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "248:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 2526,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "248:7:9",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 2529,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "248:51:9",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 2525,
                "name": "Vm",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 2826,
                "src": "245:2:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_Vm_$2826_$",
                  "typeString": "type(contract Vm)"
                }
              },
              "id": 2530,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "245:55:9",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$2826",
                "typeString": "contract Vm"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 2534,
            "nodeType": "VariableDeclaration",
            "src": "306:19:9",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "ethernaut",
            "nameLocation": "316:9:9",
            "scope": 2647,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Ethernaut_$2513",
              "typeString": "contract Ethernaut"
            },
            "typeName": {
              "id": 2533,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2532,
                "name": "Ethernaut",
                "nameLocations": [
                  "306:9:9"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2513,
                "src": "306:9:9"
              },
              "referencedDeclaration": 2513,
              "src": "306:9:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ethernaut_$2513",
                "typeString": "contract Ethernaut"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 2545,
            "nodeType": "FunctionDefinition",
            "src": "332:121:9",
            "nodes": [],
            "body": {
              "id": 2544,
              "nodeType": "Block",
              "src": "356:97:9",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 2542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2537,
                      "name": "ethernaut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2534,
                      "src": "419:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Ethernaut_$2513",
                        "typeString": "contract Ethernaut"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "431:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Ethernaut_$2513_$",
                          "typeString": "function () returns (contract Ethernaut)"
                        },
                        "typeName": {
                          "id": 2539,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2538,
                            "name": "Ethernaut",
                            "nameLocations": [
                              "435:9:9"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2513,
                            "src": "435:9:9"
                          },
                          "referencedDeclaration": 2513,
                          "src": "435:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Ethernaut_$2513",
                            "typeString": "contract Ethernaut"
                          }
                        }
                      },
                      "id": 2541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "431:15:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Ethernaut_$2513",
                        "typeString": "contract Ethernaut"
                      }
                    },
                    "src": "419:27:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Ethernaut_$2513",
                      "typeString": "contract Ethernaut"
                    }
                  },
                  "id": 2543,
                  "nodeType": "ExpressionStatement",
                  "src": "419:27:9"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "341:5:9",
            "parameters": {
              "id": 2535,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "346:2:9"
            },
            "returnParameters": {
              "id": 2536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "356:0:9"
            },
            "scope": 2647,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2646,
            "nodeType": "FunctionDefinition",
            "src": "459:1380:9",
            "nodes": [],
            "body": {
              "id": 2645,
              "nodeType": "Block",
              "src": "494:1345:9",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    2550
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2550,
                      "mutability": "mutable",
                      "name": "coinFlipFactory",
                      "nameLocation": "599:15:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2645,
                      "src": "583:31:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CoinFlipFactory_$2287",
                        "typeString": "contract CoinFlipFactory"
                      },
                      "typeName": {
                        "id": 2549,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2548,
                          "name": "CoinFlipFactory",
                          "nameLocations": [
                            "583:15:9"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2287,
                          "src": "583:15:9"
                        },
                        "referencedDeclaration": 2287,
                        "src": "583:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CoinFlipFactory_$2287",
                          "typeString": "contract CoinFlipFactory"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2555,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "617:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_CoinFlipFactory_$2287_$",
                        "typeString": "function () returns (contract CoinFlipFactory)"
                      },
                      "typeName": {
                        "id": 2552,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2551,
                          "name": "CoinFlipFactory",
                          "nameLocations": [
                            "621:15:9"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2287,
                          "src": "621:15:9"
                        },
                        "referencedDeclaration": 2287,
                        "src": "621:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CoinFlipFactory_$2287",
                          "typeString": "contract CoinFlipFactory"
                        }
                      }
                    },
                    "id": 2554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "617:21:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CoinFlipFactory_$2287",
                      "typeString": "contract CoinFlipFactory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "583:55:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2559,
                        "name": "coinFlipFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2550,
                        "src": "672:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CoinFlipFactory_$2287",
                          "typeString": "contract CoinFlipFactory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CoinFlipFactory_$2287",
                          "typeString": "contract CoinFlipFactory"
                        }
                      ],
                      "expression": {
                        "id": 2556,
                        "name": "ethernaut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2534,
                        "src": "648:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ethernaut_$2513",
                          "typeString": "contract Ethernaut"
                        }
                      },
                      "id": 2558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "658:13:9",
                      "memberName": "registerLevel",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2382,
                      "src": "648:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Level_$2149_$returns$__$",
                        "typeString": "function (contract Level) external"
                      }
                    },
                    "id": 2560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "648:40:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2561,
                  "nodeType": "ExpressionStatement",
                  "src": "648:40:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2565,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "712:2:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 2566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "715:6:9",
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "712:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2562,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2531,
                        "src": "698:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$2826",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 2564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "701:10:9",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2721,
                      "src": "698:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 2567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "698:24:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2568,
                  "nodeType": "ExpressionStatement",
                  "src": "698:24:9"
                },
                {
                  "assignments": [
                    2570
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2570,
                      "mutability": "mutable",
                      "name": "levelAddress",
                      "nameLocation": "740:12:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2645,
                      "src": "732:20:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2569,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "732:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2575,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2573,
                        "name": "coinFlipFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2550,
                        "src": "785:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CoinFlipFactory_$2287",
                          "typeString": "contract CoinFlipFactory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CoinFlipFactory_$2287",
                          "typeString": "contract CoinFlipFactory"
                        }
                      ],
                      "expression": {
                        "id": 2571,
                        "name": "ethernaut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2534,
                        "src": "755:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ethernaut_$2513",
                          "typeString": "contract Ethernaut"
                        }
                      },
                      "id": 2572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "765:19:9",
                      "memberName": "createLevelInstance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2456,
                      "src": "755:29:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_contract$_Level_$2149_$returns$_t_address_$",
                        "typeString": "function (contract Level) payable external returns (address)"
                      }
                    },
                    "id": 2574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "755:46:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "732:69:9"
                },
                {
                  "assignments": [
                    2578
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2578,
                      "mutability": "mutable",
                      "name": "ethernautCoinFlip",
                      "nameLocation": "820:17:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2645,
                      "src": "811:26:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CoinFlip_$2237",
                        "typeString": "contract CoinFlip"
                      },
                      "typeName": {
                        "id": 2577,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2576,
                          "name": "CoinFlip",
                          "nameLocations": [
                            "811:8:9"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2237,
                          "src": "811:8:9"
                        },
                        "referencedDeclaration": 2237,
                        "src": "811:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CoinFlip_$2237",
                          "typeString": "contract CoinFlip"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2585,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2582,
                            "name": "levelAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2570,
                            "src": "857:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "849:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 2580,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "849:8:9",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "849:21:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2579,
                      "name": "CoinFlip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2237,
                      "src": "840:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_CoinFlip_$2237_$",
                        "typeString": "type(contract CoinFlip)"
                      }
                    },
                    "id": 2584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "840:31:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CoinFlip_$2237",
                      "typeString": "contract CoinFlip"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "811:60:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "35",
                        "id": 2589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1038:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "expression": {
                        "id": 2586,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2531,
                        "src": "1030:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$2826",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 2588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1033:4:9",
                      "memberName": "roll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2660,
                      "src": "1030:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1030:10:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2591,
                  "nodeType": "ExpressionStatement",
                  "src": "1030:10:9"
                },
                {
                  "assignments": [
                    2594
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2594,
                      "mutability": "mutable",
                      "name": "coinFlipHack",
                      "nameLocation": "1104:12:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2645,
                      "src": "1091:25:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CoinFlipHack_$2354",
                        "typeString": "contract CoinFlipHack"
                      },
                      "typeName": {
                        "id": 2593,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2592,
                          "name": "CoinFlipHack",
                          "nameLocations": [
                            "1091:12:9"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2354,
                          "src": "1091:12:9"
                        },
                        "referencedDeclaration": 2354,
                        "src": "1091:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CoinFlipHack_$2354",
                          "typeString": "contract CoinFlipHack"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2600,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2598,
                        "name": "levelAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2570,
                        "src": "1136:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1119:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_CoinFlipHack_$2354_$",
                        "typeString": "function (address) returns (contract CoinFlipHack)"
                      },
                      "typeName": {
                        "id": 2596,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2595,
                          "name": "CoinFlipHack",
                          "nameLocations": [
                            "1123:12:9"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2354,
                          "src": "1123:12:9"
                        },
                        "referencedDeclaration": 2354,
                        "src": "1123:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CoinFlipHack_$2354",
                          "typeString": "contract CoinFlipHack"
                        }
                      }
                    },
                    "id": 2599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1119:30:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CoinFlipHack_$2354",
                      "typeString": "contract CoinFlipHack"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1091:58:9"
                },
                {
                  "body": {
                    "id": 2624,
                    "nodeType": "Block",
                    "src": "1302:256:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "36",
                                "id": 2614,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1506:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 2615,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2602,
                                "src": "1510:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1506:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2611,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2531,
                              "src": "1498:2:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$2826",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 2613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1501:4:9",
                            "memberName": "roll",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2660,
                            "src": "1498:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 2617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1498:14:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2618,
                        "nodeType": "ExpressionStatement",
                        "src": "1498:14:9"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2619,
                              "name": "coinFlipHack",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2594,
                              "src": "1526:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CoinFlipHack_$2354",
                                "typeString": "contract CoinFlipHack"
                              }
                            },
                            "id": 2621,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1539:6:9",
                            "memberName": "attack",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2349,
                            "src": "1526:19:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 2622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1526:21:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2623,
                        "nodeType": "ExpressionStatement",
                        "src": "1526:21:9"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2605,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2602,
                      "src": "1288:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "3130",
                      "id": 2606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1293:2:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "1288:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2625,
                  "initializationExpression": {
                    "assignments": [
                      2602
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2602,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1281:1:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2625,
                        "src": "1273:9:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2601,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1273:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2604,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1285:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1273:13:9"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1297:3:9",
                      "subExpression": {
                        "id": 2608,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2602,
                        "src": "1297:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2610,
                    "nodeType": "ExpressionStatement",
                    "src": "1297:3:9"
                  },
                  "nodeType": "ForStatement",
                  "src": "1268:290:9"
                },
                {
                  "assignments": [
                    2627
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2627,
                      "mutability": "mutable",
                      "name": "levelSuccessfullyPassed",
                      "nameLocation": "1667:23:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2645,
                      "src": "1662:28:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2626,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1662:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2635,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2632,
                            "name": "levelAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2570,
                            "src": "1744:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1736:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 2630,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1736:8:9",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1736:21:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 2628,
                        "name": "ethernaut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2534,
                        "src": "1693:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ethernaut_$2513",
                          "typeString": "contract Ethernaut"
                        }
                      },
                      "id": 2629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1703:19:9",
                      "memberName": "submitLevelInstance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2512,
                      "src": "1693:29:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$_t_bool_$",
                        "typeString": "function (address payable) external returns (bool)"
                      }
                    },
                    "id": 2634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1693:74:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1662:105:9"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2636,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2531,
                        "src": "1777:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$2826",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 2638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1780:9:9",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2738,
                      "src": "1777:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 2639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1777:14:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2640,
                  "nodeType": "ExpressionStatement",
                  "src": "1777:14:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2642,
                        "name": "levelSuccessfullyPassed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2627,
                        "src": "1808:23:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2641,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1801:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1801:31:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2644,
                  "nodeType": "ExpressionStatement",
                  "src": "1801:31:9"
                }
              ]
            },
            "functionSelector": "51c3b4f1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCoinFlipHack",
            "nameLocation": "468:16:9",
            "parameters": {
              "id": 2546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "484:2:9"
            },
            "returnParameters": {
              "id": 2547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "494:0:9"
            },
            "scope": 2647,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2521,
              "name": "DSTest",
              "nameLocations": [
                "224:6:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1680,
              "src": "224:6:9"
            },
            "id": 2522,
            "nodeType": "InheritanceSpecifier",
            "src": "224:6:9"
          }
        ],
        "canonicalName": "CoinFlipTest",
        "contractDependencies": [
          2287,
          2354,
          2513
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          2647,
          1680
        ],
        "name": "CoinFlipTest",
        "nameLocation": "208:12:9",
        "scope": 2648,
        "usedErrors": []
      }
    ]
  },
  "id": 9
}