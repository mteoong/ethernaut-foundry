{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCoinFlipHack",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805460ff1916600117905534801561001d57600080fd5b506114aa8061002d6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630a9254e41461005157806351c3b4f11461005b578063ba414fa614610063578063fa7626d414610089575b600080fd5b610059610096565b005b6100596100e1565b60005461007590610100900460ff1681565b604051901515815260200160405180910390f35b6000546100759060ff1681565b6040516100a2906104d0565b604051809103906000f0801580156100be573d6000803e3d6000fd5b50601380546001600160a01b0319166001600160a01b0392909216919091179055565b60006040516100ef906104dd565b604051809103906000f08015801561010b573d6000803e3d6000fd5b5060135460405163080808f560e21b81526001600160a01b03808416600483015292935091169063202023d490602401600060405180830381600087803b15801561015557600080fd5b505af1158015610169573d6000803e3d6000fd5b50506040516303223eab60e11b8152326004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d92506306447d569150602401600060405180830381600087803b1580156101b957600080fd5b505af11580156101cd573d6000803e3d6000fd5b505060135460405163dfc86b1760e01b81526001600160a01b03858116600483015260009450909116915063dfc86b17906024016020604051808303816000875af1158015610220573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024491906104f7565b6040516301f7b4f360e41b8152600560048201529091508190737109709ecfa91a80626ff3989d68f67f5b1dd12d90631f7b4f3090602401600060405180830381600087803b15801561029657600080fd5b505af11580156102aa573d6000803e3d6000fd5b505050506000826040516102bd906104ea565b6001600160a01b039091168152602001604051809103906000f0801580156102e9573d6000803e3d6000fd5b50905060005b600a81116103d257737109709ecfa91a80626ff3989d68f67f5b1dd12d631f7b4f3061031c83600661053d565b6040518263ffffffff1660e01b815260040161033a91815260200190565b600060405180830381600087803b15801561035457600080fd5b505af1158015610368573d6000803e3d6000fd5b50505050816001600160a01b0316639e5faafc6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156103a757600080fd5b505af11580156103bb573d6000803e3d6000fd5b5050505080806103ca90610556565b9150506102ef565b506013546040516364416be160e11b81526001600160a01b038581166004830152600092169063c882d7c2906024016020604051808303816000875af1158015610420573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610444919061056f565b90507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156104a457600080fd5b505af11580156104b8573d6000803e3d6000fd5b50505050806104c9576104c9610591565b5050505050565b610633806105a883390190565b61064380610bdb83390190565b6102578061121e83390190565b60006020828403121561050957600080fd5b81516001600160a01b038116811461052057600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561055057610550610527565b92915050565b60006001820161056857610568610527565b5060010190565b60006020828403121561058157600080fd5b8151801515811461052057600080fd5b634e487b7160e01b600052600160045260246000fdfe608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105b58061007e6000396000f3fe6080604052600436106100555760003560e01c8063202023d41461005a578063715018a61461007c5780638da5cb5b14610091578063c882d7c2146100c8578063dfc86b17146100f8578063f2fde38b1461010b575b600080fd5b34801561006657600080fd5b5061007a61007536600461051c565b61012b565b005b34801561008857600080fd5b5061007a61015a565b34801561009d57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100d457600080fd5b506100e86100e336600461051c565b61016e565b60405190151581526020016100bf565b6100ab61010636600461051c565b610297565b34801561011757600080fd5b5061007a61012636600461051c565b6103df565b61013361045d565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b61016261045d565b61016c60006104b7565b565b6001600160a01b03808216600090815260026020526040812080549192909116331461019957600080fd5b6001810154600160a01b900460ff16156101b257600080fd5b600181015460405163d38def5b60e01b81526001600160a01b0385811660048301523360248301529091169063d38def5b906044016020604051808303816000875af1158015610206573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022a9190610540565b1561028e57600181018054600160a01b60ff60a01b198216179091556040516001600160a01b03909116815233907f9dfdf7e3e630f506a3dfe38cdbe34e196353364235df33e5a3b588488d9a1e789060200160405180910390a250600192915050565b50600092915050565b6001600160a01b03811660009081526001602052604081205460ff166102bc57600080fd5b604051633b937bbb60e11b81523360048201526000906001600160a01b03841690637726f77690349060240160206040518083038185885af1158015610306573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061032b9190610562565b60408051606081018252338082526001600160a01b03878116602080850191825260008587018181528885168083526002845291889020965187549086166001600160a01b031990911617875592516001909601805493511515600160a01b026001600160a81b031990941696909416959095179190911790915592519182529293507f7bf7f1ed7f75e83b76de0ff139966989aff81cb85aac26469c18978d86aac1c2910160405180910390a292915050565b6103e761045d565b6001600160a01b0381166104515760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61045a816104b7565b50565b6000546001600160a01b0316331461016c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610448565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461045a57600080fd5b60006020828403121561052e57600080fd5b813561053981610507565b9392505050565b60006020828403121561055257600080fd5b8151801515811461053957600080fd5b60006020828403121561057457600080fd5b81516105398161050756fea264697066735822122006f19a4484583f66f5689044bca9380e34b5e41445b771070b1fafa86e60f5e964736f6c63430008110033608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105c58061007e6000396000f3fe60806040526004361061004a5760003560e01c8063715018a61461004f5780637726f776146100665780638da5cb5b14610096578063d38def5b146100b4578063f2fde38b146100e4575b600080fd5b34801561005b57600080fd5b50610064610104565b005b610079610074366004610307565b610118565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100a257600080fd5b506000546001600160a01b0316610079565b3480156100c057600080fd5b506100d46100cf36600461032b565b610149565b604051901515815260200161008d565b3480156100f057600080fd5b506100646100ff366004610307565b6101bd565b61010c61023b565b6101166000610295565b565b6000604051610126906102e5565b604051809103906000f080158015610142573d6000803e3d6000fd5b5092915050565b600080839050600a816001600160a01b031663e6f334d76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561018f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b39190610364565b1015949350505050565b6101c561023b565b6001600160a01b03811661022f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61023881610295565b50565b6000546001600160a01b031633146101165760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610226565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6102128061037e83390190565b6001600160a01b038116811461023857600080fd5b60006020828403121561031957600080fd5b8135610324816102f2565b9392505050565b6000806040838503121561033e57600080fd5b8235610349816102f2565b91506020830135610359816102f2565b809150509250929050565b60006020828403121561037657600080fd5b505191905056fe6080604052600160ff1b60025534801561001857600080fd5b50600080556101e68061002c6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631d263f671461003b578063e6f334d714610063575b600080fd5b61004e610049366004610123565b61007a565b60405190151581526020015b60405180910390f35b61006c60005481565b60405190815260200161005a565b600080610088436001610102565b4060001c9050806001540361009c57600080fd5b60018190556002546000906100b2908390610117565b90506000816001146100c55760006100c8565b60015b9050841515811515036100f4576000805490806100e483610162565b9091555060019695505050505050565b505060008080559392505050565b600061010e828461017b565b90505b92915050565b600061010e828461018e565b60006020828403121561013557600080fd5b8135801515811461014557600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b6000600182016101745761017461014c565b5060010190565b818103818111156101115761011161014c565b6000826101ab57634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212204b950f9a76344a2ebb2c524e0a63d35150baf11c1fa90e5408b511ad4f5ed66e64736f6c63430008110033a2646970667358221220af41fa8b7cb6b27607df29d6cd942acc8a32200bd67b4a5b575e814577b4134b64736f6c63430008110033608060405234801561001057600080fd5b5060405161025738038061025783398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6101c4806100936000396000f3fe6080604052600436106100295760003560e01c80639e5faafc1461002b578063d2ef739814610033575b005b61002961006f565b34801561003f57600080fd5b50600054610053906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b600061007c60014361011c565b409050600061008f600160ff1b83610143565b90506000816001146100a25760006100a5565b60015b600054604051631d263f6760e01b815282151560048201529192506001600160a01b031690631d263f67906024016020604051808303816000875af11580156100f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101169190610165565b50505050565b8181038181111561013d57634e487b7160e01b600052601160045260246000fd5b92915050565b60008261016057634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561017757600080fd5b8151801515811461018757600080fd5b939250505056fea264697066735822122014019958cf9b6ee3663d2e2fb4d510ae846b1c00447b5f5a978b79824df819b864736f6c63430008110033a26469706673582212209d7c4c7023ca38298ea07e68ce4151e4112dda79e20cfc2399911d0ebc3c980b64736f6c63430008110033",
    "sourceMap": "176:1571:88:-:0;;;1573:26:0;;;-1:-1:-1;;1573:26:0;1595:4;1573:26;;;176:1571:88;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80630a9254e41461005157806351c3b4f11461005b578063ba414fa614610063578063fa7626d414610089575b600080fd5b610059610096565b005b6100596100e1565b60005461007590610100900460ff1681565b604051901515815260200160405180910390f35b6000546100759060ff1681565b6040516100a2906104d0565b604051809103906000f0801580156100be573d6000803e3d6000fd5b50601380546001600160a01b0319166001600160a01b0392909216919091179055565b60006040516100ef906104dd565b604051809103906000f08015801561010b573d6000803e3d6000fd5b5060135460405163080808f560e21b81526001600160a01b03808416600483015292935091169063202023d490602401600060405180830381600087803b15801561015557600080fd5b505af1158015610169573d6000803e3d6000fd5b50506040516303223eab60e11b8152326004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d92506306447d569150602401600060405180830381600087803b1580156101b957600080fd5b505af11580156101cd573d6000803e3d6000fd5b505060135460405163dfc86b1760e01b81526001600160a01b03858116600483015260009450909116915063dfc86b17906024016020604051808303816000875af1158015610220573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024491906104f7565b6040516301f7b4f360e41b8152600560048201529091508190737109709ecfa91a80626ff3989d68f67f5b1dd12d90631f7b4f3090602401600060405180830381600087803b15801561029657600080fd5b505af11580156102aa573d6000803e3d6000fd5b505050506000826040516102bd906104ea565b6001600160a01b039091168152602001604051809103906000f0801580156102e9573d6000803e3d6000fd5b50905060005b600a81116103d257737109709ecfa91a80626ff3989d68f67f5b1dd12d631f7b4f3061031c83600661053d565b6040518263ffffffff1660e01b815260040161033a91815260200190565b600060405180830381600087803b15801561035457600080fd5b505af1158015610368573d6000803e3d6000fd5b50505050816001600160a01b0316639e5faafc6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156103a757600080fd5b505af11580156103bb573d6000803e3d6000fd5b5050505080806103ca90610556565b9150506102ef565b506013546040516364416be160e11b81526001600160a01b038581166004830152600092169063c882d7c2906024016020604051808303816000875af1158015610420573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610444919061056f565b90507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156104a457600080fd5b505af11580156104b8573d6000803e3d6000fd5b50505050806104c9576104c9610591565b5050505050565b610633806105a883390190565b61064380610bdb83390190565b6102578061121e83390190565b60006020828403121561050957600080fd5b81516001600160a01b038116811461052057600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561055057610550610527565b92915050565b60006001820161056857610568610527565b5060010190565b60006020828403121561058157600080fd5b8151801515811461052057600080fd5b634e487b7160e01b600052600160045260246000fdfe608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105b58061007e6000396000f3fe6080604052600436106100555760003560e01c8063202023d41461005a578063715018a61461007c5780638da5cb5b14610091578063c882d7c2146100c8578063dfc86b17146100f8578063f2fde38b1461010b575b600080fd5b34801561006657600080fd5b5061007a61007536600461051c565b61012b565b005b34801561008857600080fd5b5061007a61015a565b34801561009d57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100d457600080fd5b506100e86100e336600461051c565b61016e565b60405190151581526020016100bf565b6100ab61010636600461051c565b610297565b34801561011757600080fd5b5061007a61012636600461051c565b6103df565b61013361045d565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b61016261045d565b61016c60006104b7565b565b6001600160a01b03808216600090815260026020526040812080549192909116331461019957600080fd5b6001810154600160a01b900460ff16156101b257600080fd5b600181015460405163d38def5b60e01b81526001600160a01b0385811660048301523360248301529091169063d38def5b906044016020604051808303816000875af1158015610206573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022a9190610540565b1561028e57600181018054600160a01b60ff60a01b198216179091556040516001600160a01b03909116815233907f9dfdf7e3e630f506a3dfe38cdbe34e196353364235df33e5a3b588488d9a1e789060200160405180910390a250600192915050565b50600092915050565b6001600160a01b03811660009081526001602052604081205460ff166102bc57600080fd5b604051633b937bbb60e11b81523360048201526000906001600160a01b03841690637726f77690349060240160206040518083038185885af1158015610306573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061032b9190610562565b60408051606081018252338082526001600160a01b03878116602080850191825260008587018181528885168083526002845291889020965187549086166001600160a01b031990911617875592516001909601805493511515600160a01b026001600160a81b031990941696909416959095179190911790915592519182529293507f7bf7f1ed7f75e83b76de0ff139966989aff81cb85aac26469c18978d86aac1c2910160405180910390a292915050565b6103e761045d565b6001600160a01b0381166104515760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61045a816104b7565b50565b6000546001600160a01b0316331461016c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610448565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461045a57600080fd5b60006020828403121561052e57600080fd5b813561053981610507565b9392505050565b60006020828403121561055257600080fd5b8151801515811461053957600080fd5b60006020828403121561057457600080fd5b81516105398161050756fea264697066735822122006f19a4484583f66f5689044bca9380e34b5e41445b771070b1fafa86e60f5e964736f6c63430008110033608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105c58061007e6000396000f3fe60806040526004361061004a5760003560e01c8063715018a61461004f5780637726f776146100665780638da5cb5b14610096578063d38def5b146100b4578063f2fde38b146100e4575b600080fd5b34801561005b57600080fd5b50610064610104565b005b610079610074366004610307565b610118565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100a257600080fd5b506000546001600160a01b0316610079565b3480156100c057600080fd5b506100d46100cf36600461032b565b610149565b604051901515815260200161008d565b3480156100f057600080fd5b506100646100ff366004610307565b6101bd565b61010c61023b565b6101166000610295565b565b6000604051610126906102e5565b604051809103906000f080158015610142573d6000803e3d6000fd5b5092915050565b600080839050600a816001600160a01b031663e6f334d76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561018f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b39190610364565b1015949350505050565b6101c561023b565b6001600160a01b03811661022f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61023881610295565b50565b6000546001600160a01b031633146101165760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610226565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6102128061037e83390190565b6001600160a01b038116811461023857600080fd5b60006020828403121561031957600080fd5b8135610324816102f2565b9392505050565b6000806040838503121561033e57600080fd5b8235610349816102f2565b91506020830135610359816102f2565b809150509250929050565b60006020828403121561037657600080fd5b505191905056fe6080604052600160ff1b60025534801561001857600080fd5b50600080556101e68061002c6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631d263f671461003b578063e6f334d714610063575b600080fd5b61004e610049366004610123565b61007a565b60405190151581526020015b60405180910390f35b61006c60005481565b60405190815260200161005a565b600080610088436001610102565b4060001c9050806001540361009c57600080fd5b60018190556002546000906100b2908390610117565b90506000816001146100c55760006100c8565b60015b9050841515811515036100f4576000805490806100e483610162565b9091555060019695505050505050565b505060008080559392505050565b600061010e828461017b565b90505b92915050565b600061010e828461018e565b60006020828403121561013557600080fd5b8135801515811461014557600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b6000600182016101745761017461014c565b5060010190565b818103818111156101115761011161014c565b6000826101ab57634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212204b950f9a76344a2ebb2c524e0a63d35150baf11c1fa90e5408b511ad4f5ed66e64736f6c63430008110033a2646970667358221220af41fa8b7cb6b27607df29d6cd942acc8a32200bd67b4a5b575e814577b4134b64736f6c63430008110033608060405234801561001057600080fd5b5060405161025738038061025783398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6101c4806100936000396000f3fe6080604052600436106100295760003560e01c80639e5faafc1461002b578063d2ef739814610033575b005b61002961006f565b34801561003f57600080fd5b50600054610053906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b600061007c60014361011c565b409050600061008f600160ff1b83610143565b90506000816001146100a25760006100a5565b60015b600054604051631d263f6760e01b815282151560048201529192506001600160a01b031690631d263f67906024016020604051808303816000875af11580156100f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101169190610165565b50505050565b8181038181111561013d57634e487b7160e01b600052601160045260246000fd5b92915050565b60008261016057634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561017757600080fd5b8151801515811461018757600080fd5b939250505056fea264697066735822122014019958cf9b6ee3663d2e2fb4d510ae846b1c00447b5f5a978b79824df819b864736f6c63430008110033a26469706673582212209d7c4c7023ca38298ea07e68ce4151e4112dda79e20cfc2399911d0ebc3c980b64736f6c63430008110033",
    "sourceMap": "176:1571:88:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;238:121;;;:::i;:::-;;365:1380;;;:::i;1605:18:0:-;;;;;;;;;;;;;;;179:14:112;;172:22;154:41;;142:2;127:18;1605::0;;;;;;;1573:26;;;;;;;;;238:121:88;337:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;325:9:88;:27;;-1:-1:-1;;;;;;325:27:88;-1:-1:-1;;;;;325:27:88;;;;;;;;;;238:121::o;365:1380::-;489:31;523:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;554:9:88;;:40;;-1:-1:-1;;;554:40:88;;-1:-1:-1;;;;;395:32:112;;;554:40:88;;;377:51:112;489:55:88;;-1:-1:-1;554:9:88;;;:23;;350:18:112;;554:40:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;604:24:88;;-1:-1:-1;;;604:24:88;;618:9;604:24;;;377:51:112;604:13:88;;-1:-1:-1;604:13:88;;-1:-1:-1;350:18:112;;604:24:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;661:9:88;;:46;;-1:-1:-1;;;661:46:88;;-1:-1:-1;;;;;395:32:112;;;661:46:88;;;377:51:112;638:20:88;;-1:-1:-1;661:9:88;;;;-1:-1:-1;661:29:88;;350:18:112;;661:46:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:10;;-1:-1:-1;;;936:10:88;;944:1;936:10;;;1096:25:112;638:69:88;;-1:-1:-1;638:69:88;;936:7;;;;1069:18:112;;936:10:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;997:25;1042:12;1025:30;;;;;:::i;:::-;-1:-1:-1;;;;;395:32:112;;;377:51;;365:2;350:18;1025:30:88;;;;;;;;;;;;;;;;;;;;;;;997:58;;1179:9;1174:290;1199:2;1194:1;:7;1174:290;;1404:7;;1412:5;1416:1;1412;:5;:::i;:::-;1404:14;;;;;;;;;;;;;1096:25:112;;1084:2;1069:18;;942:185;1404:14:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1432:12;-1:-1:-1;;;;;1432:19:88;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1203:3;;;;;:::i;:::-;;;;1174:290;;;-1:-1:-1;1599:9:88;;:74;;-1:-1:-1;;;1599:74:88;;-1:-1:-1;;;;;395:32:112;;;1599:74:88;;;377:51:112;1568:28:88;;1599:9;;:29;;350:18:112;;1599:74:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1568:105;;317:28:1;309:37;;-1:-1:-1;;;;;1683:12:88;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1714:23;1707:31;;;;:::i;:::-;400:1345;;;;;365:1380::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;647:290:112:-;717:6;770:2;758:9;749:7;745:23;741:32;738:52;;;786:1;783;776:12;738:52;812:16;;-1:-1:-1;;;;;857:31:112;;847:42;;837:70;;903:1;900;893:12;837:70;926:5;647:290;-1:-1:-1;;;647:290:112:o;1132:127::-;1193:10;1188:3;1184:20;1181:1;1174:31;1224:4;1221:1;1214:15;1248:4;1245:1;1238:15;1264:125;1329:9;;;1350:10;;;1347:36;;;1363:18;;:::i;:::-;1264:125;;;;:::o;1576:135::-;1615:3;1636:17;;;1633:43;;1656:18;;:::i;:::-;-1:-1:-1;1703:1:112;1692:13;;1576:135::o;1940:277::-;2007:6;2060:2;2048:9;2039:7;2035:23;2031:32;2028:52;;;2076:1;2073;2066:12;2028:52;2108:9;2102:16;2161:5;2154:13;2147:21;2140:5;2137:32;2127:60;;2183:1;2180;2173:12;2222:127;2283:10;2278:3;2274:20;2271:1;2264:31;2314:4;2311:1;2304:15;2338:4;2335:1;2328:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testCoinFlipHack()": "51c3b4f1"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCoinFlipHack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/CoinFlip.t.sol\":\"CoinFlipTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/ds-test/src/test.sol\":{\"keccak256\":\"0x529f30c5939d75689f6a982f7f96b8898bed30bd90ec5b385b57cab681e12b00\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://89075d5a96e87acef1d00cf556b409d1836728ec2e92f5629ceb5cae3d1e4354\",\"dweb:/ipfs/QmPAViJrxffEDns9GEMVSAzmr3soAzfrEg1CVuovwmNfnt\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x7f6016716c0c6f49e8163af625290c7ef270a045d9b82be04e269035726d3213\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd050537b58640f8545b319928ee66bef9649d1ebd68a3afa1d28a1ce8cea3dd\",\"dweb:/ipfs/QmbBVxERnZ2ciQuRuZ45czd2DRgouCLEhibLWtC2CrH2j4\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x9d53fb0317c888ed0ef4a8476883d4304f5e7e6fa0161d84d18fa27a63875524\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9638e9a042f5b7695953ea394072f90b814ac98312e447f45c4f2f6cdb22c3ec\",\"dweb:/ipfs/QmPvKu8hyzB2og54Lecmb2DvEiAgM9o5UC2gGgRQJ42PQw\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xd9f9791f56c2afcd841237417d5a55fa8b69de2c1b528ddbfc7d7823fe136606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f66271850d38488984ec1e38aeb57df1cda53538b2ddd19e2164c767792905f0\",\"dweb:/ipfs/QmetNJMTfgJ7SCNMwfLrZEwnL3xdNaBY5vMiqrRrUWjjes\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x94d97a78c720a10212552c5f7f27c61ea58eb027bd51dd054efae6925e785269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://563fd7373c84d700606fc113d535b1a103e7bad4b0412e6cb515d927fb8f57bc\",\"dweb:/ipfs/QmQEjP2DXCXRC4bxXPonLfF8cq1UvMhdQu5X1JynPntvio\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x113bce4d6d0fe7c4e1e3bf2760ba21c075448660a8dae6003f27b9ff86890612\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c8a169ea47398b475696e66d07e354d9997680b5f954418caeeaec5427a131f\",\"dweb:/ipfs/QmSTK6XmjgYZ2CCGZ87AVTowNL3UWfRvqhT6DTbZoKyJzz\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xb31c4ee03d05c6202f6e354245ac3ab883d954f9f36074902089e1b3e645273d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bd98bde50b840b8d7d5cebf818176b9f219345078ed5d3bd0071f035efb2e3\",\"dweb:/ipfs/QmPYC7FZvCWCPF2qWg6TXXTTPGEdnT4y5nebPn1AoZ1H4p\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0xc3222299fd637498c81ab5c8e15c9327289d3708fb8a7063dd10a55a8813c9cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6f5f818e75e8ae5a67b58cff9b351dd790a72d0a5332fb6f425a3561801b6cc\",\"dweb:/ipfs/QmXJEPtMM1AzwCh6u1o1wL2xdi1qRyxsTLt1eVgeC8Y1QH\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xb7004fe1ceab4a20ae13baec8732a5414b28d5ddb06f9f4184b49c1fc1d61521\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a60b5d84bd7d7e455f4a1ca1d260f6b50c419e4c4e7196ef32fd77d0f480d51\",\"dweb:/ipfs/QmYwRMAYYsQuvvM4mnagYs8Zhqm5VXicXmxoqEvkiUzQSd\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd793ebfb854f707ccf9dfec320b3b75d0d73ba54af0dfae727862fe93bc1cfd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a0a39917aabf39d981b17d1a06c9b82377917c3a0eedce8e9dc00df5c096bf9\",\"dweb:/ipfs/Qme7GpiHd32FFKYNbY4vdhiiciWPV1z1Uwtj1KDQAusxki\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"src/BaseLevel.sol\":{\"keccak256\":\"0x96532046614f14ded4ed0582d37d1bfb6d8ce0423403094476ae9533323a5af8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b9e8bbc7f3c8d982885e58c27a2d063008abef55e70db5eae1358e3d5f7f5b0\",\"dweb:/ipfs/QmNpDPfDEeYYAdYM14p3ef3wgcgjNYjCqwXqKT6mVv8MK8\"]},\"src/CoinFlip/CoinFlip.sol\":{\"keccak256\":\"0x9a09e2516a54042e70ecfe1fd55e479aba953cccd7cdd87c99cc081078713c2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9121120c2fb0084fbc8dc9d41969cf5d73f51e215ab5bcc3c74327a53aad0ce1\",\"dweb:/ipfs/QmR5scFanCS79Lb8rbRXiipMsSyvUWnQccmgm3CNC4EhxX\"]},\"src/CoinFlip/CoinFlipFactory.sol\":{\"keccak256\":\"0x293ca12b23347007872d605b885c6daffcb2dcdcf208541cc1dced8efa3dbf84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26a3fe9cb188b9c2fa0bd2458f671cbecf73ad63495bfb4984c20c4d283e75e0\",\"dweb:/ipfs/Qmd96VLaTzCbZEDAQ8BpHRL18i72tARVPQutkp85Gt6SNB\"]},\"src/CoinFlip/CoinFlipHack.sol\":{\"keccak256\":\"0x42fd028ce09d5e4f57b0cec3442aac202887e3e2b9196f4c20c411ca6bf45aba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63e1cf0861ff24b4ff6199389d73757d732a6419bc51163e732eb26ebe22b011\",\"dweb:/ipfs/QmXu9kNrj2J6pXv7G26RHVAarppQu2jmfirBX1anQBQCwj\"]},\"src/Ethernaut.sol\":{\"keccak256\":\"0xdfd342f8053ad866770cc1a48c60e938dfa4a305c3b3fcdde1f60fd4fa7ad655\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28eabd1b8915a2615d24b7ed674f4a924f59ad7305ff481862d00382df3d0348\",\"dweb:/ipfs/QmPpaCPEZnCadgkzptPrD4hkaz6JuL5k5pS2TjaUCYAPZ6\"]},\"test/CoinFlip.t.sol\":{\"keccak256\":\"0x2b67c61ac7b2b771f4e3f600fa074105b8e4947741549ec79042a0d5b752ccc6\",\"urls\":[\"bzz-raw://2da09f78a359646e7fbd2e607314201c1fb8441b6f4baea84111199bdec71a96\",\"dweb:/ipfs/QmNoEZLUP5oU2ofMfAtKWJWehDPgdnjDMGoE2myCPBD6Rq\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCoinFlipHack"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/CoinFlip.t.sol": "CoinFlipTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/ds-test/src/test.sol": {
        "keccak256": "0x529f30c5939d75689f6a982f7f96b8898bed30bd90ec5b385b57cab681e12b00",
        "urls": [
          "bzz-raw://89075d5a96e87acef1d00cf556b409d1836728ec2e92f5629ceb5cae3d1e4354",
          "dweb:/ipfs/QmPAViJrxffEDns9GEMVSAzmr3soAzfrEg1CVuovwmNfnt"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x7f6016716c0c6f49e8163af625290c7ef270a045d9b82be04e269035726d3213",
        "urls": [
          "bzz-raw://bd050537b58640f8545b319928ee66bef9649d1ebd68a3afa1d28a1ce8cea3dd",
          "dweb:/ipfs/QmbBVxERnZ2ciQuRuZ45czd2DRgouCLEhibLWtC2CrH2j4"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x9d53fb0317c888ed0ef4a8476883d4304f5e7e6fa0161d84d18fa27a63875524",
        "urls": [
          "bzz-raw://9638e9a042f5b7695953ea394072f90b814ac98312e447f45c4f2f6cdb22c3ec",
          "dweb:/ipfs/QmPvKu8hyzB2og54Lecmb2DvEiAgM9o5UC2gGgRQJ42PQw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xd9f9791f56c2afcd841237417d5a55fa8b69de2c1b528ddbfc7d7823fe136606",
        "urls": [
          "bzz-raw://f66271850d38488984ec1e38aeb57df1cda53538b2ddd19e2164c767792905f0",
          "dweb:/ipfs/QmetNJMTfgJ7SCNMwfLrZEwnL3xdNaBY5vMiqrRrUWjjes"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x94d97a78c720a10212552c5f7f27c61ea58eb027bd51dd054efae6925e785269",
        "urls": [
          "bzz-raw://563fd7373c84d700606fc113d535b1a103e7bad4b0412e6cb515d927fb8f57bc",
          "dweb:/ipfs/QmQEjP2DXCXRC4bxXPonLfF8cq1UvMhdQu5X1JynPntvio"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x113bce4d6d0fe7c4e1e3bf2760ba21c075448660a8dae6003f27b9ff86890612",
        "urls": [
          "bzz-raw://8c8a169ea47398b475696e66d07e354d9997680b5f954418caeeaec5427a131f",
          "dweb:/ipfs/QmSTK6XmjgYZ2CCGZ87AVTowNL3UWfRvqhT6DTbZoKyJzz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xb31c4ee03d05c6202f6e354245ac3ab883d954f9f36074902089e1b3e645273d",
        "urls": [
          "bzz-raw://33bd98bde50b840b8d7d5cebf818176b9f219345078ed5d3bd0071f035efb2e3",
          "dweb:/ipfs/QmPYC7FZvCWCPF2qWg6TXXTTPGEdnT4y5nebPn1AoZ1H4p"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0xc3222299fd637498c81ab5c8e15c9327289d3708fb8a7063dd10a55a8813c9cf",
        "urls": [
          "bzz-raw://b6f5f818e75e8ae5a67b58cff9b351dd790a72d0a5332fb6f425a3561801b6cc",
          "dweb:/ipfs/QmXJEPtMM1AzwCh6u1o1wL2xdi1qRyxsTLt1eVgeC8Y1QH"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xb7004fe1ceab4a20ae13baec8732a5414b28d5ddb06f9f4184b49c1fc1d61521",
        "urls": [
          "bzz-raw://5a60b5d84bd7d7e455f4a1ca1d260f6b50c419e4c4e7196ef32fd77d0f480d51",
          "dweb:/ipfs/QmYwRMAYYsQuvvM4mnagYs8Zhqm5VXicXmxoqEvkiUzQSd"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xfd793ebfb854f707ccf9dfec320b3b75d0d73ba54af0dfae727862fe93bc1cfd",
        "urls": [
          "bzz-raw://9a0a39917aabf39d981b17d1a06c9b82377917c3a0eedce8e9dc00df5c096bf9",
          "dweb:/ipfs/Qme7GpiHd32FFKYNbY4vdhiiciWPV1z1Uwtj1KDQAusxki"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e",
        "urls": [
          "bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65",
          "dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN"
        ],
        "license": "MIT"
      },
      "src/BaseLevel.sol": {
        "keccak256": "0x96532046614f14ded4ed0582d37d1bfb6d8ce0423403094476ae9533323a5af8",
        "urls": [
          "bzz-raw://9b9e8bbc7f3c8d982885e58c27a2d063008abef55e70db5eae1358e3d5f7f5b0",
          "dweb:/ipfs/QmNpDPfDEeYYAdYM14p3ef3wgcgjNYjCqwXqKT6mVv8MK8"
        ],
        "license": "MIT"
      },
      "src/CoinFlip/CoinFlip.sol": {
        "keccak256": "0x9a09e2516a54042e70ecfe1fd55e479aba953cccd7cdd87c99cc081078713c2a",
        "urls": [
          "bzz-raw://9121120c2fb0084fbc8dc9d41969cf5d73f51e215ab5bcc3c74327a53aad0ce1",
          "dweb:/ipfs/QmR5scFanCS79Lb8rbRXiipMsSyvUWnQccmgm3CNC4EhxX"
        ],
        "license": "MIT"
      },
      "src/CoinFlip/CoinFlipFactory.sol": {
        "keccak256": "0x293ca12b23347007872d605b885c6daffcb2dcdcf208541cc1dced8efa3dbf84",
        "urls": [
          "bzz-raw://26a3fe9cb188b9c2fa0bd2458f671cbecf73ad63495bfb4984c20c4d283e75e0",
          "dweb:/ipfs/Qmd96VLaTzCbZEDAQ8BpHRL18i72tARVPQutkp85Gt6SNB"
        ],
        "license": "MIT"
      },
      "src/CoinFlip/CoinFlipHack.sol": {
        "keccak256": "0x42fd028ce09d5e4f57b0cec3442aac202887e3e2b9196f4c20c411ca6bf45aba",
        "urls": [
          "bzz-raw://63e1cf0861ff24b4ff6199389d73757d732a6419bc51163e732eb26ebe22b011",
          "dweb:/ipfs/QmXu9kNrj2J6pXv7G26RHVAarppQu2jmfirBX1anQBQCwj"
        ],
        "license": "MIT"
      },
      "src/Ethernaut.sol": {
        "keccak256": "0xdfd342f8053ad866770cc1a48c60e938dfa4a305c3b3fcdde1f60fd4fa7ad655",
        "urls": [
          "bzz-raw://28eabd1b8915a2615d24b7ed674f4a924f59ad7305ff481862d00382df3d0348",
          "dweb:/ipfs/QmPpaCPEZnCadgkzptPrD4hkaz6JuL5k5pS2TjaUCYAPZ6"
        ],
        "license": "MIT"
      },
      "test/CoinFlip.t.sol": {
        "keccak256": "0x2b67c61ac7b2b771f4e3f600fa074105b8e4947741549ec79042a0d5b752ccc6",
        "urls": [
          "bzz-raw://2da09f78a359646e7fbd2e607314201c1fb8441b6f4baea84111199bdec71a96",
          "dweb:/ipfs/QmNoEZLUP5oU2ofMfAtKWJWehDPgdnjDMGoE2myCPBD6Rq"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/CoinFlip.t.sol",
    "id": 33147,
    "exportedSymbols": {
      "CoinFlip": [
        27115
      ],
      "CoinFlipFactory": [
        27165
      ],
      "CoinFlipHack": [
        27232
      ],
      "CoinFlipTest": [
        33146
      ],
      "Context": [
        26693
      ],
      "DSTest": [
        1680
      ],
      "Ethernaut": [
        28992
      ],
      "ICoinFlipChallenge": [
        27175
      ],
      "Level": [
        27027
      ],
      "Ownable": [
        25482
      ],
      "SafeMath": [
        27005
      ],
      "StdAssertions": [
        2565
      ],
      "StdChains": [
        3101
      ],
      "StdCheats": [
        5038
      ],
      "StdStorage": [
        5945
      ],
      "StdUtils": [
        8010
      ],
      "Test": [
        8052
      ],
      "TestBase": [
        1737
      ],
      "Vm": [
        9209
      ],
      "console": [
        17273
      ],
      "console2": [
        25369
      ],
      "stdError": [
        5104
      ],
      "stdJson": [
        5771
      ],
      "stdMath": [
        5913
      ],
      "stdStorage": [
        7379
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:1748:88",
    "nodes": [
      {
        "id": 33024,
        "nodeType": "PragmaDirective",
        "src": "0:24:88",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 33025,
        "nodeType": "ImportDirective",
        "src": "26:28:88",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33147,
        "sourceUnit": 8053,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33026,
        "nodeType": "ImportDirective",
        "src": "55:42:88",
        "nodes": [],
        "absolutePath": "src/CoinFlip/CoinFlipHack.sol",
        "file": "../src/CoinFlip/CoinFlipHack.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33147,
        "sourceUnit": 27233,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33027,
        "nodeType": "ImportDirective",
        "src": "98:45:88",
        "nodes": [],
        "absolutePath": "src/CoinFlip/CoinFlipFactory.sol",
        "file": "../src/CoinFlip/CoinFlipFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33147,
        "sourceUnit": 27166,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33028,
        "nodeType": "ImportDirective",
        "src": "144:30:88",
        "nodes": [],
        "absolutePath": "src/Ethernaut.sol",
        "file": "../src/Ethernaut.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33147,
        "sourceUnit": 28993,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33146,
        "nodeType": "ContractDefinition",
        "src": "176:1571:88",
        "nodes": [
          {
            "id": 33033,
            "nodeType": "VariableDeclaration",
            "src": "212:19:88",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "ethernaut",
            "nameLocation": "222:9:88",
            "scope": 33146,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Ethernaut_$28992",
              "typeString": "contract Ethernaut"
            },
            "typeName": {
              "id": 33032,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33031,
                "name": "Ethernaut",
                "nameLocations": [
                  "212:9:88"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28992,
                "src": "212:9:88"
              },
              "referencedDeclaration": 28992,
              "src": "212:9:88",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ethernaut_$28992",
                "typeString": "contract Ethernaut"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 33044,
            "nodeType": "FunctionDefinition",
            "src": "238:121:88",
            "nodes": [],
            "body": {
              "id": 33043,
              "nodeType": "Block",
              "src": "262:97:88",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 33041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33036,
                      "name": "ethernaut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33033,
                      "src": "325:9:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Ethernaut_$28992",
                        "typeString": "contract Ethernaut"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 33039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "337:13:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Ethernaut_$28992_$",
                          "typeString": "function () returns (contract Ethernaut)"
                        },
                        "typeName": {
                          "id": 33038,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 33037,
                            "name": "Ethernaut",
                            "nameLocations": [
                              "341:9:88"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 28992,
                            "src": "341:9:88"
                          },
                          "referencedDeclaration": 28992,
                          "src": "341:9:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Ethernaut_$28992",
                            "typeString": "contract Ethernaut"
                          }
                        }
                      },
                      "id": 33040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "337:15:88",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Ethernaut_$28992",
                        "typeString": "contract Ethernaut"
                      }
                    },
                    "src": "325:27:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Ethernaut_$28992",
                      "typeString": "contract Ethernaut"
                    }
                  },
                  "id": 33042,
                  "nodeType": "ExpressionStatement",
                  "src": "325:27:88"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "247:5:88",
            "parameters": {
              "id": 33034,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "252:2:88"
            },
            "returnParameters": {
              "id": 33035,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "262:0:88"
            },
            "scope": 33146,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33145,
            "nodeType": "FunctionDefinition",
            "src": "365:1380:88",
            "nodes": [],
            "body": {
              "id": 33144,
              "nodeType": "Block",
              "src": "400:1345:88",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    33049
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33049,
                      "mutability": "mutable",
                      "name": "coinFlipFactory",
                      "nameLocation": "505:15:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 33144,
                      "src": "489:31:88",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CoinFlipFactory_$27165",
                        "typeString": "contract CoinFlipFactory"
                      },
                      "typeName": {
                        "id": 33048,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 33047,
                          "name": "CoinFlipFactory",
                          "nameLocations": [
                            "489:15:88"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 27165,
                          "src": "489:15:88"
                        },
                        "referencedDeclaration": 27165,
                        "src": "489:15:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CoinFlipFactory_$27165",
                          "typeString": "contract CoinFlipFactory"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33054,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 33052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "523:19:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_CoinFlipFactory_$27165_$",
                        "typeString": "function () returns (contract CoinFlipFactory)"
                      },
                      "typeName": {
                        "id": 33051,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 33050,
                          "name": "CoinFlipFactory",
                          "nameLocations": [
                            "527:15:88"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 27165,
                          "src": "527:15:88"
                        },
                        "referencedDeclaration": 27165,
                        "src": "527:15:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CoinFlipFactory_$27165",
                          "typeString": "contract CoinFlipFactory"
                        }
                      }
                    },
                    "id": 33053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "523:21:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CoinFlipFactory_$27165",
                      "typeString": "contract CoinFlipFactory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "489:55:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33058,
                        "name": "coinFlipFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33049,
                        "src": "578:15:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CoinFlipFactory_$27165",
                          "typeString": "contract CoinFlipFactory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CoinFlipFactory_$27165",
                          "typeString": "contract CoinFlipFactory"
                        }
                      ],
                      "expression": {
                        "id": 33055,
                        "name": "ethernaut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33033,
                        "src": "554:9:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ethernaut_$28992",
                          "typeString": "contract Ethernaut"
                        }
                      },
                      "id": 33057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "564:13:88",
                      "memberName": "registerLevel",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28861,
                      "src": "554:23:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Level_$27027_$returns$__$",
                        "typeString": "function (contract Level) external"
                      }
                    },
                    "id": 33059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "554:40:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33060,
                  "nodeType": "ExpressionStatement",
                  "src": "554:40:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 33064,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "618:2:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 33065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "621:6:88",
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "618:9:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 33061,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1730,
                        "src": "604:2:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$9209",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "607:10:88",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8937,
                      "src": "604:13:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 33066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "604:24:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33067,
                  "nodeType": "ExpressionStatement",
                  "src": "604:24:88"
                },
                {
                  "assignments": [
                    33069
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33069,
                      "mutability": "mutable",
                      "name": "levelAddress",
                      "nameLocation": "646:12:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 33144,
                      "src": "638:20:88",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 33068,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "638:7:88",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33074,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 33072,
                        "name": "coinFlipFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33049,
                        "src": "691:15:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CoinFlipFactory_$27165",
                          "typeString": "contract CoinFlipFactory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CoinFlipFactory_$27165",
                          "typeString": "contract CoinFlipFactory"
                        }
                      ],
                      "expression": {
                        "id": 33070,
                        "name": "ethernaut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33033,
                        "src": "661:9:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ethernaut_$28992",
                          "typeString": "contract Ethernaut"
                        }
                      },
                      "id": 33071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "671:19:88",
                      "memberName": "createLevelInstance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28935,
                      "src": "661:29:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_contract$_Level_$27027_$returns$_t_address_$",
                        "typeString": "function (contract Level) payable external returns (address)"
                      }
                    },
                    "id": 33073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "661:46:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "638:69:88"
                },
                {
                  "assignments": [
                    33077
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33077,
                      "mutability": "mutable",
                      "name": "ethernautCoinFlip",
                      "nameLocation": "726:17:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 33144,
                      "src": "717:26:88",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CoinFlip_$27115",
                        "typeString": "contract CoinFlip"
                      },
                      "typeName": {
                        "id": 33076,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 33075,
                          "name": "CoinFlip",
                          "nameLocations": [
                            "717:8:88"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 27115,
                          "src": "717:8:88"
                        },
                        "referencedDeclaration": 27115,
                        "src": "717:8:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CoinFlip_$27115",
                          "typeString": "contract CoinFlip"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33084,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33081,
                            "name": "levelAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33069,
                            "src": "763:12:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 33080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "755:8:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 33079,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "755:8:88",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "755:21:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 33078,
                      "name": "CoinFlip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27115,
                      "src": "746:8:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_CoinFlip_$27115_$",
                        "typeString": "type(contract CoinFlip)"
                      }
                    },
                    "id": 33083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "746:31:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CoinFlip_$27115",
                      "typeString": "contract CoinFlip"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "717:60:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "35",
                        "id": 33088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "944:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "expression": {
                        "id": 33085,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1730,
                        "src": "936:2:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$9209",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "939:4:88",
                      "memberName": "roll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8896,
                      "src": "936:7:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 33089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "936:10:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33090,
                  "nodeType": "ExpressionStatement",
                  "src": "936:10:88"
                },
                {
                  "assignments": [
                    33093
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33093,
                      "mutability": "mutable",
                      "name": "coinFlipHack",
                      "nameLocation": "1010:12:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 33144,
                      "src": "997:25:88",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CoinFlipHack_$27232",
                        "typeString": "contract CoinFlipHack"
                      },
                      "typeName": {
                        "id": 33092,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 33091,
                          "name": "CoinFlipHack",
                          "nameLocations": [
                            "997:12:88"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 27232,
                          "src": "997:12:88"
                        },
                        "referencedDeclaration": 27232,
                        "src": "997:12:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CoinFlipHack_$27232",
                          "typeString": "contract CoinFlipHack"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33099,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 33097,
                        "name": "levelAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33069,
                        "src": "1042:12:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1025:16:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_CoinFlipHack_$27232_$",
                        "typeString": "function (address) returns (contract CoinFlipHack)"
                      },
                      "typeName": {
                        "id": 33095,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 33094,
                          "name": "CoinFlipHack",
                          "nameLocations": [
                            "1029:12:88"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 27232,
                          "src": "1029:12:88"
                        },
                        "referencedDeclaration": 27232,
                        "src": "1029:12:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CoinFlipHack_$27232",
                          "typeString": "contract CoinFlipHack"
                        }
                      }
                    },
                    "id": 33098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1025:30:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CoinFlipHack_$27232",
                      "typeString": "contract CoinFlipHack"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "997:58:88"
                },
                {
                  "body": {
                    "id": 33123,
                    "nodeType": "Block",
                    "src": "1208:256:88",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 33115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "36",
                                "id": 33113,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1412:1:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 33114,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33101,
                                "src": "1416:1:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1412:5:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 33110,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1730,
                              "src": "1404:2:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$9209",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 33112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1407:4:88",
                            "memberName": "roll",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8896,
                            "src": "1404:7:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 33116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1404:14:88",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33117,
                        "nodeType": "ExpressionStatement",
                        "src": "1404:14:88"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 33118,
                              "name": "coinFlipHack",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33093,
                              "src": "1432:12:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CoinFlipHack_$27232",
                                "typeString": "contract CoinFlipHack"
                              }
                            },
                            "id": 33120,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1445:6:88",
                            "memberName": "attack",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27227,
                            "src": "1432:19:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 33121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1432:21:88",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33122,
                        "nodeType": "ExpressionStatement",
                        "src": "1432:21:88"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 33104,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33101,
                      "src": "1194:1:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "3130",
                      "id": 33105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1199:2:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "1194:7:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33124,
                  "initializationExpression": {
                    "assignments": [
                      33101
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 33101,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1187:1:88",
                        "nodeType": "VariableDeclaration",
                        "scope": 33124,
                        "src": "1179:9:88",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 33100,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1179:7:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 33103,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 33102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1191:1:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1179:13:88"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 33108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1203:3:88",
                      "subExpression": {
                        "id": 33107,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33101,
                        "src": "1203:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 33109,
                    "nodeType": "ExpressionStatement",
                    "src": "1203:3:88"
                  },
                  "nodeType": "ForStatement",
                  "src": "1174:290:88"
                },
                {
                  "assignments": [
                    33126
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33126,
                      "mutability": "mutable",
                      "name": "levelSuccessfullyPassed",
                      "nameLocation": "1573:23:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 33144,
                      "src": "1568:28:88",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 33125,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1568:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33134,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33131,
                            "name": "levelAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33069,
                            "src": "1650:12:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 33130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1642:8:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 33129,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1642:8:88",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1642:21:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 33127,
                        "name": "ethernaut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33033,
                        "src": "1599:9:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ethernaut_$28992",
                          "typeString": "contract Ethernaut"
                        }
                      },
                      "id": 33128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1609:19:88",
                      "memberName": "submitLevelInstance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28991,
                      "src": "1599:29:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$_t_bool_$",
                        "typeString": "function (address payable) external returns (bool)"
                      }
                    },
                    "id": 33133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1599:74:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1568:105:88"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 33135,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1730,
                        "src": "1683:2:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$9209",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1686:9:88",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8954,
                      "src": "1683:12:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 33138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1683:14:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33139,
                  "nodeType": "ExpressionStatement",
                  "src": "1683:14:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33141,
                        "name": "levelSuccessfullyPassed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33126,
                        "src": "1714:23:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 33140,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1707:6:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 33142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1707:31:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33143,
                  "nodeType": "ExpressionStatement",
                  "src": "1707:31:88"
                }
              ]
            },
            "functionSelector": "51c3b4f1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCoinFlipHack",
            "nameLocation": "374:16:88",
            "parameters": {
              "id": 33045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "390:2:88"
            },
            "returnParameters": {
              "id": 33046,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "400:0:88"
            },
            "scope": 33146,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 33029,
              "name": "Test",
              "nameLocations": [
                "201:4:88"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8052,
              "src": "201:4:88"
            },
            "id": 33030,
            "nodeType": "InheritanceSpecifier",
            "src": "201:4:88"
          }
        ],
        "canonicalName": "CoinFlipTest",
        "contractDependencies": [
          27165,
          27232,
          28992
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          33146,
          8052,
          1737,
          1734,
          8010,
          5038,
          4649,
          3101,
          2565,
          1680
        ],
        "name": "CoinFlipTest",
        "nameLocation": "185:12:88",
        "scope": 33147,
        "usedErrors": []
      }
    ]
  },
  "id": 88
}