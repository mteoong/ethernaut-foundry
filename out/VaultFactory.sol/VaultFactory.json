{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_player",
          "type": "address"
        }
      ],
      "name": "createInstance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_instance",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "validateInstance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105208061007e6000396000f3fe60806040526004361061004a5760003560e01c8063715018a61461004f5780637726f776146100665780638da5cb5b14610096578063d38def5b146100b4578063f2fde38b146100e4575b600080fd5b34801561005b57600080fd5b50610064610104565b005b610079610074366004610333565b610118565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100a257600080fd5b506000546001600160a01b0316610079565b3480156100c057600080fd5b506100d46100cf366004610357565b610178565b604051901515815260200161008d565b3480156100f057600080fd5b506100646100ff366004610333565b6101e9565b61010c610267565b61011660006102c1565b565b6000807f412076657279207374726f6e67207365637265742070617373776f7264203a29905060008160405161014d90610311565b908152602001604051809103906000f08015801561016f573d6000803e3d6000fd5b50949350505050565b600080839050806001600160a01b031663cf3090126040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e09190610390565b15949350505050565b6101f1610267565b6001600160a01b03811661025b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610264816102c1565b50565b6000546001600160a01b031633146101165760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610252565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610138806103b383390190565b6001600160a01b038116811461026457600080fd5b60006020828403121561034557600080fd5b81356103508161031e565b9392505050565b6000806040838503121561036a57600080fd5b82356103758161031e565b915060208301356103858161031e565b809150509250929050565b6000602082840312156103a257600080fd5b8151801515811461035057600080fdfe608060405234801561001057600080fd5b5060405161013838038061013883398101604081905261002f91610045565b6000805460ff191660019081179091555561005e565b60006020828403121561005757600080fd5b5051919050565b60cc8061006c6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c8063cf309012146037578063ec9b5b3a146057575b600080fd5b60005460439060ff1681565b604051901515815260200160405180910390f35b60666062366004607e565b6068565b005b8060015403607b576000805460ff191690555b50565b600060208284031215608f57600080fd5b503591905056fea26469706673582212205ac7bcee9b677ae840885adb04ca42e8e4c4fd5d1ba521f2c06a2ded1d7dfd7a64736f6c63430008110033a26469706673582212202469d1aaf8c548637060436c952004181a846caabe78681a96c9a2afd59aae1a64736f6c63430008110033",
    "sourceMap": "109:442:73:-:0;;;;;;;;;;;;-1:-1:-1;936:32:1;719:10:7;936:18:1;:32::i;:::-;109:442:73;;2433:187:1;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:1;;;-1:-1:-1;;;;;;2541:17:1;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;109:442:73:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061004a5760003560e01c8063715018a61461004f5780637726f776146100665780638da5cb5b14610096578063d38def5b146100b4578063f2fde38b146100e4575b600080fd5b34801561005b57600080fd5b50610064610104565b005b610079610074366004610333565b610118565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100a257600080fd5b506000546001600160a01b0316610079565b3480156100c057600080fd5b506100d46100cf366004610357565b610178565b604051901515815260200161008d565b3480156100f057600080fd5b506100646100ff366004610333565b6101e9565b61010c610267565b61011660006102c1565b565b6000807f412076657279207374726f6e67207365637265742070617373776f7264203a29905060008160405161014d90610311565b908152602001604051809103906000f08015801561016f573d6000803e3d6000fd5b50949350505050565b600080839050806001600160a01b031663cf3090126040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e09190610390565b15949350505050565b6101f1610267565b6001600160a01b03811661025b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610264816102c1565b50565b6000546001600160a01b031633146101165760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610252565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610138806103b383390190565b6001600160a01b038116811461026457600080fd5b60006020828403121561034557600080fd5b81356103508161031e565b9392505050565b6000806040838503121561036a57600080fd5b82356103758161031e565b915060208301356103858161031e565b809150509250929050565b6000602082840312156103a257600080fd5b8151801515811461035057600080fdfe608060405234801561001057600080fd5b5060405161013838038061013883398101604081905261002f91610045565b6000805460ff191660019081179091555561005e565b60006020828403121561005757600080fd5b5051919050565b60cc8061006c6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c8063cf309012146037578063ec9b5b3a146057575b600080fd5b60005460439060ff1681565b604051901515815260200160405180910390f35b60666062366004607e565b6068565b005b8060015403607b576000805460ff191690555b50565b600060208284031215608f57600080fd5b503591905056fea26469706673582212205ac7bcee9b677ae840885adb04ca42e8e4c4fd5d1ba521f2c06a2ded1d7dfd7a64736f6c63430008110033a26469706673582212202469d1aaf8c548637060436c952004181a846caabe78681a96c9a2afd59aae1a64736f6c63430008110033",
    "sourceMap": "109:442:73:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1831:101:1;;;;;;;;;;;;;:::i;:::-;;145:232:73;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;566:32:100;;;548:51;;536:2;521:18;145:232:73;;;;;;;;1201:85:1;;;;;;;;;;-1:-1:-1;1247:7:1;1273:6;-1:-1:-1;;;;;1273:6:1;1201:85;;381:168:73;;;;;;;;;;-1:-1:-1;381:168:73;;;;;:::i;:::-;;:::i;:::-;;;1176:14:100;;1169:22;1151:41;;1139:2;1124:18;381:168:73;1011:187:100;2081:198:1;;;;;;;;;;-1:-1:-1;2081:198:1;;;;;:::i;:::-;;:::i;1831:101::-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;145:232:73:-;219:7;247:16;:53;;;306:14;333:8;323:19;;;;;:::i;:::-;1349:25:100;;;1337:2;1322:18;323:19:73;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;306:36:73;145:232;-1:-1:-1;;;;145:232:73:o;381:168::-;468:4;480:14;503:9;480:33;;527:8;-1:-1:-1;;;;;527:15:73;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;526:18;;381:168;-1:-1:-1;;;;381:168:73:o;2081:198:1:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:1;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:1;;1869:2:100;2161:73:1::1;::::0;::::1;1851:21:100::0;1908:2;1888:18;;;1881:30;1947:34;1927:18;;;1920:62;-1:-1:-1;;;1998:18:100;;;1991:36;2044:19;;2161:73:1::1;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:1;719:10:7;1422:23:1;1414:68;;;;-1:-1:-1;;;1414:68:1;;2276:2:100;1414:68:1;;;2258:21:100;;;2295:18;;;2288:30;2354:34;2334:18;;;2327:62;2406:18;;1414:68:1;2074:356:100;2433:187:1;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:1;;;-1:-1:-1;;;;;;2541:17:1;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;-1:-1:-1:-;;;;;;;;:::o;14:131:100:-;-1:-1:-1;;;;;89:31:100;;79:42;;69:70;;135:1;132;125:12;150:247;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;:::-;386:5;150:247;-1:-1:-1;;;150:247:100:o;610:396::-;686:6;694;747:2;735:9;726:7;722:23;718:32;715:52;;;763:1;760;753:12;715:52;802:9;789:23;821:31;846:5;821:31;:::i;:::-;871:5;-1:-1:-1;928:2:100;913:18;;900:32;941:33;900:32;941:33;:::i;:::-;993:7;983:17;;;610:396;;;;;:::o;1385:277::-;1452:6;1505:2;1493:9;1484:7;1480:23;1476:32;1473:52;;;1521:1;1518;1511:12;1473:52;1553:9;1547:16;1606:5;1599:13;1592:21;1585:5;1582:32;1572:60;;1628:1;1625;1618:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "createInstance(address)": "7726f776",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "transferOwnership(address)": "f2fde38b",
    "validateInstance(address,address)": "d38def5b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_player\",\"type\":\"address\"}],\"name\":\"createInstance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_instance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"validateInstance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Vault/VaultFactory.sol\":\"VaultFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/ds-test/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/BaseLevel.sol\":{\"keccak256\":\"0x96532046614f14ded4ed0582d37d1bfb6d8ce0423403094476ae9533323a5af8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b9e8bbc7f3c8d982885e58c27a2d063008abef55e70db5eae1358e3d5f7f5b0\",\"dweb:/ipfs/QmNpDPfDEeYYAdYM14p3ef3wgcgjNYjCqwXqKT6mVv8MK8\"]},\"src/Vault/Vault.sol\":{\"keccak256\":\"0x9a3ca72a7af029e2c9dcd21ab19e1190c5384f4355b0544595ca5bc17020ab5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://beef1f0da71c020fdcaf9ee3797b7ca97ff20adf74449802454f5ffd24d02ec0\",\"dweb:/ipfs/QmTwXXhhKDmAZAjDwh13Fy2FP2vgJWBZpGUm9J5mgU3fnf\"]},\"src/Vault/VaultFactory.sol\":{\"keccak256\":\"0xec9730ceb0bf57b6f87943fc406ad94377c83cec3cc6f4c83f8f4d3df645c113\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5268ef91f10bc9436b2b32406081ebcdbb93866c7dc8ad511daea76fbb35fdd2\",\"dweb:/ipfs/QmZf3hGSQRh4iuiSmz3BjfC32PRbZPjPjMxrkLgybievtj\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_player",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "createInstance",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "_instance",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "validateInstance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/ds-test/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Vault/VaultFactory.sol": "VaultFactory"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/BaseLevel.sol": {
        "keccak256": "0x96532046614f14ded4ed0582d37d1bfb6d8ce0423403094476ae9533323a5af8",
        "urls": [
          "bzz-raw://9b9e8bbc7f3c8d982885e58c27a2d063008abef55e70db5eae1358e3d5f7f5b0",
          "dweb:/ipfs/QmNpDPfDEeYYAdYM14p3ef3wgcgjNYjCqwXqKT6mVv8MK8"
        ],
        "license": "MIT"
      },
      "src/Vault/Vault.sol": {
        "keccak256": "0x9a3ca72a7af029e2c9dcd21ab19e1190c5384f4355b0544595ca5bc17020ab5c",
        "urls": [
          "bzz-raw://beef1f0da71c020fdcaf9ee3797b7ca97ff20adf74449802454f5ffd24d02ec0",
          "dweb:/ipfs/QmTwXXhhKDmAZAjDwh13Fy2FP2vgJWBZpGUm9J5mgU3fnf"
        ],
        "license": "MIT"
      },
      "src/Vault/VaultFactory.sol": {
        "keccak256": "0xec9730ceb0bf57b6f87943fc406ad94377c83cec3cc6f4c83f8f4d3df645c113",
        "urls": [
          "bzz-raw://5268ef91f10bc9436b2b32406081ebcdbb93866c7dc8ad511daea76fbb35fdd2",
          "dweb:/ipfs/QmZf3hGSQRh4iuiSmz3BjfC32PRbZPjPjMxrkLgybievtj"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Vault/VaultFactory.sol",
    "id": 9179,
    "exportedSymbols": {
      "Context": [
        3004
      ],
      "Level": [
        3338
      ],
      "Ownable": [
        1793
      ],
      "Vault": [
        9119
      ],
      "VaultFactory": [
        9178
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:518:73",
    "nodes": [
      {
        "id": 9121,
        "nodeType": "PragmaDirective",
        "src": "33:24:73",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 9122,
        "nodeType": "ImportDirective",
        "src": "59:26:73",
        "nodes": [],
        "absolutePath": "src/BaseLevel.sol",
        "file": "../BaseLevel.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9179,
        "sourceUnit": 3339,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9123,
        "nodeType": "ImportDirective",
        "src": "86:21:73",
        "nodes": [],
        "absolutePath": "src/Vault/Vault.sol",
        "file": "./Vault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9179,
        "sourceUnit": 9120,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9178,
        "nodeType": "ContractDefinition",
        "src": "109:442:73",
        "nodes": [
          {
            "id": 9154,
            "nodeType": "FunctionDefinition",
            "src": "145:232:73",
            "nodes": [],
            "body": {
              "id": 9153,
              "nodeType": "Block",
              "src": "228:149:73",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 9133,
                    "name": "_player",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9127,
                    "src": "234:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9134,
                  "nodeType": "ExpressionStatement",
                  "src": "234:7:73"
                },
                {
                  "assignments": [
                    9136
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9136,
                      "mutability": "mutable",
                      "name": "password",
                      "nameLocation": "255:8:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 9153,
                      "src": "247:16:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 9135,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "247:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9138,
                  "initialValue": {
                    "hexValue": "412076657279207374726f6e67207365637265742070617373776f7264203a29",
                    "id": 9137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "266:34:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_bf7beae9e8d8f78c3f0da5a4b24a4866e862d83b9b687570197492967d86fec4",
                      "typeString": "literal_string \"A very strong secret password :)\""
                    },
                    "value": "A very strong secret password :)"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "247:53:73"
                },
                {
                  "assignments": [
                    9141
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9141,
                      "mutability": "mutable",
                      "name": "instance",
                      "nameLocation": "312:8:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 9153,
                      "src": "306:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vault_$9119",
                        "typeString": "contract Vault"
                      },
                      "typeName": {
                        "id": 9140,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9139,
                          "name": "Vault",
                          "nameLocations": [
                            "306:5:73"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9119,
                          "src": "306:5:73"
                        },
                        "referencedDeclaration": 9119,
                        "src": "306:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vault_$9119",
                          "typeString": "contract Vault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9147,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9145,
                        "name": "password",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9136,
                        "src": "333:8:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 9144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "323:9:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_bytes32_$returns$_t_contract$_Vault_$9119_$",
                        "typeString": "function (bytes32) returns (contract Vault)"
                      },
                      "typeName": {
                        "id": 9143,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9142,
                          "name": "Vault",
                          "nameLocations": [
                            "327:5:73"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9119,
                          "src": "327:5:73"
                        },
                        "referencedDeclaration": 9119,
                        "src": "327:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vault_$9119",
                          "typeString": "contract Vault"
                        }
                      }
                    },
                    "id": 9146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "323:19:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Vault_$9119",
                      "typeString": "contract Vault"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "306:36:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9150,
                        "name": "instance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9141,
                        "src": "363:8:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vault_$9119",
                          "typeString": "contract Vault"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Vault_$9119",
                          "typeString": "contract Vault"
                        }
                      ],
                      "id": 9149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "355:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 9148,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "355:7:73",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 9151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "355:17:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 9132,
                  "id": 9152,
                  "nodeType": "Return",
                  "src": "348:24:73"
                }
              ]
            },
            "baseFunctions": [
              3328
            ],
            "functionSelector": "7726f776",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createInstance",
            "nameLocation": "154:14:73",
            "overrides": {
              "id": 9129,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "186:8:73"
            },
            "parameters": {
              "id": 9128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9127,
                  "mutability": "mutable",
                  "name": "_player",
                  "nameLocation": "177:7:73",
                  "nodeType": "VariableDeclaration",
                  "scope": 9154,
                  "src": "169:15:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9126,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "169:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "168:17:73"
            },
            "returnParameters": {
              "id": 9132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9131,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9154,
                  "src": "219:7:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "219:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "218:9:73"
            },
            "scope": 9178,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 9177,
            "nodeType": "FunctionDefinition",
            "src": "381:168:73",
            "nodes": [],
            "body": {
              "id": 9176,
              "nodeType": "Block",
              "src": "474:75:73",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    9166
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9166,
                      "mutability": "mutable",
                      "name": "instance",
                      "nameLocation": "486:8:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 9176,
                      "src": "480:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vault_$9119",
                        "typeString": "contract Vault"
                      },
                      "typeName": {
                        "id": 9165,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9164,
                          "name": "Vault",
                          "nameLocations": [
                            "480:5:73"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9119,
                          "src": "480:5:73"
                        },
                        "referencedDeclaration": 9119,
                        "src": "480:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vault_$9119",
                          "typeString": "contract Vault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9170,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9168,
                        "name": "_instance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9156,
                        "src": "503:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 9167,
                      "name": "Vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9119,
                      "src": "497:5:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Vault_$9119_$",
                        "typeString": "type(contract Vault)"
                      }
                    },
                    "id": 9169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "497:16:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Vault_$9119",
                      "typeString": "contract Vault"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "480:33:73"
                },
                {
                  "expression": {
                    "id": 9174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "526:18:73",
                    "subExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 9171,
                          "name": "instance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9166,
                          "src": "527:8:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vault_$9119",
                            "typeString": "contract Vault"
                          }
                        },
                        "id": 9172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "536:6:73",
                        "memberName": "locked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9087,
                        "src": "527:15:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                          "typeString": "function () view external returns (bool)"
                        }
                      },
                      "id": 9173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "527:17:73",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 9163,
                  "id": 9175,
                  "nodeType": "Return",
                  "src": "519:25:73"
                }
              ]
            },
            "baseFunctions": [
              3337
            ],
            "functionSelector": "d38def5b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validateInstance",
            "nameLocation": "390:16:73",
            "overrides": {
              "id": 9160,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "443:8:73"
            },
            "parameters": {
              "id": 9159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9156,
                  "mutability": "mutable",
                  "name": "_instance",
                  "nameLocation": "423:9:73",
                  "nodeType": "VariableDeclaration",
                  "scope": 9177,
                  "src": "407:25:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 9155,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "407:15:73",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9158,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9177,
                  "src": "434:7:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9157,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "434:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "406:36:73"
            },
            "returnParameters": {
              "id": 9163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9162,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9177,
                  "src": "468:4:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9161,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "468:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "467:6:73"
            },
            "scope": 9178,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9124,
              "name": "Level",
              "nameLocations": [
                "134:5:73"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3338,
              "src": "134:5:73"
            },
            "id": 9125,
            "nodeType": "InheritanceSpecifier",
            "src": "134:5:73"
          }
        ],
        "canonicalName": "VaultFactory",
        "contractDependencies": [
          9119
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          9178,
          3338,
          1793,
          3004
        ],
        "name": "VaultFactory",
        "nameLocation": "118:12:73",
        "scope": 9179,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 73
}